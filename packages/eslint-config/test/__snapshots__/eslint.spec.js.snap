// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`keeps rules stable *.d.ts 1`] = `
Object {
  "env": Object {
    "browser": true,
    "es6": true,
  },
  "globals": Object {},
  "ignorePatterns": Array [],
  "noInlineConfig": undefined,
  "parser": "<rootDir>/node_modules/@typescript-eslint/parser/dist/index.js",
  "parserOptions": Object {
    "ecmaFeatures": Object {
      "jsx": true,
    },
    "ecmaVersion": 2020,
    "project": "<rootDir>/tsconfig.json",
    "sourceType": "module",
  },
  "plugins": Array [
    "switch-case",
    "gettext",
    "import",
    "jsdoc",
    "prettier",
    "react",
    "jsx-a11y",
    "react-hooks",
    "@bigcommerce",
    "@typescript-eslint",
  ],
  "reportUnusedDisableDirectives": true,
  "rules": Object {
    "@babel/object-curly-spacing": Array [
      "off",
    ],
    "@babel/semi": Array [
      "off",
    ],
    "@bigcommerce/jsx-short-circuit-conditionals": Array [
      "error",
    ],
    "@typescript-eslint/adjacent-overload-signatures": Array [
      "error",
    ],
    "@typescript-eslint/array-type": Array [
      "error",
      Object {
        "default": "array-simple",
      },
    ],
    "@typescript-eslint/await-thenable": Array [
      "error",
    ],
    "@typescript-eslint/ban-ts-comment": Array [
      "error",
    ],
    "@typescript-eslint/ban-types": Array [
      "error",
    ],
    "@typescript-eslint/brace-style": Array [
      "off",
    ],
    "@typescript-eslint/comma-dangle": Array [
      "off",
    ],
    "@typescript-eslint/comma-spacing": Array [
      "off",
    ],
    "@typescript-eslint/consistent-type-assertions": Array [
      "error",
      Object {
        "assertionStyle": "never",
      },
    ],
    "@typescript-eslint/consistent-type-definitions": Array [
      "error",
    ],
    "@typescript-eslint/default-param-last": Array [
      "error",
    ],
    "@typescript-eslint/dot-notation": Array [
      "error",
      Object {
        "allowIndexSignaturePropertyAccess": false,
        "allowKeywords": true,
        "allowPattern": "",
        "allowPrivateClassPropertyAccess": false,
        "allowProtectedClassPropertyAccess": false,
      },
    ],
    "@typescript-eslint/explicit-function-return-type": Array [
      "off",
    ],
    "@typescript-eslint/explicit-member-accessibility": Array [
      "error",
      Object {
        "accessibility": "no-public",
      },
    ],
    "@typescript-eslint/explicit-module-boundary-types": Array [
      "off",
    ],
    "@typescript-eslint/func-call-spacing": Array [
      "off",
    ],
    "@typescript-eslint/indent": Array [
      "off",
    ],
    "@typescript-eslint/keyword-spacing": Array [
      "off",
    ],
    "@typescript-eslint/member-delimiter-style": Array [
      "off",
    ],
    "@typescript-eslint/member-ordering": Array [
      "error",
    ],
    "@typescript-eslint/naming-convention": Array [
      "error",
      Object {
        "format": Array [
          "camelCase",
          "PascalCase",
        ],
        "selector": "default",
      },
      Object {
        "format": Array [
          "camelCase",
          "PascalCase",
          "UPPER_CASE",
        ],
        "selector": "variable",
      },
      Object {
        "format": Array [
          "camelCase",
          "UPPER_CASE",
        ],
        "selector": "variable",
        "types": Array [
          "boolean",
          "string",
          "number",
          "array",
        ],
      },
      Object {
        "format": Array [
          "camelCase",
        ],
        "selector": "property",
      },
      Object {
        "format": Array [
          "camelCase",
        ],
        "selector": "parameterProperty",
      },
      Object {
        "format": Array [
          "PascalCase",
        ],
        "selector": "typeLike",
      },
      Object {
        "format": Array [
          "PascalCase",
          "UPPER_CASE",
        ],
        "selector": "enumMember",
      },
      Object {
        "format": Array [
          "camelCase",
        ],
        "selector": "parameter",
      },
      Object {
        "format": Array [
          "camelCase",
        ],
        "leadingUnderscore": "allow",
        "modifiers": Array [
          "unused",
        ],
        "selector": "parameter",
      },
      Object {
        "format": null,
        "modifiers": Array [
          "requiresQuotes",
        ],
        "selector": Array [
          "objectLiteralProperty",
          "typeProperty",
        ],
      },
    ],
    "@typescript-eslint/no-array-constructor": Array [
      "error",
    ],
    "@typescript-eslint/no-duplicate-imports": Array [
      "error",
    ],
    "@typescript-eslint/no-empty-function": Array [
      "error",
    ],
    "@typescript-eslint/no-empty-interface": Array [
      "error",
    ],
    "@typescript-eslint/no-explicit-any": Array [
      "error",
    ],
    "@typescript-eslint/no-extra-non-null-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-extra-parens": Array [
      "off",
    ],
    "@typescript-eslint/no-extra-semi": Array [
      "error",
    ],
    "@typescript-eslint/no-floating-promises": Array [
      "error",
    ],
    "@typescript-eslint/no-for-in-array": Array [
      "error",
    ],
    "@typescript-eslint/no-implied-eval": Array [
      "error",
    ],
    "@typescript-eslint/no-inferrable-types": Array [
      "error",
    ],
    "@typescript-eslint/no-loss-of-precision": Array [
      "error",
    ],
    "@typescript-eslint/no-misused-new": Array [
      "error",
    ],
    "@typescript-eslint/no-misused-promises": Array [
      "error",
    ],
    "@typescript-eslint/no-namespace": Array [
      "error",
      Object {
        "allowDeclarations": true,
      },
    ],
    "@typescript-eslint/no-non-null-asserted-optional-chain": Array [
      "error",
    ],
    "@typescript-eslint/no-non-null-assertion": Array [
      "warn",
    ],
    "@typescript-eslint/no-shadow": Array [
      "error",
      Object {
        "hoist": "all",
      },
    ],
    "@typescript-eslint/no-this-alias": Array [
      "error",
    ],
    "@typescript-eslint/no-throw-literal": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-condition": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-type-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-type-constraint": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-argument": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-assignment": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-call": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-member-access": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-return": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-expressions": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-vars": Array [
      "error",
      Object {
        "args": "after-used",
        "ignoreRestSiblings": true,
        "vars": "all",
      },
    ],
    "@typescript-eslint/no-use-before-define": Array [
      "error",
      "nofunc",
    ],
    "@typescript-eslint/no-useless-constructor": Array [
      "error",
    ],
    "@typescript-eslint/no-var-requires": Array [
      "error",
    ],
    "@typescript-eslint/object-curly-spacing": Array [
      "off",
    ],
    "@typescript-eslint/padding-line-between-statements": Array [
      "warn",
      Object {
        "blankLine": "always",
        "next": "return",
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": Array [
          "block",
          "block-like",
          "class",
          "const",
          "let",
          "var",
          "interface",
        ],
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": "*",
        "prev": Array [
          "block",
          "block-like",
          "class",
          "const",
          "let",
          "var",
          "interface",
        ],
      },
      Object {
        "blankLine": "any",
        "next": Array [
          "const",
          "let",
          "var",
        ],
        "prev": Array [
          "const",
          "let",
          "var",
        ],
      },
      Object {
        "blankLine": "any",
        "next": Array [
          "case",
        ],
        "prev": Array [
          "case",
        ],
      },
    ],
    "@typescript-eslint/prefer-as-const": Array [
      "error",
    ],
    "@typescript-eslint/prefer-for-of": Array [
      "error",
    ],
    "@typescript-eslint/prefer-function-type": Array [
      "error",
    ],
    "@typescript-eslint/prefer-namespace-keyword": Array [
      "error",
    ],
    "@typescript-eslint/quotes": Array [
      0,
    ],
    "@typescript-eslint/require-await": Array [
      "error",
    ],
    "@typescript-eslint/restrict-plus-operands": Array [
      "error",
    ],
    "@typescript-eslint/restrict-template-expressions": Array [
      "error",
    ],
    "@typescript-eslint/return-await": Array [
      "error",
    ],
    "@typescript-eslint/semi": Array [
      "off",
    ],
    "@typescript-eslint/space-before-function-paren": Array [
      "off",
    ],
    "@typescript-eslint/space-infix-ops": Array [
      "off",
    ],
    "@typescript-eslint/triple-slash-reference": Array [
      "error",
    ],
    "@typescript-eslint/type-annotation-spacing": Array [
      "off",
    ],
    "@typescript-eslint/unbound-method": Array [
      "off",
    ],
    "@typescript-eslint/unified-signatures": Array [
      "error",
    ],
    "array-bracket-newline": Array [
      "off",
    ],
    "array-bracket-spacing": Array [
      "off",
    ],
    "array-callback-return": Array [
      "error",
    ],
    "array-element-newline": Array [
      "off",
    ],
    "arrow-body-style": Array [
      "off",
      "as-needed",
      Object {
        "requireReturnForObjectLiteral": false,
      },
    ],
    "arrow-parens": Array [
      "off",
    ],
    "arrow-spacing": Array [
      "off",
    ],
    "babel/object-curly-spacing": Array [
      "off",
    ],
    "babel/quotes": Array [
      0,
    ],
    "babel/semi": Array [
      "off",
    ],
    "block-scoped-var": Array [
      "error",
    ],
    "block-spacing": Array [
      "off",
    ],
    "brace-style": Array [
      "off",
    ],
    "camelcase": Array [
      "off",
      Object {
        "ignoreDestructuring": false,
        "ignoreGlobals": false,
        "ignoreImports": false,
        "properties": "never",
      },
    ],
    "comma-dangle": Array [
      "off",
    ],
    "comma-spacing": Array [
      "off",
    ],
    "comma-style": Array [
      "off",
    ],
    "complexity": Array [
      "error",
    ],
    "computed-property-spacing": Array [
      "off",
    ],
    "consistent-return": Array [
      "off",
    ],
    "constructor-super": Array [
      "off",
    ],
    "curly": Array [
      "error",
      "all",
    ],
    "default-case": Array [
      "off",
    ],
    "default-param-last": Array [
      "off",
    ],
    "dot-location": Array [
      "off",
    ],
    "dot-notation": Array [
      "error",
      Object {
        "allowKeywords": true,
        "allowPattern": "",
      },
    ],
    "eol-last": Array [
      "off",
    ],
    "eqeqeq": Array [
      "error",
      "smart",
    ],
    "flowtype/boolean-style": Array [
      "off",
    ],
    "flowtype/delimiter-dangle": Array [
      "off",
    ],
    "flowtype/generic-spacing": Array [
      "off",
    ],
    "flowtype/object-type-curly-spacing": Array [
      "off",
    ],
    "flowtype/object-type-delimiter": Array [
      "off",
    ],
    "flowtype/quotes": Array [
      "off",
    ],
    "flowtype/semi": Array [
      "off",
    ],
    "flowtype/space-after-type-colon": Array [
      "off",
    ],
    "flowtype/space-before-generic-bracket": Array [
      "off",
    ],
    "flowtype/space-before-type-colon": Array [
      "off",
    ],
    "flowtype/union-intersection-spacing": Array [
      "off",
    ],
    "for-direction": Array [
      "error",
    ],
    "func-call-spacing": Array [
      "off",
    ],
    "func-names": Array [
      "warn",
    ],
    "function-call-argument-newline": Array [
      "off",
    ],
    "function-paren-newline": Array [
      "off",
    ],
    "generator-star": Array [
      "off",
    ],
    "generator-star-spacing": Array [
      "off",
    ],
    "getter-return": Array [
      "off",
      Object {
        "allowImplicit": true,
      },
    ],
    "gettext/no-variable-string": Array [
      "error",
    ],
    "global-require": Array [
      "error",
    ],
    "guard-for-in": Array [
      "error",
    ],
    "implicit-arrow-linebreak": Array [
      "off",
    ],
    "import/default": Array [
      "off",
    ],
    "import/dynamic-import-chunkname": Array [
      "error",
    ],
    "import/export": Array [
      2,
    ],
    "import/extensions": Array [
      "error",
      Object {
        "js": "never",
        "json": "always",
        "jsx": "never",
        "ts": "never",
        "tsx": "never",
      },
    ],
    "import/named": Array [
      "off",
    ],
    "import/namespace": Array [
      2,
    ],
    "import/newline-after-import": Array [
      "warn",
    ],
    "import/no-absolute-path": Array [
      "error",
    ],
    "import/no-amd": Array [
      "error",
    ],
    "import/no-duplicates": Array [
      1,
    ],
    "import/no-dynamic-require": Array [
      "error",
    ],
    "import/no-extraneous-dependencies": Array [
      "error",
    ],
    "import/no-mutable-exports": Array [
      "error",
    ],
    "import/no-named-as-default": Array [
      1,
    ],
    "import/no-named-as-default-member": Array [
      1,
    ],
    "import/no-named-default": Array [
      "error",
    ],
    "import/no-unresolved": Array [
      "error",
      Object {
        "caseSensitive": true,
        "caseSensitiveStrict": false,
        "commonjs": true,
      },
    ],
    "import/no-webpack-loader-syntax": Array [
      "error",
    ],
    "import/order": Array [
      "warn",
      Object {
        "alphabetize": Object {
          "caseInsensitive": true,
          "order": "asc",
        },
        "groups": Array [
          Array [
            "builtin",
            "external",
          ],
          "internal",
          "parent",
          "sibling",
          "index",
        ],
        "newlines-between": "always",
        "warnOnUnassignedImports": false,
      },
    ],
    "indent": Array [
      "off",
    ],
    "indent-legacy": Array [
      "off",
    ],
    "jsdoc/check-alignment": Array [
      "error",
    ],
    "jsdoc/check-param-names": Array [
      "error",
    ],
    "jsdoc/check-syntax": Array [
      "error",
    ],
    "jsdoc/check-tag-names": Array [
      "error",
    ],
    "jsdoc/implements-on-classes": Array [
      "error",
    ],
    "jsdoc/newline-after-description": Array [
      "error",
    ],
    "jsdoc/require-param-name": Array [
      "error",
    ],
    "jsdoc/require-param-type": Array [
      "error",
    ],
    "jsdoc/require-returns-check": Array [
      "error",
    ],
    "jsdoc/require-returns-type": Array [
      "error",
    ],
    "jsx-a11y/alt-text": Array [
      "error",
    ],
    "jsx-a11y/anchor-has-content": Array [
      "error",
    ],
    "jsx-a11y/anchor-is-valid": Array [
      "error",
    ],
    "jsx-a11y/aria-activedescendant-has-tabindex": Array [
      "error",
    ],
    "jsx-a11y/aria-props": Array [
      "error",
    ],
    "jsx-a11y/aria-proptypes": Array [
      "error",
    ],
    "jsx-a11y/aria-role": Array [
      "error",
    ],
    "jsx-a11y/aria-unsupported-elements": Array [
      "error",
    ],
    "jsx-a11y/autocomplete-valid": Array [
      "error",
    ],
    "jsx-a11y/click-events-have-key-events": Array [
      "error",
    ],
    "jsx-a11y/control-has-associated-label": Array [
      "off",
      Object {
        "ignoreElements": Array [
          "audio",
          "canvas",
          "embed",
          "input",
          "textarea",
          "tr",
          "video",
        ],
        "ignoreRoles": Array [
          "grid",
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "row",
          "tablist",
          "toolbar",
          "tree",
          "treegrid",
        ],
        "includeRoles": Array [
          "alert",
          "dialog",
        ],
      },
    ],
    "jsx-a11y/heading-has-content": Array [
      "error",
    ],
    "jsx-a11y/html-has-lang": Array [
      "error",
    ],
    "jsx-a11y/iframe-has-title": Array [
      "error",
    ],
    "jsx-a11y/img-redundant-alt": Array [
      "error",
    ],
    "jsx-a11y/interactive-supports-focus": Array [
      "error",
      Object {
        "tabbable": Array [
          "button",
          "checkbox",
          "link",
          "searchbox",
          "spinbutton",
          "switch",
          "textbox",
        ],
      },
    ],
    "jsx-a11y/label-has-associated-control": Array [
      "error",
    ],
    "jsx-a11y/label-has-for": Array [
      "off",
    ],
    "jsx-a11y/media-has-caption": Array [
      "error",
    ],
    "jsx-a11y/mouse-events-have-key-events": Array [
      "error",
    ],
    "jsx-a11y/no-access-key": Array [
      "error",
    ],
    "jsx-a11y/no-autofocus": Array [
      "error",
    ],
    "jsx-a11y/no-distracting-elements": Array [
      "error",
    ],
    "jsx-a11y/no-interactive-element-to-noninteractive-role": Array [
      "error",
      Object {
        "canvas": Array [
          "img",
        ],
        "tr": Array [
          "none",
          "presentation",
        ],
      },
    ],
    "jsx-a11y/no-noninteractive-element-interactions": Array [
      "error",
      Object {
        "alert": Array [
          "onKeyUp",
          "onKeyDown",
          "onKeyPress",
        ],
        "body": Array [
          "onError",
          "onLoad",
        ],
        "dialog": Array [
          "onKeyUp",
          "onKeyDown",
          "onKeyPress",
        ],
        "handlers": Array [
          "onClick",
          "onError",
          "onLoad",
          "onMouseDown",
          "onMouseUp",
          "onKeyPress",
          "onKeyDown",
          "onKeyUp",
        ],
        "iframe": Array [
          "onError",
          "onLoad",
        ],
        "img": Array [
          "onError",
          "onLoad",
        ],
      },
    ],
    "jsx-a11y/no-noninteractive-element-to-interactive-role": Array [
      "error",
      Object {
        "fieldset": Array [
          "radiogroup",
          "presentation",
        ],
        "li": Array [
          "menuitem",
          "option",
          "row",
          "tab",
          "treeitem",
        ],
        "ol": Array [
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "tablist",
          "tree",
          "treegrid",
        ],
        "table": Array [
          "grid",
        ],
        "td": Array [
          "gridcell",
        ],
        "ul": Array [
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "tablist",
          "tree",
          "treegrid",
        ],
      },
    ],
    "jsx-a11y/no-noninteractive-tabindex": Array [
      "error",
      Object {
        "allowExpressionValues": true,
        "roles": Array [
          "tabpanel",
        ],
        "tags": Array [],
      },
    ],
    "jsx-a11y/no-onchange": Array [
      "off",
    ],
    "jsx-a11y/no-redundant-roles": Array [
      "error",
    ],
    "jsx-a11y/no-static-element-interactions": Array [
      "error",
      Object {
        "allowExpressionValues": true,
        "handlers": Array [
          "onClick",
          "onMouseDown",
          "onMouseUp",
          "onKeyPress",
          "onKeyDown",
          "onKeyUp",
        ],
      },
    ],
    "jsx-a11y/role-has-required-aria-props": Array [
      "error",
    ],
    "jsx-a11y/role-supports-aria-props": Array [
      "error",
    ],
    "jsx-a11y/scope": Array [
      "error",
    ],
    "jsx-a11y/tabindex-no-positive": Array [
      "error",
    ],
    "jsx-quotes": Array [
      "off",
    ],
    "key-spacing": Array [
      "off",
    ],
    "keyword-spacing": Array [
      "off",
    ],
    "linebreak-style": Array [
      "off",
    ],
    "lines-around-comment": Array [
      0,
    ],
    "lines-around-directive": Array [
      "error",
      Object {
        "after": "always",
        "before": "always",
      },
    ],
    "max-classes-per-file": Array [
      "error",
      1,
    ],
    "max-len": Array [
      0,
    ],
    "multiline-ternary": Array [
      "off",
    ],
    "new-cap": Array [
      "error",
      Object {
        "capIsNew": false,
        "capIsNewExceptions": Array [
          "Immutable.Map",
          "Immutable.Set",
          "Immutable.List",
        ],
        "newIsCap": true,
        "newIsCapExceptions": Array [],
        "properties": true,
      },
    ],
    "new-parens": Array [
      "off",
    ],
    "newline-per-chained-call": Array [
      "off",
    ],
    "no-alert": Array [
      "warn",
    ],
    "no-array-constructor": Array [
      "off",
    ],
    "no-arrow-condition": Array [
      "off",
    ],
    "no-async-promise-executor": Array [
      "error",
    ],
    "no-await-in-loop": Array [
      "error",
    ],
    "no-bitwise": Array [
      "error",
    ],
    "no-buffer-constructor": Array [
      "error",
    ],
    "no-caller": Array [
      "error",
    ],
    "no-case-declarations": Array [
      "error",
    ],
    "no-class-assign": Array [
      "error",
    ],
    "no-comma-dangle": Array [
      "off",
    ],
    "no-compare-neg-zero": Array [
      "error",
    ],
    "no-cond-assign": Array [
      "error",
      "always",
    ],
    "no-confusing-arrow": Array [
      0,
    ],
    "no-console": Array [
      "warn",
    ],
    "no-const-assign": Array [
      "off",
    ],
    "no-constant-condition": Array [
      "warn",
    ],
    "no-continue": Array [
      "error",
    ],
    "no-control-regex": Array [
      "error",
    ],
    "no-debugger": Array [
      "error",
    ],
    "no-delete-var": Array [
      "error",
    ],
    "no-dupe-args": Array [
      "off",
    ],
    "no-dupe-class-members": Array [
      "off",
    ],
    "no-dupe-else-if": Array [
      "error",
    ],
    "no-dupe-keys": Array [
      "off",
    ],
    "no-duplicate-case": Array [
      "error",
    ],
    "no-duplicate-imports": Array [
      "off",
    ],
    "no-else-return": Array [
      "error",
      Object {
        "allowElseIf": true,
      },
    ],
    "no-empty": Array [
      "error",
    ],
    "no-empty-character-class": Array [
      "error",
    ],
    "no-empty-function": Array [
      "off",
      Object {
        "allow": Array [
          "arrowFunctions",
          "functions",
          "methods",
        ],
      },
    ],
    "no-empty-pattern": Array [
      "error",
    ],
    "no-eval": Array [
      "error",
    ],
    "no-ex-assign": Array [
      "error",
    ],
    "no-extend-native": Array [
      "error",
    ],
    "no-extra-bind": Array [
      "error",
    ],
    "no-extra-boolean-cast": Array [
      "error",
    ],
    "no-extra-label": Array [
      "error",
    ],
    "no-extra-parens": Array [
      "off",
    ],
    "no-extra-semi": Array [
      "off",
    ],
    "no-fallthrough": Array [
      "error",
    ],
    "no-floating-decimal": Array [
      "off",
    ],
    "no-func-assign": Array [
      "off",
    ],
    "no-global-assign": Array [
      "error",
    ],
    "no-implied-eval": Array [
      "off",
    ],
    "no-import-assign": Array [
      "off",
    ],
    "no-inner-declarations": Array [
      "error",
    ],
    "no-invalid-regexp": Array [
      "error",
    ],
    "no-irregular-whitespace": Array [
      "error",
    ],
    "no-iterator": Array [
      "error",
    ],
    "no-label-var": Array [
      "error",
    ],
    "no-labels": Array [
      "error",
      Object {
        "allowLoop": false,
        "allowSwitch": false,
      },
    ],
    "no-lone-blocks": Array [
      "error",
    ],
    "no-lonely-if": Array [
      "error",
    ],
    "no-loop-func": Array [
      "error",
    ],
    "no-loss-of-precision": Array [
      "off",
    ],
    "no-misleading-character-class": Array [
      "error",
    ],
    "no-mixed-operators": Array [
      0,
    ],
    "no-mixed-spaces-and-tabs": Array [
      "off",
    ],
    "no-multi-assign": Array [
      "error",
    ],
    "no-multi-spaces": Array [
      "off",
    ],
    "no-multi-str": Array [
      "error",
    ],
    "no-multiple-empty-lines": Array [
      "off",
    ],
    "no-nested-ternary": Array [
      "error",
    ],
    "no-new": Array [
      "error",
    ],
    "no-new-func": Array [
      "error",
    ],
    "no-new-object": Array [
      "error",
    ],
    "no-new-require": Array [
      "error",
    ],
    "no-new-symbol": Array [
      "off",
    ],
    "no-new-wrappers": Array [
      "error",
    ],
    "no-nonoctal-decimal-escape": Array [
      "error",
    ],
    "no-obj-calls": Array [
      "off",
    ],
    "no-octal": Array [
      "error",
    ],
    "no-octal-escape": Array [
      "error",
    ],
    "no-param-reassign": Array [
      "error",
      Object {
        "props": false,
      },
    ],
    "no-path-concat": Array [
      "error",
    ],
    "no-plusplus": Array [
      "error",
    ],
    "no-proto": Array [
      "error",
    ],
    "no-prototype-builtins": Array [
      "off",
    ],
    "no-redeclare": Array [
      "off",
    ],
    "no-regex-spaces": Array [
      "error",
    ],
    "no-reserved-keys": Array [
      "off",
    ],
    "no-restricted-globals": Array [
      "error",
      "isFinite",
      "isNaN",
      "addEventListener",
      "blur",
      "close",
      "closed",
      "confirm",
      "defaultStatus",
      "event",
      "external",
      "defaultstatus",
      "find",
      "focus",
      "frameElement",
      "frames",
      "history",
      "innerHeight",
      "innerWidth",
      "length",
      "location",
      "locationbar",
      "menubar",
      "moveBy",
      "moveTo",
      "name",
      "onblur",
      "onerror",
      "onfocus",
      "onload",
      "onresize",
      "onunload",
      "open",
      "opener",
      "opera",
      "outerHeight",
      "outerWidth",
      "pageXOffset",
      "pageYOffset",
      "parent",
      "print",
      "removeEventListener",
      "resizeBy",
      "resizeTo",
      "screen",
      "screenLeft",
      "screenTop",
      "screenX",
      "screenY",
      "scroll",
      "scrollbars",
      "scrollBy",
      "scrollTo",
      "scrollX",
      "scrollY",
      "self",
      "status",
      "statusbar",
      "stop",
      "toolbar",
      "top",
    ],
    "no-restricted-imports": Array [
      "error",
    ],
    "no-restricted-properties": Array [
      "error",
      Object {
        "message": "arguments.callee is deprecated",
        "object": "arguments",
        "property": "callee",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "global",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "self",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "window",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "global",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "self",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "window",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineGetter__",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineSetter__",
      },
      Object {
        "message": "Use the exponentiation operator (**) instead.",
        "object": "Math",
        "property": "pow",
      },
    ],
    "no-restricted-syntax": Array [
      "error",
      Object {
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.",
        "selector": "ForInStatement",
      },
      Object {
        "message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.",
        "selector": "ForOfStatement",
      },
      Object {
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.",
        "selector": "LabeledStatement",
      },
      Object {
        "message": "\`with\` is disallowed in strict mode because it makes code impossible to predict and optimize.",
        "selector": "WithStatement",
      },
      Object {
        "message": "Property setters are not allowed",
        "selector": "MethodDefinition[kind=\\"set\\"]",
      },
      Object {
        "message": "Property getters are not allowed",
        "selector": "MethodDefinition[kind=\\"get\\"]",
      },
    ],
    "no-return-assign": Array [
      "error",
      "except-parens",
    ],
    "no-return-await": Array [
      "error",
    ],
    "no-script-url": Array [
      "error",
    ],
    "no-self-assign": Array [
      "error",
    ],
    "no-self-compare": Array [
      "error",
    ],
    "no-sequences": Array [
      "error",
    ],
    "no-setter-return": Array [
      "off",
    ],
    "no-shadow": Array [
      "off",
      Object {
        "builtinGlobals": false,
        "hoist": "all",
      },
    ],
    "no-shadow-restricted-names": Array [
      "error",
    ],
    "no-space-before-semi": Array [
      "off",
    ],
    "no-spaced-func": Array [
      "off",
    ],
    "no-sparse-arrays": Array [
      "error",
    ],
    "no-tabs": Array [
      0,
    ],
    "no-template-curly-in-string": Array [
      "error",
    ],
    "no-this-before-super": Array [
      "off",
    ],
    "no-throw-literal": Array [
      "error",
    ],
    "no-trailing-spaces": Array [
      "off",
    ],
    "no-undef": Array [
      "off",
    ],
    "no-undef-init": Array [
      "error",
    ],
    "no-underscore-dangle": Array [
      "error",
      Object {
        "allowAfterSuper": true,
        "allowAfterThis": true,
        "allowAfterThisConstructor": false,
        "allowFunctionParams": true,
        "enforceInMethodNames": false,
      },
    ],
    "no-unexpected-multiline": Array [
      0,
    ],
    "no-unneeded-ternary": Array [
      "error",
      Object {
        "defaultAssignment": false,
      },
    ],
    "no-unreachable": Array [
      "off",
    ],
    "no-unsafe-finally": Array [
      "error",
    ],
    "no-unsafe-negation": Array [
      "off",
    ],
    "no-unsafe-optional-chaining": Array [
      "error",
    ],
    "no-unused-expressions": Array [
      "off",
    ],
    "no-unused-labels": Array [
      "error",
    ],
    "no-unused-vars": Array [
      "off",
      Object {
        "args": "after-used",
        "ignoreRestSiblings": true,
        "vars": "all",
      },
    ],
    "no-use-before-define": Array [
      "off",
      "nofunc",
    ],
    "no-useless-backreference": Array [
      "error",
    ],
    "no-useless-catch": Array [
      "error",
    ],
    "no-useless-computed-key": Array [
      "error",
    ],
    "no-useless-concat": Array [
      "error",
    ],
    "no-useless-constructor": Array [
      "off",
    ],
    "no-useless-escape": Array [
      "error",
    ],
    "no-useless-rename": Array [
      "error",
      Object {
        "ignoreDestructuring": false,
        "ignoreExport": false,
        "ignoreImport": false,
      },
    ],
    "no-useless-return": Array [
      "error",
    ],
    "no-var": Array [
      "error",
    ],
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "no-whitespace-before-property": Array [
      "off",
    ],
    "no-with": Array [
      "error",
    ],
    "no-wrap-func": Array [
      "off",
    ],
    "nonblock-statement-body-position": Array [
      "off",
    ],
    "object-curly-newline": Array [
      "off",
    ],
    "object-curly-spacing": Array [
      "off",
    ],
    "object-property-newline": Array [
      "off",
    ],
    "object-shorthand": Array [
      "error",
      "always",
      Object {
        "avoidQuotes": true,
        "ignoreConstructors": false,
      },
    ],
    "one-var": Array [
      "error",
      "never",
    ],
    "one-var-declaration-per-line": Array [
      "off",
    ],
    "operator-assignment": Array [
      "error",
      "always",
    ],
    "operator-linebreak": Array [
      "off",
    ],
    "padded-blocks": Array [
      "off",
    ],
    "padding-line-between-statements": Array [
      "off",
      Object {
        "blankLine": "always",
        "next": "return",
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": Array [
          "block",
          "block-like",
          "class",
          "const",
          "let",
          "var",
        ],
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": "*",
        "prev": Array [
          "block",
          "block-like",
          "class",
          "const",
          "let",
          "var",
        ],
      },
      Object {
        "blankLine": "any",
        "next": Array [
          "const",
          "let",
          "var",
        ],
        "prev": Array [
          "const",
          "let",
          "var",
        ],
      },
      Object {
        "blankLine": "any",
        "next": Array [
          "case",
        ],
        "prev": Array [
          "case",
        ],
      },
    ],
    "prefer-arrow-callback": Array [
      "off",
      Object {
        "allowNamedFunctions": false,
        "allowUnboundThis": true,
      },
    ],
    "prefer-const": Array [
      "error",
      Object {
        "destructuring": "any",
        "ignoreReadBeforeAssign": true,
      },
    ],
    "prefer-numeric-literals": Array [
      "error",
    ],
    "prefer-rest-params": Array [
      "error",
    ],
    "prefer-spread": Array [
      "error",
    ],
    "prefer-template": Array [
      "error",
    ],
    "prettier/prettier": Array [
      "warn",
      Object {
        "printWidth": 100,
        "singleQuote": true,
        "trailingComma": "all",
      },
      Object {
        "usePrettierrc": false,
      },
    ],
    "quote-props": Array [
      "off",
    ],
    "quotes": Array [
      0,
    ],
    "radix": Array [
      "error",
    ],
    "react-hooks/exhaustive-deps": Array [
      "error",
    ],
    "react-hooks/rules-of-hooks": Array [
      "error",
    ],
    "react/destructuring-assignment": Array [
      "error",
    ],
    "react/display-name": Array [
      "off",
    ],
    "react/jsx-child-element-spacing": Array [
      "off",
    ],
    "react/jsx-closing-bracket-location": Array [
      "off",
    ],
    "react/jsx-closing-tag-location": Array [
      "off",
    ],
    "react/jsx-curly-brace-presence": Array [
      "error",
      Object {
        "children": "never",
        "propElementValues": "always",
        "props": "never",
      },
    ],
    "react/jsx-curly-newline": Array [
      "off",
    ],
    "react/jsx-curly-spacing": Array [
      "off",
    ],
    "react/jsx-equals-spacing": Array [
      "off",
    ],
    "react/jsx-filename-extension": Array [
      1,
      Object {
        "extensions": Array [
          ".tsx",
        ],
      },
    ],
    "react/jsx-first-prop-new-line": Array [
      "off",
    ],
    "react/jsx-fragments": Array [
      "error",
      "syntax",
    ],
    "react/jsx-indent": Array [
      "off",
    ],
    "react/jsx-indent-props": Array [
      "off",
    ],
    "react/jsx-key": Array [
      2,
    ],
    "react/jsx-max-props-per-line": Array [
      "off",
    ],
    "react/jsx-newline": Array [
      "off",
    ],
    "react/jsx-no-bind": Array [
      "error",
      Object {
        "allowArrowFunctions": true,
        "allowBind": false,
        "allowFunctions": false,
        "ignoreDOMComponents": false,
        "ignoreRefs": false,
      },
    ],
    "react/jsx-no-comment-textnodes": Array [
      2,
    ],
    "react/jsx-no-duplicate-props": Array [
      2,
    ],
    "react/jsx-no-target-blank": Array [
      2,
    ],
    "react/jsx-no-undef": Array [
      2,
    ],
    "react/jsx-no-useless-fragment": Array [
      "error",
    ],
    "react/jsx-one-expression-per-line": Array [
      "off",
    ],
    "react/jsx-pascal-case": Array [
      "error",
    ],
    "react/jsx-props-no-multi-spaces": Array [
      "off",
    ],
    "react/jsx-sort-props": Array [
      "warn",
    ],
    "react/jsx-space-before-closing": Array [
      "off",
    ],
    "react/jsx-tag-spacing": Array [
      "off",
    ],
    "react/jsx-uses-react": Array [
      2,
    ],
    "react/jsx-uses-vars": Array [
      2,
    ],
    "react/jsx-wrap-multilines": Array [
      "off",
    ],
    "react/no-children-prop": Array [
      2,
    ],
    "react/no-danger-with-children": Array [
      2,
    ],
    "react/no-deprecated": Array [
      2,
    ],
    "react/no-direct-mutation-state": Array [
      2,
    ],
    "react/no-find-dom-node": Array [
      2,
    ],
    "react/no-is-mounted": Array [
      2,
    ],
    "react/no-redundant-should-component-update": Array [
      "error",
    ],
    "react/no-render-return-value": Array [
      2,
    ],
    "react/no-string-refs": Array [
      2,
    ],
    "react/no-this-in-sfc": Array [
      "error",
    ],
    "react/no-unescaped-entities": Array [
      "error",
      Object {
        "forbid": Array [
          Object {
            "alternatives": Array [
              "&gt;",
            ],
            "char": ">",
          },
          Object {
            "alternatives": Array [
              "&#125;",
            ],
            "char": "}",
          },
        ],
      },
    ],
    "react/no-unknown-property": Array [
      2,
    ],
    "react/no-unsafe": Array [
      "error",
    ],
    "react/no-unused-state": Array [
      "error",
    ],
    "react/prefer-es6-class": Array [
      "error",
    ],
    "react/prefer-read-only-props": Array [
      "error",
    ],
    "react/prop-types": Array [
      "off",
    ],
    "react/react-in-jsx-scope": Array [
      2,
    ],
    "react/require-render-return": Array [
      2,
    ],
    "react/self-closing-comp": Array [
      "error",
    ],
    "react/style-prop-object": Array [
      "error",
    ],
    "require-await": Array [
      "off",
    ],
    "require-yield": Array [
      "error",
    ],
    "rest-spread-spacing": Array [
      "off",
    ],
    "semi": Array [
      "off",
    ],
    "semi-spacing": Array [
      "off",
    ],
    "semi-style": Array [
      "off",
    ],
    "sort-imports": Array [
      "error",
      Object {
        "allowSeparatedGroups": false,
        "ignoreCase": true,
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false,
      },
    ],
    "sort-keys": Array [
      "off",
    ],
    "space-after-function-name": Array [
      "off",
    ],
    "space-after-keywords": Array [
      "off",
    ],
    "space-before-blocks": Array [
      "off",
    ],
    "space-before-function-paren": Array [
      "off",
    ],
    "space-before-function-parentheses": Array [
      "off",
    ],
    "space-before-keywords": Array [
      "off",
    ],
    "space-in-brackets": Array [
      "off",
    ],
    "space-in-parens": Array [
      "off",
    ],
    "space-infix-ops": Array [
      "off",
    ],
    "space-return-throw-case": Array [
      "off",
    ],
    "space-unary-ops": Array [
      "off",
    ],
    "space-unary-word-ops": Array [
      "off",
    ],
    "spaced-comment": Array [
      "warn",
      "always",
      Object {
        "block": Object {
          "balanced": true,
          "exceptions": Array [
            "-",
            "+",
          ],
          "markers": Array [
            "=",
            "!",
          ],
        },
        "line": Object {
          "exceptions": Array [
            "-",
            "+",
          ],
          "markers": Array [
            "=",
            "!",
            "/",
          ],
        },
      },
    ],
    "standard/array-bracket-even-spacing": Array [
      "off",
    ],
    "standard/computed-property-even-spacing": Array [
      "off",
    ],
    "standard/object-curly-even-spacing": Array [
      "off",
    ],
    "strict": Array [
      "error",
    ],
    "switch-case/newline-between-switch-case": Array [
      "warn",
      "always",
      Object {
        "fallthrough": "never",
      },
    ],
    "switch-colon-spacing": Array [
      "off",
    ],
    "symbol-description": Array [
      "error",
    ],
    "template-curly-spacing": Array [
      "off",
    ],
    "template-tag-spacing": Array [
      "off",
    ],
    "unicode-bom": Array [
      "off",
    ],
    "unicorn/empty-brace-spaces": Array [
      "off",
    ],
    "unicorn/no-nested-ternary": Array [
      "off",
    ],
    "unicorn/number-literal-case": Array [
      "off",
    ],
    "use-isnan": Array [
      "error",
    ],
    "valid-jsdoc": Array [
      "off",
      Object {
        "requireParamDescription": false,
        "requireParamType": true,
        "requireReturn": true,
        "requireReturnDescription": false,
        "requireReturnType": true,
      },
    ],
    "valid-typeof": Array [
      "off",
      Object {
        "requireStringLiterals": true,
      },
    ],
    "vars-on-top": Array [
      "error",
    ],
    "vue/array-bracket-newline": Array [
      "off",
    ],
    "vue/array-bracket-spacing": Array [
      "off",
    ],
    "vue/arrow-spacing": Array [
      "off",
    ],
    "vue/block-spacing": Array [
      "off",
    ],
    "vue/block-tag-newline": Array [
      "off",
    ],
    "vue/brace-style": Array [
      "off",
    ],
    "vue/comma-dangle": Array [
      "off",
    ],
    "vue/comma-spacing": Array [
      "off",
    ],
    "vue/comma-style": Array [
      "off",
    ],
    "vue/dot-location": Array [
      "off",
    ],
    "vue/func-call-spacing": Array [
      "off",
    ],
    "vue/html-closing-bracket-newline": Array [
      "off",
    ],
    "vue/html-closing-bracket-spacing": Array [
      "off",
    ],
    "vue/html-end-tags": Array [
      "off",
    ],
    "vue/html-indent": Array [
      "off",
    ],
    "vue/html-quotes": Array [
      "off",
    ],
    "vue/html-self-closing": Array [
      0,
    ],
    "vue/key-spacing": Array [
      "off",
    ],
    "vue/keyword-spacing": Array [
      "off",
    ],
    "vue/max-attributes-per-line": Array [
      "off",
    ],
    "vue/max-len": Array [
      0,
    ],
    "vue/multiline-html-element-content-newline": Array [
      "off",
    ],
    "vue/mustache-interpolation-spacing": Array [
      "off",
    ],
    "vue/no-extra-parens": Array [
      "off",
    ],
    "vue/no-multi-spaces": Array [
      "off",
    ],
    "vue/no-spaces-around-equal-signs-in-attribute": Array [
      "off",
    ],
    "vue/object-curly-newline": Array [
      "off",
    ],
    "vue/object-curly-spacing": Array [
      "off",
    ],
    "vue/object-property-newline": Array [
      "off",
    ],
    "vue/operator-linebreak": Array [
      "off",
    ],
    "vue/script-indent": Array [
      "off",
    ],
    "vue/singleline-html-element-content-newline": Array [
      "off",
    ],
    "vue/space-in-parens": Array [
      "off",
    ],
    "vue/space-infix-ops": Array [
      "off",
    ],
    "vue/space-unary-ops": Array [
      "off",
    ],
    "vue/template-curly-spacing": Array [
      "off",
    ],
    "wrap-iife": Array [
      "off",
    ],
    "wrap-regex": Array [
      "off",
    ],
    "yield-star-spacing": Array [
      "off",
    ],
    "yoda": Array [
      "error",
    ],
  },
  "settings": Object {
    "import/extensions": Array [
      ".ts",
      ".tsx",
      ".js",
      ".jsx",
    ],
    "import/external-module-folders": Array [
      "node_modules",
      "node_modules/@types",
    ],
    "import/parsers": Object {
      "@typescript-eslint/parser": Array [
        ".ts",
        ".tsx",
      ],
    },
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".ts",
          ".tsx",
          ".js",
          ".jsx",
        ],
      },
      "typescript": Object {
        "alwaysTryTypes": true,
      },
    },
    "react": Object {
      "version": "detect",
    },
  },
}
`;

exports[`keeps rules stable *.spec.* 1`] = `
Object {
  "env": Object {
    "browser": true,
    "es6": true,
    "jest": true,
    "jest/globals": true,
    "node": true,
  },
  "globals": Object {},
  "ignorePatterns": Array [],
  "noInlineConfig": undefined,
  "parser": null,
  "parserOptions": Object {
    "ecmaFeatures": Object {
      "jsx": true,
    },
    "ecmaVersion": 2020,
    "sourceType": "module",
  },
  "plugins": Array [
    "switch-case",
    "gettext",
    "import",
    "jsdoc",
    "prettier",
    "jest-formatting",
    "jest",
    "react",
    "jsx-a11y",
    "react-hooks",
  ],
  "reportUnusedDisableDirectives": true,
  "rules": Object {
    "@babel/object-curly-spacing": Array [
      "off",
    ],
    "@babel/semi": Array [
      "off",
    ],
    "@typescript-eslint/brace-style": Array [
      "off",
    ],
    "@typescript-eslint/comma-dangle": Array [
      "off",
    ],
    "@typescript-eslint/comma-spacing": Array [
      "off",
    ],
    "@typescript-eslint/func-call-spacing": Array [
      "off",
    ],
    "@typescript-eslint/indent": Array [
      "off",
    ],
    "@typescript-eslint/keyword-spacing": Array [
      "off",
    ],
    "@typescript-eslint/member-delimiter-style": Array [
      "off",
    ],
    "@typescript-eslint/no-extra-parens": Array [
      "off",
    ],
    "@typescript-eslint/no-extra-semi": Array [
      "off",
    ],
    "@typescript-eslint/object-curly-spacing": Array [
      "off",
    ],
    "@typescript-eslint/quotes": Array [
      0,
    ],
    "@typescript-eslint/semi": Array [
      "off",
    ],
    "@typescript-eslint/space-before-function-paren": Array [
      "off",
    ],
    "@typescript-eslint/space-infix-ops": Array [
      "off",
    ],
    "@typescript-eslint/type-annotation-spacing": Array [
      "off",
    ],
    "array-bracket-newline": Array [
      "off",
    ],
    "array-bracket-spacing": Array [
      "off",
    ],
    "array-callback-return": Array [
      "error",
    ],
    "array-element-newline": Array [
      "off",
    ],
    "arrow-body-style": Array [
      "off",
      "as-needed",
      Object {
        "requireReturnForObjectLiteral": false,
      },
    ],
    "arrow-parens": Array [
      "off",
    ],
    "arrow-spacing": Array [
      "off",
    ],
    "babel/object-curly-spacing": Array [
      "off",
    ],
    "babel/quotes": Array [
      0,
    ],
    "babel/semi": Array [
      "off",
    ],
    "block-scoped-var": Array [
      "error",
    ],
    "block-spacing": Array [
      "off",
    ],
    "brace-style": Array [
      "off",
    ],
    "camelcase": Array [
      "error",
      Object {
        "ignoreDestructuring": false,
        "ignoreGlobals": false,
        "ignoreImports": false,
        "properties": "never",
      },
    ],
    "comma-dangle": Array [
      "off",
    ],
    "comma-spacing": Array [
      "off",
    ],
    "comma-style": Array [
      "off",
    ],
    "complexity": Array [
      "error",
    ],
    "computed-property-spacing": Array [
      "off",
    ],
    "consistent-return": Array [
      "error",
    ],
    "constructor-super": Array [
      "error",
    ],
    "curly": Array [
      "error",
      "all",
    ],
    "default-case": Array [
      "error",
    ],
    "default-param-last": Array [
      "error",
    ],
    "dot-location": Array [
      "off",
    ],
    "dot-notation": Array [
      "error",
      Object {
        "allowKeywords": true,
        "allowPattern": "",
      },
    ],
    "eol-last": Array [
      "off",
    ],
    "eqeqeq": Array [
      "error",
      "smart",
    ],
    "flowtype/boolean-style": Array [
      "off",
    ],
    "flowtype/delimiter-dangle": Array [
      "off",
    ],
    "flowtype/generic-spacing": Array [
      "off",
    ],
    "flowtype/object-type-curly-spacing": Array [
      "off",
    ],
    "flowtype/object-type-delimiter": Array [
      "off",
    ],
    "flowtype/quotes": Array [
      "off",
    ],
    "flowtype/semi": Array [
      "off",
    ],
    "flowtype/space-after-type-colon": Array [
      "off",
    ],
    "flowtype/space-before-generic-bracket": Array [
      "off",
    ],
    "flowtype/space-before-type-colon": Array [
      "off",
    ],
    "flowtype/union-intersection-spacing": Array [
      "off",
    ],
    "for-direction": Array [
      "error",
    ],
    "func-call-spacing": Array [
      "off",
    ],
    "func-names": Array [
      "warn",
    ],
    "function-call-argument-newline": Array [
      "off",
    ],
    "function-paren-newline": Array [
      "off",
    ],
    "generator-star": Array [
      "off",
    ],
    "generator-star-spacing": Array [
      "off",
    ],
    "getter-return": Array [
      "error",
      Object {
        "allowImplicit": true,
      },
    ],
    "gettext/no-variable-string": Array [
      "error",
    ],
    "global-require": Array [
      "error",
    ],
    "guard-for-in": Array [
      "error",
    ],
    "implicit-arrow-linebreak": Array [
      "off",
    ],
    "import/default": Array [
      "off",
    ],
    "import/dynamic-import-chunkname": Array [
      "error",
    ],
    "import/export": Array [
      2,
    ],
    "import/extensions": Array [
      "error",
      Object {
        "js": "never",
        "json": "always",
        "jsx": "never",
        "ts": "never",
        "tsx": "never",
      },
    ],
    "import/named": Array [
      2,
    ],
    "import/namespace": Array [
      2,
    ],
    "import/newline-after-import": Array [
      "warn",
    ],
    "import/no-absolute-path": Array [
      "error",
    ],
    "import/no-amd": Array [
      "error",
    ],
    "import/no-duplicates": Array [
      1,
    ],
    "import/no-dynamic-require": Array [
      "error",
    ],
    "import/no-extraneous-dependencies": Array [
      "error",
      Object {
        "devDependencies": true,
        "optionalDependencies": false,
      },
    ],
    "import/no-mutable-exports": Array [
      "error",
    ],
    "import/no-named-as-default": Array [
      1,
    ],
    "import/no-named-as-default-member": Array [
      1,
    ],
    "import/no-named-default": Array [
      "error",
    ],
    "import/no-unresolved": Array [
      "error",
      Object {
        "caseSensitive": true,
        "caseSensitiveStrict": false,
        "commonjs": true,
      },
    ],
    "import/no-webpack-loader-syntax": Array [
      "error",
    ],
    "import/order": Array [
      "warn",
      Object {
        "alphabetize": Object {
          "caseInsensitive": true,
          "order": "asc",
        },
        "groups": Array [
          Array [
            "builtin",
            "external",
          ],
          "internal",
          "parent",
          "sibling",
          "index",
        ],
        "newlines-between": "always",
        "warnOnUnassignedImports": false,
      },
    ],
    "indent": Array [
      "off",
    ],
    "indent-legacy": Array [
      "off",
    ],
    "jest-formatting/padding-around-all": Array [
      "warn",
    ],
    "jest/expect-expect": Array [
      "warn",
    ],
    "jest/no-alias-methods": Array [
      "warn",
    ],
    "jest/no-commented-out-tests": Array [
      "warn",
    ],
    "jest/no-conditional-expect": Array [
      "error",
    ],
    "jest/no-deprecated-functions": Array [
      "error",
    ],
    "jest/no-disabled-tests": Array [
      "warn",
    ],
    "jest/no-done-callback": Array [
      "off",
    ],
    "jest/no-duplicate-hooks": Array [
      "off",
    ],
    "jest/no-export": Array [
      "error",
    ],
    "jest/no-focused-tests": Array [
      "error",
    ],
    "jest/no-identical-title": Array [
      "error",
    ],
    "jest/no-if": Array [
      "error",
    ],
    "jest/no-interpolation-in-snapshots": Array [
      "error",
    ],
    "jest/no-jasmine-globals": Array [
      "error",
    ],
    "jest/no-jest-import": Array [
      "error",
    ],
    "jest/no-mocks-import": Array [
      "error",
    ],
    "jest/no-restricted-matchers": Array [
      "error",
      Object {
        "toBeFalsy": "Avoid \`toBeFalsy\`, use \`toBe(false)\` instead.",
        "toBeTruthy": "Avoid \`toBeTruthy\`, use \`toBe(true)\` instead.",
      },
    ],
    "jest/no-standalone-expect": Array [
      "error",
    ],
    "jest/no-test-prefixes": Array [
      "error",
    ],
    "jest/no-test-return-statement": Array [
      "error",
    ],
    "jest/prefer-hooks-on-top": Array [
      "error",
    ],
    "jest/prefer-to-be": Array [
      "error",
    ],
    "jest/prefer-to-contain": Array [
      "error",
    ],
    "jest/prefer-to-have-length": Array [
      "error",
    ],
    "jest/prefer-todo": Array [
      "error",
    ],
    "jest/valid-describe-callback": Array [
      "error",
    ],
    "jest/valid-expect": Array [
      "error",
    ],
    "jest/valid-expect-in-promise": Array [
      "error",
    ],
    "jest/valid-title": Array [
      "error",
    ],
    "jsdoc/check-alignment": Array [
      "error",
    ],
    "jsdoc/check-param-names": Array [
      "error",
    ],
    "jsdoc/check-syntax": Array [
      "error",
    ],
    "jsdoc/check-tag-names": Array [
      "error",
    ],
    "jsdoc/implements-on-classes": Array [
      "error",
    ],
    "jsdoc/newline-after-description": Array [
      "error",
    ],
    "jsdoc/require-param-name": Array [
      "error",
    ],
    "jsdoc/require-param-type": Array [
      "error",
    ],
    "jsdoc/require-returns-check": Array [
      "error",
    ],
    "jsdoc/require-returns-type": Array [
      "error",
    ],
    "jsx-a11y/alt-text": Array [
      "error",
    ],
    "jsx-a11y/anchor-has-content": Array [
      "error",
    ],
    "jsx-a11y/anchor-is-valid": Array [
      "error",
    ],
    "jsx-a11y/aria-activedescendant-has-tabindex": Array [
      "error",
    ],
    "jsx-a11y/aria-props": Array [
      "error",
    ],
    "jsx-a11y/aria-proptypes": Array [
      "error",
    ],
    "jsx-a11y/aria-role": Array [
      "error",
    ],
    "jsx-a11y/aria-unsupported-elements": Array [
      "error",
    ],
    "jsx-a11y/autocomplete-valid": Array [
      "error",
    ],
    "jsx-a11y/click-events-have-key-events": Array [
      "error",
    ],
    "jsx-a11y/control-has-associated-label": Array [
      "off",
      Object {
        "ignoreElements": Array [
          "audio",
          "canvas",
          "embed",
          "input",
          "textarea",
          "tr",
          "video",
        ],
        "ignoreRoles": Array [
          "grid",
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "row",
          "tablist",
          "toolbar",
          "tree",
          "treegrid",
        ],
        "includeRoles": Array [
          "alert",
          "dialog",
        ],
      },
    ],
    "jsx-a11y/heading-has-content": Array [
      "error",
    ],
    "jsx-a11y/html-has-lang": Array [
      "error",
    ],
    "jsx-a11y/iframe-has-title": Array [
      "error",
    ],
    "jsx-a11y/img-redundant-alt": Array [
      "error",
    ],
    "jsx-a11y/interactive-supports-focus": Array [
      "error",
      Object {
        "tabbable": Array [
          "button",
          "checkbox",
          "link",
          "searchbox",
          "spinbutton",
          "switch",
          "textbox",
        ],
      },
    ],
    "jsx-a11y/label-has-associated-control": Array [
      "error",
    ],
    "jsx-a11y/label-has-for": Array [
      "off",
    ],
    "jsx-a11y/media-has-caption": Array [
      "error",
    ],
    "jsx-a11y/mouse-events-have-key-events": Array [
      "error",
    ],
    "jsx-a11y/no-access-key": Array [
      "error",
    ],
    "jsx-a11y/no-autofocus": Array [
      "error",
    ],
    "jsx-a11y/no-distracting-elements": Array [
      "error",
    ],
    "jsx-a11y/no-interactive-element-to-noninteractive-role": Array [
      "error",
      Object {
        "canvas": Array [
          "img",
        ],
        "tr": Array [
          "none",
          "presentation",
        ],
      },
    ],
    "jsx-a11y/no-noninteractive-element-interactions": Array [
      "error",
      Object {
        "alert": Array [
          "onKeyUp",
          "onKeyDown",
          "onKeyPress",
        ],
        "body": Array [
          "onError",
          "onLoad",
        ],
        "dialog": Array [
          "onKeyUp",
          "onKeyDown",
          "onKeyPress",
        ],
        "handlers": Array [
          "onClick",
          "onError",
          "onLoad",
          "onMouseDown",
          "onMouseUp",
          "onKeyPress",
          "onKeyDown",
          "onKeyUp",
        ],
        "iframe": Array [
          "onError",
          "onLoad",
        ],
        "img": Array [
          "onError",
          "onLoad",
        ],
      },
    ],
    "jsx-a11y/no-noninteractive-element-to-interactive-role": Array [
      "error",
      Object {
        "fieldset": Array [
          "radiogroup",
          "presentation",
        ],
        "li": Array [
          "menuitem",
          "option",
          "row",
          "tab",
          "treeitem",
        ],
        "ol": Array [
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "tablist",
          "tree",
          "treegrid",
        ],
        "table": Array [
          "grid",
        ],
        "td": Array [
          "gridcell",
        ],
        "ul": Array [
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "tablist",
          "tree",
          "treegrid",
        ],
      },
    ],
    "jsx-a11y/no-noninteractive-tabindex": Array [
      "error",
      Object {
        "allowExpressionValues": true,
        "roles": Array [
          "tabpanel",
        ],
        "tags": Array [],
      },
    ],
    "jsx-a11y/no-onchange": Array [
      "off",
    ],
    "jsx-a11y/no-redundant-roles": Array [
      "error",
    ],
    "jsx-a11y/no-static-element-interactions": Array [
      "error",
      Object {
        "allowExpressionValues": true,
        "handlers": Array [
          "onClick",
          "onMouseDown",
          "onMouseUp",
          "onKeyPress",
          "onKeyDown",
          "onKeyUp",
        ],
      },
    ],
    "jsx-a11y/role-has-required-aria-props": Array [
      "error",
    ],
    "jsx-a11y/role-supports-aria-props": Array [
      "error",
    ],
    "jsx-a11y/scope": Array [
      "error",
    ],
    "jsx-a11y/tabindex-no-positive": Array [
      "error",
    ],
    "jsx-quotes": Array [
      "off",
    ],
    "key-spacing": Array [
      "off",
    ],
    "keyword-spacing": Array [
      "off",
    ],
    "linebreak-style": Array [
      "off",
    ],
    "lines-around-comment": Array [
      0,
    ],
    "lines-around-directive": Array [
      "error",
      Object {
        "after": "always",
        "before": "always",
      },
    ],
    "max-classes-per-file": Array [
      "error",
      1,
    ],
    "max-len": Array [
      0,
    ],
    "multiline-ternary": Array [
      "off",
    ],
    "new-cap": Array [
      "error",
      Object {
        "capIsNew": false,
        "capIsNewExceptions": Array [
          "Immutable.Map",
          "Immutable.Set",
          "Immutable.List",
        ],
        "newIsCap": true,
        "newIsCapExceptions": Array [],
        "properties": true,
      },
    ],
    "new-parens": Array [
      "off",
    ],
    "newline-per-chained-call": Array [
      "off",
    ],
    "no-alert": Array [
      "warn",
    ],
    "no-array-constructor": Array [
      "error",
    ],
    "no-arrow-condition": Array [
      "off",
    ],
    "no-async-promise-executor": Array [
      "error",
    ],
    "no-await-in-loop": Array [
      "error",
    ],
    "no-bitwise": Array [
      "error",
    ],
    "no-buffer-constructor": Array [
      "error",
    ],
    "no-caller": Array [
      "error",
    ],
    "no-case-declarations": Array [
      "error",
    ],
    "no-class-assign": Array [
      "error",
    ],
    "no-comma-dangle": Array [
      "off",
    ],
    "no-compare-neg-zero": Array [
      "error",
    ],
    "no-cond-assign": Array [
      "error",
      "always",
    ],
    "no-confusing-arrow": Array [
      0,
    ],
    "no-console": Array [
      "warn",
    ],
    "no-const-assign": Array [
      "error",
    ],
    "no-constant-condition": Array [
      "warn",
    ],
    "no-continue": Array [
      "error",
    ],
    "no-control-regex": Array [
      "error",
    ],
    "no-debugger": Array [
      "error",
    ],
    "no-delete-var": Array [
      "error",
    ],
    "no-dupe-args": Array [
      "error",
    ],
    "no-dupe-class-members": Array [
      "error",
    ],
    "no-dupe-else-if": Array [
      "error",
    ],
    "no-dupe-keys": Array [
      "error",
    ],
    "no-duplicate-case": Array [
      "error",
    ],
    "no-duplicate-imports": Array [
      "error",
    ],
    "no-else-return": Array [
      "error",
      Object {
        "allowElseIf": true,
      },
    ],
    "no-empty": Array [
      "error",
    ],
    "no-empty-character-class": Array [
      "error",
    ],
    "no-empty-function": Array [
      "error",
      Object {
        "allow": Array [
          "arrowFunctions",
          "functions",
          "methods",
        ],
      },
    ],
    "no-empty-pattern": Array [
      "error",
    ],
    "no-eval": Array [
      "error",
    ],
    "no-ex-assign": Array [
      "error",
    ],
    "no-extend-native": Array [
      "error",
    ],
    "no-extra-bind": Array [
      "error",
    ],
    "no-extra-boolean-cast": Array [
      "error",
    ],
    "no-extra-label": Array [
      "error",
    ],
    "no-extra-parens": Array [
      "off",
    ],
    "no-extra-semi": Array [
      "off",
    ],
    "no-fallthrough": Array [
      "error",
    ],
    "no-floating-decimal": Array [
      "off",
    ],
    "no-func-assign": Array [
      "error",
    ],
    "no-global-assign": Array [
      "error",
    ],
    "no-implied-eval": Array [
      "error",
    ],
    "no-import-assign": Array [
      "error",
    ],
    "no-inner-declarations": Array [
      "error",
    ],
    "no-invalid-regexp": Array [
      "error",
    ],
    "no-irregular-whitespace": Array [
      "error",
    ],
    "no-iterator": Array [
      "error",
    ],
    "no-label-var": Array [
      "error",
    ],
    "no-labels": Array [
      "error",
      Object {
        "allowLoop": false,
        "allowSwitch": false,
      },
    ],
    "no-lone-blocks": Array [
      "error",
    ],
    "no-lonely-if": Array [
      "error",
    ],
    "no-loop-func": Array [
      "error",
    ],
    "no-loss-of-precision": Array [
      "error",
    ],
    "no-misleading-character-class": Array [
      "error",
    ],
    "no-mixed-operators": Array [
      0,
    ],
    "no-mixed-spaces-and-tabs": Array [
      "off",
    ],
    "no-multi-assign": Array [
      "error",
    ],
    "no-multi-spaces": Array [
      "off",
    ],
    "no-multi-str": Array [
      "error",
    ],
    "no-multiple-empty-lines": Array [
      "off",
    ],
    "no-nested-ternary": Array [
      "error",
    ],
    "no-new": Array [
      "error",
    ],
    "no-new-func": Array [
      "error",
    ],
    "no-new-object": Array [
      "error",
    ],
    "no-new-require": Array [
      "error",
    ],
    "no-new-symbol": Array [
      "error",
    ],
    "no-new-wrappers": Array [
      "error",
    ],
    "no-nonoctal-decimal-escape": Array [
      "error",
    ],
    "no-obj-calls": Array [
      "error",
    ],
    "no-octal": Array [
      "error",
    ],
    "no-octal-escape": Array [
      "error",
    ],
    "no-param-reassign": Array [
      "error",
      Object {
        "props": false,
      },
    ],
    "no-path-concat": Array [
      "error",
    ],
    "no-plusplus": Array [
      "error",
    ],
    "no-proto": Array [
      "error",
    ],
    "no-prototype-builtins": Array [
      "off",
    ],
    "no-redeclare": Array [
      "error",
    ],
    "no-regex-spaces": Array [
      "error",
    ],
    "no-reserved-keys": Array [
      "off",
    ],
    "no-restricted-globals": Array [
      "error",
      "isFinite",
      "isNaN",
      "addEventListener",
      "blur",
      "close",
      "closed",
      "confirm",
      "defaultStatus",
      "event",
      "external",
      "defaultstatus",
      "find",
      "focus",
      "frameElement",
      "frames",
      "history",
      "innerHeight",
      "innerWidth",
      "length",
      "location",
      "locationbar",
      "menubar",
      "moveBy",
      "moveTo",
      "name",
      "onblur",
      "onerror",
      "onfocus",
      "onload",
      "onresize",
      "onunload",
      "open",
      "opener",
      "opera",
      "outerHeight",
      "outerWidth",
      "pageXOffset",
      "pageYOffset",
      "parent",
      "print",
      "removeEventListener",
      "resizeBy",
      "resizeTo",
      "screen",
      "screenLeft",
      "screenTop",
      "screenX",
      "screenY",
      "scroll",
      "scrollbars",
      "scrollBy",
      "scrollTo",
      "scrollX",
      "scrollY",
      "self",
      "status",
      "statusbar",
      "stop",
      "toolbar",
      "top",
    ],
    "no-restricted-imports": Array [
      "error",
    ],
    "no-restricted-properties": Array [
      "error",
      Object {
        "message": "arguments.callee is deprecated",
        "object": "arguments",
        "property": "callee",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "global",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "self",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "window",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "global",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "self",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "window",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineGetter__",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineSetter__",
      },
      Object {
        "message": "Use the exponentiation operator (**) instead.",
        "object": "Math",
        "property": "pow",
      },
    ],
    "no-restricted-syntax": Array [
      "error",
      Object {
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.",
        "selector": "ForInStatement",
      },
      Object {
        "message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.",
        "selector": "ForOfStatement",
      },
      Object {
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.",
        "selector": "LabeledStatement",
      },
      Object {
        "message": "\`with\` is disallowed in strict mode because it makes code impossible to predict and optimize.",
        "selector": "WithStatement",
      },
      Object {
        "message": "Property setters are not allowed",
        "selector": "MethodDefinition[kind=\\"set\\"]",
      },
      Object {
        "message": "Property getters are not allowed",
        "selector": "MethodDefinition[kind=\\"get\\"]",
      },
    ],
    "no-return-assign": Array [
      "error",
      "except-parens",
    ],
    "no-return-await": Array [
      "error",
    ],
    "no-script-url": Array [
      "error",
    ],
    "no-self-assign": Array [
      "error",
    ],
    "no-self-compare": Array [
      "error",
    ],
    "no-sequences": Array [
      "error",
    ],
    "no-setter-return": Array [
      "error",
    ],
    "no-shadow": Array [
      "error",
      Object {
        "builtinGlobals": false,
        "hoist": "all",
      },
    ],
    "no-shadow-restricted-names": Array [
      "error",
    ],
    "no-space-before-semi": Array [
      "off",
    ],
    "no-spaced-func": Array [
      "off",
    ],
    "no-sparse-arrays": Array [
      "error",
    ],
    "no-tabs": Array [
      0,
    ],
    "no-template-curly-in-string": Array [
      "error",
    ],
    "no-this-before-super": Array [
      "error",
    ],
    "no-trailing-spaces": Array [
      "off",
    ],
    "no-undef": Array [
      "error",
    ],
    "no-undef-init": Array [
      "error",
    ],
    "no-underscore-dangle": Array [
      "error",
      Object {
        "allowAfterSuper": true,
        "allowAfterThis": true,
        "allowAfterThisConstructor": false,
        "allowFunctionParams": true,
        "enforceInMethodNames": false,
      },
    ],
    "no-unexpected-multiline": Array [
      0,
    ],
    "no-unneeded-ternary": Array [
      "error",
      Object {
        "defaultAssignment": false,
      },
    ],
    "no-unreachable": Array [
      "error",
    ],
    "no-unsafe-finally": Array [
      "error",
    ],
    "no-unsafe-negation": Array [
      "error",
    ],
    "no-unsafe-optional-chaining": Array [
      "error",
    ],
    "no-unused-expressions": Array [
      "error",
    ],
    "no-unused-labels": Array [
      "error",
    ],
    "no-unused-vars": Array [
      "error",
      Object {
        "args": "after-used",
        "ignoreRestSiblings": true,
        "vars": "all",
      },
    ],
    "no-use-before-define": Array [
      "error",
      "nofunc",
    ],
    "no-useless-backreference": Array [
      "error",
    ],
    "no-useless-catch": Array [
      "error",
    ],
    "no-useless-computed-key": Array [
      "error",
    ],
    "no-useless-concat": Array [
      "error",
    ],
    "no-useless-constructor": Array [
      "error",
    ],
    "no-useless-escape": Array [
      "error",
    ],
    "no-useless-rename": Array [
      "error",
      Object {
        "ignoreDestructuring": false,
        "ignoreExport": false,
        "ignoreImport": false,
      },
    ],
    "no-useless-return": Array [
      "error",
    ],
    "no-var": Array [
      "error",
    ],
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "no-whitespace-before-property": Array [
      "off",
    ],
    "no-with": Array [
      "error",
    ],
    "no-wrap-func": Array [
      "off",
    ],
    "nonblock-statement-body-position": Array [
      "off",
    ],
    "object-curly-newline": Array [
      "off",
    ],
    "object-curly-spacing": Array [
      "off",
    ],
    "object-property-newline": Array [
      "off",
    ],
    "object-shorthand": Array [
      "error",
      "always",
      Object {
        "avoidQuotes": true,
        "ignoreConstructors": false,
      },
    ],
    "one-var": Array [
      "error",
      "never",
    ],
    "one-var-declaration-per-line": Array [
      "off",
    ],
    "operator-assignment": Array [
      "error",
      "always",
    ],
    "operator-linebreak": Array [
      "off",
    ],
    "padded-blocks": Array [
      "off",
    ],
    "padding-line-between-statements": Array [
      "warn",
      Object {
        "blankLine": "always",
        "next": "return",
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": Array [
          "block",
          "block-like",
          "class",
          "const",
          "let",
          "var",
        ],
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": "*",
        "prev": Array [
          "block",
          "block-like",
          "class",
          "const",
          "let",
          "var",
        ],
      },
      Object {
        "blankLine": "any",
        "next": Array [
          "const",
          "let",
          "var",
        ],
        "prev": Array [
          "const",
          "let",
          "var",
        ],
      },
      Object {
        "blankLine": "any",
        "next": Array [
          "case",
        ],
        "prev": Array [
          "case",
        ],
      },
    ],
    "prefer-arrow-callback": Array [
      "off",
      Object {
        "allowNamedFunctions": false,
        "allowUnboundThis": true,
      },
    ],
    "prefer-const": Array [
      "error",
      Object {
        "destructuring": "any",
        "ignoreReadBeforeAssign": true,
      },
    ],
    "prefer-numeric-literals": Array [
      "error",
    ],
    "prefer-rest-params": Array [
      "error",
    ],
    "prefer-template": Array [
      "error",
    ],
    "prettier/prettier": Array [
      "warn",
      Object {
        "printWidth": 100,
        "singleQuote": true,
        "trailingComma": "all",
      },
      Object {
        "usePrettierrc": false,
      },
    ],
    "quote-props": Array [
      "off",
    ],
    "quotes": Array [
      0,
    ],
    "radix": Array [
      "error",
    ],
    "react-hooks/exhaustive-deps": Array [
      "error",
    ],
    "react-hooks/rules-of-hooks": Array [
      "error",
    ],
    "react/destructuring-assignment": Array [
      "error",
    ],
    "react/display-name": Array [
      "off",
    ],
    "react/jsx-child-element-spacing": Array [
      "off",
    ],
    "react/jsx-closing-bracket-location": Array [
      "off",
    ],
    "react/jsx-closing-tag-location": Array [
      "off",
    ],
    "react/jsx-curly-brace-presence": Array [
      "error",
      Object {
        "children": "never",
        "propElementValues": "always",
        "props": "never",
      },
    ],
    "react/jsx-curly-newline": Array [
      "off",
    ],
    "react/jsx-curly-spacing": Array [
      "off",
    ],
    "react/jsx-equals-spacing": Array [
      "off",
    ],
    "react/jsx-first-prop-new-line": Array [
      "off",
    ],
    "react/jsx-fragments": Array [
      "error",
      "syntax",
    ],
    "react/jsx-indent": Array [
      "off",
    ],
    "react/jsx-indent-props": Array [
      "off",
    ],
    "react/jsx-key": Array [
      2,
    ],
    "react/jsx-max-props-per-line": Array [
      "off",
    ],
    "react/jsx-newline": Array [
      "off",
    ],
    "react/jsx-no-bind": Array [
      "error",
      Object {
        "allowArrowFunctions": true,
        "allowBind": false,
        "allowFunctions": false,
        "ignoreDOMComponents": false,
        "ignoreRefs": false,
      },
    ],
    "react/jsx-no-comment-textnodes": Array [
      2,
    ],
    "react/jsx-no-duplicate-props": Array [
      2,
    ],
    "react/jsx-no-target-blank": Array [
      2,
    ],
    "react/jsx-no-undef": Array [
      2,
    ],
    "react/jsx-no-useless-fragment": Array [
      "error",
    ],
    "react/jsx-one-expression-per-line": Array [
      "off",
    ],
    "react/jsx-pascal-case": Array [
      "error",
    ],
    "react/jsx-props-no-multi-spaces": Array [
      "off",
    ],
    "react/jsx-sort-props": Array [
      "warn",
    ],
    "react/jsx-space-before-closing": Array [
      "off",
    ],
    "react/jsx-tag-spacing": Array [
      "off",
    ],
    "react/jsx-uses-react": Array [
      2,
    ],
    "react/jsx-uses-vars": Array [
      2,
    ],
    "react/jsx-wrap-multilines": Array [
      "off",
    ],
    "react/no-children-prop": Array [
      2,
    ],
    "react/no-danger-with-children": Array [
      2,
    ],
    "react/no-deprecated": Array [
      2,
    ],
    "react/no-direct-mutation-state": Array [
      2,
    ],
    "react/no-find-dom-node": Array [
      2,
    ],
    "react/no-is-mounted": Array [
      2,
    ],
    "react/no-redundant-should-component-update": Array [
      "error",
    ],
    "react/no-render-return-value": Array [
      2,
    ],
    "react/no-string-refs": Array [
      2,
    ],
    "react/no-this-in-sfc": Array [
      "error",
    ],
    "react/no-unescaped-entities": Array [
      "error",
      Object {
        "forbid": Array [
          Object {
            "alternatives": Array [
              "&gt;",
            ],
            "char": ">",
          },
          Object {
            "alternatives": Array [
              "&#125;",
            ],
            "char": "}",
          },
        ],
      },
    ],
    "react/no-unknown-property": Array [
      2,
    ],
    "react/no-unsafe": Array [
      "error",
    ],
    "react/no-unused-state": Array [
      "error",
    ],
    "react/prefer-es6-class": Array [
      "error",
    ],
    "react/prefer-read-only-props": Array [
      "error",
    ],
    "react/prop-types": Array [
      "off",
    ],
    "react/react-in-jsx-scope": Array [
      2,
    ],
    "react/require-render-return": Array [
      2,
    ],
    "react/self-closing-comp": Array [
      "error",
    ],
    "react/style-prop-object": Array [
      "error",
    ],
    "require-yield": Array [
      "error",
    ],
    "rest-spread-spacing": Array [
      "off",
    ],
    "semi": Array [
      "off",
    ],
    "semi-spacing": Array [
      "off",
    ],
    "semi-style": Array [
      "off",
    ],
    "sort-imports": Array [
      "error",
      Object {
        "allowSeparatedGroups": false,
        "ignoreCase": true,
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false,
      },
    ],
    "space-after-function-name": Array [
      "off",
    ],
    "space-after-keywords": Array [
      "off",
    ],
    "space-before-blocks": Array [
      "off",
    ],
    "space-before-function-paren": Array [
      "off",
    ],
    "space-before-function-parentheses": Array [
      "off",
    ],
    "space-before-keywords": Array [
      "off",
    ],
    "space-in-brackets": Array [
      "off",
    ],
    "space-in-parens": Array [
      "off",
    ],
    "space-infix-ops": Array [
      "off",
    ],
    "space-return-throw-case": Array [
      "off",
    ],
    "space-unary-ops": Array [
      "off",
    ],
    "space-unary-word-ops": Array [
      "off",
    ],
    "spaced-comment": Array [
      "warn",
      "always",
      Object {
        "block": Object {
          "balanced": true,
          "exceptions": Array [
            "-",
            "+",
          ],
          "markers": Array [
            "=",
            "!",
          ],
        },
        "line": Object {
          "exceptions": Array [
            "-",
            "+",
          ],
          "markers": Array [
            "=",
            "!",
          ],
        },
      },
    ],
    "standard/array-bracket-even-spacing": Array [
      "off",
    ],
    "standard/computed-property-even-spacing": Array [
      "off",
    ],
    "standard/object-curly-even-spacing": Array [
      "off",
    ],
    "strict": Array [
      "error",
    ],
    "switch-case/newline-between-switch-case": Array [
      "warn",
      "always",
      Object {
        "fallthrough": "never",
      },
    ],
    "switch-colon-spacing": Array [
      "off",
    ],
    "symbol-description": Array [
      "error",
    ],
    "template-curly-spacing": Array [
      "off",
    ],
    "template-tag-spacing": Array [
      "off",
    ],
    "unicode-bom": Array [
      "off",
    ],
    "unicorn/empty-brace-spaces": Array [
      "off",
    ],
    "unicorn/no-nested-ternary": Array [
      "off",
    ],
    "unicorn/number-literal-case": Array [
      "off",
    ],
    "use-isnan": Array [
      "error",
    ],
    "valid-jsdoc": Array [
      "off",
      Object {
        "requireParamDescription": false,
        "requireParamType": true,
        "requireReturn": true,
        "requireReturnDescription": false,
        "requireReturnType": true,
      },
    ],
    "valid-typeof": Array [
      "error",
      Object {
        "requireStringLiterals": true,
      },
    ],
    "vars-on-top": Array [
      "error",
    ],
    "vue/array-bracket-newline": Array [
      "off",
    ],
    "vue/array-bracket-spacing": Array [
      "off",
    ],
    "vue/arrow-spacing": Array [
      "off",
    ],
    "vue/block-spacing": Array [
      "off",
    ],
    "vue/block-tag-newline": Array [
      "off",
    ],
    "vue/brace-style": Array [
      "off",
    ],
    "vue/comma-dangle": Array [
      "off",
    ],
    "vue/comma-spacing": Array [
      "off",
    ],
    "vue/comma-style": Array [
      "off",
    ],
    "vue/dot-location": Array [
      "off",
    ],
    "vue/func-call-spacing": Array [
      "off",
    ],
    "vue/html-closing-bracket-newline": Array [
      "off",
    ],
    "vue/html-closing-bracket-spacing": Array [
      "off",
    ],
    "vue/html-end-tags": Array [
      "off",
    ],
    "vue/html-indent": Array [
      "off",
    ],
    "vue/html-quotes": Array [
      "off",
    ],
    "vue/html-self-closing": Array [
      0,
    ],
    "vue/key-spacing": Array [
      "off",
    ],
    "vue/keyword-spacing": Array [
      "off",
    ],
    "vue/max-attributes-per-line": Array [
      "off",
    ],
    "vue/max-len": Array [
      0,
    ],
    "vue/multiline-html-element-content-newline": Array [
      "off",
    ],
    "vue/mustache-interpolation-spacing": Array [
      "off",
    ],
    "vue/no-extra-parens": Array [
      "off",
    ],
    "vue/no-multi-spaces": Array [
      "off",
    ],
    "vue/no-spaces-around-equal-signs-in-attribute": Array [
      "off",
    ],
    "vue/object-curly-newline": Array [
      "off",
    ],
    "vue/object-curly-spacing": Array [
      "off",
    ],
    "vue/object-property-newline": Array [
      "off",
    ],
    "vue/operator-linebreak": Array [
      "off",
    ],
    "vue/script-indent": Array [
      "off",
    ],
    "vue/singleline-html-element-content-newline": Array [
      "off",
    ],
    "vue/space-in-parens": Array [
      "off",
    ],
    "vue/space-infix-ops": Array [
      "off",
    ],
    "vue/space-unary-ops": Array [
      "off",
    ],
    "vue/template-curly-spacing": Array [
      "off",
    ],
    "wrap-iife": Array [
      "off",
    ],
    "wrap-regex": Array [
      "off",
    ],
    "yield-star-spacing": Array [
      "off",
    ],
    "yoda": Array [
      "error",
    ],
  },
  "settings": Object {
    "react": Object {
      "version": "detect",
    },
  },
}
`;

exports[`keeps rules stable JS 1`] = `
Object {
  "env": Object {
    "browser": true,
    "es6": true,
    "node": true,
  },
  "globals": Object {},
  "ignorePatterns": Array [],
  "noInlineConfig": undefined,
  "parser": null,
  "parserOptions": Object {
    "ecmaFeatures": Object {
      "jsx": true,
    },
    "ecmaVersion": 2020,
    "sourceType": "module",
  },
  "plugins": Array [
    "switch-case",
    "gettext",
    "import",
    "jsdoc",
    "prettier",
    "react",
    "jsx-a11y",
    "react-hooks",
  ],
  "reportUnusedDisableDirectives": true,
  "rules": Object {
    "@babel/object-curly-spacing": Array [
      "off",
    ],
    "@babel/semi": Array [
      "off",
    ],
    "@typescript-eslint/brace-style": Array [
      "off",
    ],
    "@typescript-eslint/comma-dangle": Array [
      "off",
    ],
    "@typescript-eslint/comma-spacing": Array [
      "off",
    ],
    "@typescript-eslint/func-call-spacing": Array [
      "off",
    ],
    "@typescript-eslint/indent": Array [
      "off",
    ],
    "@typescript-eslint/keyword-spacing": Array [
      "off",
    ],
    "@typescript-eslint/member-delimiter-style": Array [
      "off",
    ],
    "@typescript-eslint/no-extra-parens": Array [
      "off",
    ],
    "@typescript-eslint/no-extra-semi": Array [
      "off",
    ],
    "@typescript-eslint/object-curly-spacing": Array [
      "off",
    ],
    "@typescript-eslint/quotes": Array [
      0,
    ],
    "@typescript-eslint/semi": Array [
      "off",
    ],
    "@typescript-eslint/space-before-function-paren": Array [
      "off",
    ],
    "@typescript-eslint/space-infix-ops": Array [
      "off",
    ],
    "@typescript-eslint/type-annotation-spacing": Array [
      "off",
    ],
    "array-bracket-newline": Array [
      "off",
    ],
    "array-bracket-spacing": Array [
      "off",
    ],
    "array-callback-return": Array [
      "error",
    ],
    "array-element-newline": Array [
      "off",
    ],
    "arrow-body-style": Array [
      "off",
      "as-needed",
      Object {
        "requireReturnForObjectLiteral": false,
      },
    ],
    "arrow-parens": Array [
      "off",
    ],
    "arrow-spacing": Array [
      "off",
    ],
    "babel/object-curly-spacing": Array [
      "off",
    ],
    "babel/quotes": Array [
      0,
    ],
    "babel/semi": Array [
      "off",
    ],
    "block-scoped-var": Array [
      "error",
    ],
    "block-spacing": Array [
      "off",
    ],
    "brace-style": Array [
      "off",
    ],
    "camelcase": Array [
      "error",
      Object {
        "ignoreDestructuring": false,
        "ignoreGlobals": false,
        "ignoreImports": false,
        "properties": "never",
      },
    ],
    "comma-dangle": Array [
      "off",
    ],
    "comma-spacing": Array [
      "off",
    ],
    "comma-style": Array [
      "off",
    ],
    "complexity": Array [
      "error",
    ],
    "computed-property-spacing": Array [
      "off",
    ],
    "consistent-return": Array [
      "error",
    ],
    "constructor-super": Array [
      "error",
    ],
    "curly": Array [
      "error",
      "all",
    ],
    "default-case": Array [
      "error",
    ],
    "default-param-last": Array [
      "error",
    ],
    "dot-location": Array [
      "off",
    ],
    "dot-notation": Array [
      "error",
      Object {
        "allowKeywords": true,
        "allowPattern": "",
      },
    ],
    "eol-last": Array [
      "off",
    ],
    "eqeqeq": Array [
      "error",
      "smart",
    ],
    "flowtype/boolean-style": Array [
      "off",
    ],
    "flowtype/delimiter-dangle": Array [
      "off",
    ],
    "flowtype/generic-spacing": Array [
      "off",
    ],
    "flowtype/object-type-curly-spacing": Array [
      "off",
    ],
    "flowtype/object-type-delimiter": Array [
      "off",
    ],
    "flowtype/quotes": Array [
      "off",
    ],
    "flowtype/semi": Array [
      "off",
    ],
    "flowtype/space-after-type-colon": Array [
      "off",
    ],
    "flowtype/space-before-generic-bracket": Array [
      "off",
    ],
    "flowtype/space-before-type-colon": Array [
      "off",
    ],
    "flowtype/union-intersection-spacing": Array [
      "off",
    ],
    "for-direction": Array [
      "error",
    ],
    "func-call-spacing": Array [
      "off",
    ],
    "func-names": Array [
      "warn",
    ],
    "function-call-argument-newline": Array [
      "off",
    ],
    "function-paren-newline": Array [
      "off",
    ],
    "generator-star": Array [
      "off",
    ],
    "generator-star-spacing": Array [
      "off",
    ],
    "getter-return": Array [
      "error",
      Object {
        "allowImplicit": true,
      },
    ],
    "gettext/no-variable-string": Array [
      "error",
    ],
    "global-require": Array [
      "error",
    ],
    "guard-for-in": Array [
      "error",
    ],
    "implicit-arrow-linebreak": Array [
      "off",
    ],
    "import/default": Array [
      "off",
    ],
    "import/dynamic-import-chunkname": Array [
      "error",
    ],
    "import/export": Array [
      2,
    ],
    "import/extensions": Array [
      "error",
      Object {
        "js": "never",
        "json": "always",
        "jsx": "never",
        "ts": "never",
        "tsx": "never",
      },
    ],
    "import/named": Array [
      2,
    ],
    "import/namespace": Array [
      2,
    ],
    "import/newline-after-import": Array [
      "warn",
    ],
    "import/no-absolute-path": Array [
      "error",
    ],
    "import/no-amd": Array [
      "error",
    ],
    "import/no-duplicates": Array [
      1,
    ],
    "import/no-dynamic-require": Array [
      "error",
    ],
    "import/no-extraneous-dependencies": Array [
      "error",
    ],
    "import/no-mutable-exports": Array [
      "error",
    ],
    "import/no-named-as-default": Array [
      1,
    ],
    "import/no-named-as-default-member": Array [
      1,
    ],
    "import/no-named-default": Array [
      "error",
    ],
    "import/no-unresolved": Array [
      "error",
      Object {
        "caseSensitive": true,
        "caseSensitiveStrict": false,
        "commonjs": true,
      },
    ],
    "import/no-webpack-loader-syntax": Array [
      "error",
    ],
    "import/order": Array [
      "warn",
      Object {
        "alphabetize": Object {
          "caseInsensitive": true,
          "order": "asc",
        },
        "groups": Array [
          Array [
            "builtin",
            "external",
          ],
          "internal",
          "parent",
          "sibling",
          "index",
        ],
        "newlines-between": "always",
        "warnOnUnassignedImports": false,
      },
    ],
    "indent": Array [
      "off",
    ],
    "indent-legacy": Array [
      "off",
    ],
    "jsdoc/check-alignment": Array [
      "error",
    ],
    "jsdoc/check-param-names": Array [
      "error",
    ],
    "jsdoc/check-syntax": Array [
      "error",
    ],
    "jsdoc/check-tag-names": Array [
      "error",
    ],
    "jsdoc/implements-on-classes": Array [
      "error",
    ],
    "jsdoc/newline-after-description": Array [
      "error",
    ],
    "jsdoc/require-param-name": Array [
      "error",
    ],
    "jsdoc/require-param-type": Array [
      "error",
    ],
    "jsdoc/require-returns-check": Array [
      "error",
    ],
    "jsdoc/require-returns-type": Array [
      "error",
    ],
    "jsx-a11y/alt-text": Array [
      "error",
    ],
    "jsx-a11y/anchor-has-content": Array [
      "error",
    ],
    "jsx-a11y/anchor-is-valid": Array [
      "error",
    ],
    "jsx-a11y/aria-activedescendant-has-tabindex": Array [
      "error",
    ],
    "jsx-a11y/aria-props": Array [
      "error",
    ],
    "jsx-a11y/aria-proptypes": Array [
      "error",
    ],
    "jsx-a11y/aria-role": Array [
      "error",
    ],
    "jsx-a11y/aria-unsupported-elements": Array [
      "error",
    ],
    "jsx-a11y/autocomplete-valid": Array [
      "error",
    ],
    "jsx-a11y/click-events-have-key-events": Array [
      "error",
    ],
    "jsx-a11y/control-has-associated-label": Array [
      "off",
      Object {
        "ignoreElements": Array [
          "audio",
          "canvas",
          "embed",
          "input",
          "textarea",
          "tr",
          "video",
        ],
        "ignoreRoles": Array [
          "grid",
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "row",
          "tablist",
          "toolbar",
          "tree",
          "treegrid",
        ],
        "includeRoles": Array [
          "alert",
          "dialog",
        ],
      },
    ],
    "jsx-a11y/heading-has-content": Array [
      "error",
    ],
    "jsx-a11y/html-has-lang": Array [
      "error",
    ],
    "jsx-a11y/iframe-has-title": Array [
      "error",
    ],
    "jsx-a11y/img-redundant-alt": Array [
      "error",
    ],
    "jsx-a11y/interactive-supports-focus": Array [
      "error",
      Object {
        "tabbable": Array [
          "button",
          "checkbox",
          "link",
          "searchbox",
          "spinbutton",
          "switch",
          "textbox",
        ],
      },
    ],
    "jsx-a11y/label-has-associated-control": Array [
      "error",
    ],
    "jsx-a11y/label-has-for": Array [
      "off",
    ],
    "jsx-a11y/media-has-caption": Array [
      "error",
    ],
    "jsx-a11y/mouse-events-have-key-events": Array [
      "error",
    ],
    "jsx-a11y/no-access-key": Array [
      "error",
    ],
    "jsx-a11y/no-autofocus": Array [
      "error",
    ],
    "jsx-a11y/no-distracting-elements": Array [
      "error",
    ],
    "jsx-a11y/no-interactive-element-to-noninteractive-role": Array [
      "error",
      Object {
        "canvas": Array [
          "img",
        ],
        "tr": Array [
          "none",
          "presentation",
        ],
      },
    ],
    "jsx-a11y/no-noninteractive-element-interactions": Array [
      "error",
      Object {
        "alert": Array [
          "onKeyUp",
          "onKeyDown",
          "onKeyPress",
        ],
        "body": Array [
          "onError",
          "onLoad",
        ],
        "dialog": Array [
          "onKeyUp",
          "onKeyDown",
          "onKeyPress",
        ],
        "handlers": Array [
          "onClick",
          "onError",
          "onLoad",
          "onMouseDown",
          "onMouseUp",
          "onKeyPress",
          "onKeyDown",
          "onKeyUp",
        ],
        "iframe": Array [
          "onError",
          "onLoad",
        ],
        "img": Array [
          "onError",
          "onLoad",
        ],
      },
    ],
    "jsx-a11y/no-noninteractive-element-to-interactive-role": Array [
      "error",
      Object {
        "fieldset": Array [
          "radiogroup",
          "presentation",
        ],
        "li": Array [
          "menuitem",
          "option",
          "row",
          "tab",
          "treeitem",
        ],
        "ol": Array [
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "tablist",
          "tree",
          "treegrid",
        ],
        "table": Array [
          "grid",
        ],
        "td": Array [
          "gridcell",
        ],
        "ul": Array [
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "tablist",
          "tree",
          "treegrid",
        ],
      },
    ],
    "jsx-a11y/no-noninteractive-tabindex": Array [
      "error",
      Object {
        "allowExpressionValues": true,
        "roles": Array [
          "tabpanel",
        ],
        "tags": Array [],
      },
    ],
    "jsx-a11y/no-onchange": Array [
      "off",
    ],
    "jsx-a11y/no-redundant-roles": Array [
      "error",
    ],
    "jsx-a11y/no-static-element-interactions": Array [
      "error",
      Object {
        "allowExpressionValues": true,
        "handlers": Array [
          "onClick",
          "onMouseDown",
          "onMouseUp",
          "onKeyPress",
          "onKeyDown",
          "onKeyUp",
        ],
      },
    ],
    "jsx-a11y/role-has-required-aria-props": Array [
      "error",
    ],
    "jsx-a11y/role-supports-aria-props": Array [
      "error",
    ],
    "jsx-a11y/scope": Array [
      "error",
    ],
    "jsx-a11y/tabindex-no-positive": Array [
      "error",
    ],
    "jsx-quotes": Array [
      "off",
    ],
    "key-spacing": Array [
      "off",
    ],
    "keyword-spacing": Array [
      "off",
    ],
    "linebreak-style": Array [
      "off",
    ],
    "lines-around-comment": Array [
      0,
    ],
    "lines-around-directive": Array [
      "error",
      Object {
        "after": "always",
        "before": "always",
      },
    ],
    "max-classes-per-file": Array [
      "error",
      1,
    ],
    "max-len": Array [
      0,
    ],
    "multiline-ternary": Array [
      "off",
    ],
    "new-cap": Array [
      "error",
      Object {
        "capIsNew": false,
        "capIsNewExceptions": Array [
          "Immutable.Map",
          "Immutable.Set",
          "Immutable.List",
        ],
        "newIsCap": true,
        "newIsCapExceptions": Array [],
        "properties": true,
      },
    ],
    "new-parens": Array [
      "off",
    ],
    "newline-per-chained-call": Array [
      "off",
    ],
    "no-alert": Array [
      "warn",
    ],
    "no-array-constructor": Array [
      "error",
    ],
    "no-arrow-condition": Array [
      "off",
    ],
    "no-async-promise-executor": Array [
      "error",
    ],
    "no-await-in-loop": Array [
      "error",
    ],
    "no-bitwise": Array [
      "error",
    ],
    "no-buffer-constructor": Array [
      "error",
    ],
    "no-caller": Array [
      "error",
    ],
    "no-case-declarations": Array [
      "error",
    ],
    "no-class-assign": Array [
      "error",
    ],
    "no-comma-dangle": Array [
      "off",
    ],
    "no-compare-neg-zero": Array [
      "error",
    ],
    "no-cond-assign": Array [
      "error",
      "always",
    ],
    "no-confusing-arrow": Array [
      0,
    ],
    "no-console": Array [
      "warn",
    ],
    "no-const-assign": Array [
      "error",
    ],
    "no-constant-condition": Array [
      "warn",
    ],
    "no-continue": Array [
      "error",
    ],
    "no-control-regex": Array [
      "error",
    ],
    "no-debugger": Array [
      "error",
    ],
    "no-delete-var": Array [
      "error",
    ],
    "no-dupe-args": Array [
      "error",
    ],
    "no-dupe-class-members": Array [
      "error",
    ],
    "no-dupe-else-if": Array [
      "error",
    ],
    "no-dupe-keys": Array [
      "error",
    ],
    "no-duplicate-case": Array [
      "error",
    ],
    "no-duplicate-imports": Array [
      "error",
    ],
    "no-else-return": Array [
      "error",
      Object {
        "allowElseIf": true,
      },
    ],
    "no-empty": Array [
      "error",
    ],
    "no-empty-character-class": Array [
      "error",
    ],
    "no-empty-function": Array [
      "error",
      Object {
        "allow": Array [
          "arrowFunctions",
          "functions",
          "methods",
        ],
      },
    ],
    "no-empty-pattern": Array [
      "error",
    ],
    "no-eval": Array [
      "error",
    ],
    "no-ex-assign": Array [
      "error",
    ],
    "no-extend-native": Array [
      "error",
    ],
    "no-extra-bind": Array [
      "error",
    ],
    "no-extra-boolean-cast": Array [
      "error",
    ],
    "no-extra-label": Array [
      "error",
    ],
    "no-extra-parens": Array [
      "off",
    ],
    "no-extra-semi": Array [
      "off",
    ],
    "no-fallthrough": Array [
      "error",
    ],
    "no-floating-decimal": Array [
      "off",
    ],
    "no-func-assign": Array [
      "error",
    ],
    "no-global-assign": Array [
      "error",
    ],
    "no-implied-eval": Array [
      "error",
    ],
    "no-import-assign": Array [
      "error",
    ],
    "no-inner-declarations": Array [
      "error",
    ],
    "no-invalid-regexp": Array [
      "error",
    ],
    "no-irregular-whitespace": Array [
      "error",
    ],
    "no-iterator": Array [
      "error",
    ],
    "no-label-var": Array [
      "error",
    ],
    "no-labels": Array [
      "error",
      Object {
        "allowLoop": false,
        "allowSwitch": false,
      },
    ],
    "no-lone-blocks": Array [
      "error",
    ],
    "no-lonely-if": Array [
      "error",
    ],
    "no-loop-func": Array [
      "error",
    ],
    "no-loss-of-precision": Array [
      "error",
    ],
    "no-misleading-character-class": Array [
      "error",
    ],
    "no-mixed-operators": Array [
      0,
    ],
    "no-mixed-spaces-and-tabs": Array [
      "off",
    ],
    "no-multi-assign": Array [
      "error",
    ],
    "no-multi-spaces": Array [
      "off",
    ],
    "no-multi-str": Array [
      "error",
    ],
    "no-multiple-empty-lines": Array [
      "off",
    ],
    "no-nested-ternary": Array [
      "error",
    ],
    "no-new": Array [
      "error",
    ],
    "no-new-func": Array [
      "error",
    ],
    "no-new-object": Array [
      "error",
    ],
    "no-new-require": Array [
      "error",
    ],
    "no-new-symbol": Array [
      "error",
    ],
    "no-new-wrappers": Array [
      "error",
    ],
    "no-nonoctal-decimal-escape": Array [
      "error",
    ],
    "no-obj-calls": Array [
      "error",
    ],
    "no-octal": Array [
      "error",
    ],
    "no-octal-escape": Array [
      "error",
    ],
    "no-param-reassign": Array [
      "error",
      Object {
        "props": false,
      },
    ],
    "no-path-concat": Array [
      "error",
    ],
    "no-plusplus": Array [
      "error",
    ],
    "no-proto": Array [
      "error",
    ],
    "no-prototype-builtins": Array [
      "off",
    ],
    "no-redeclare": Array [
      "error",
    ],
    "no-regex-spaces": Array [
      "error",
    ],
    "no-reserved-keys": Array [
      "off",
    ],
    "no-restricted-globals": Array [
      "error",
      "isFinite",
      "isNaN",
      "addEventListener",
      "blur",
      "close",
      "closed",
      "confirm",
      "defaultStatus",
      "event",
      "external",
      "defaultstatus",
      "find",
      "focus",
      "frameElement",
      "frames",
      "history",
      "innerHeight",
      "innerWidth",
      "length",
      "location",
      "locationbar",
      "menubar",
      "moveBy",
      "moveTo",
      "name",
      "onblur",
      "onerror",
      "onfocus",
      "onload",
      "onresize",
      "onunload",
      "open",
      "opener",
      "opera",
      "outerHeight",
      "outerWidth",
      "pageXOffset",
      "pageYOffset",
      "parent",
      "print",
      "removeEventListener",
      "resizeBy",
      "resizeTo",
      "screen",
      "screenLeft",
      "screenTop",
      "screenX",
      "screenY",
      "scroll",
      "scrollbars",
      "scrollBy",
      "scrollTo",
      "scrollX",
      "scrollY",
      "self",
      "status",
      "statusbar",
      "stop",
      "toolbar",
      "top",
    ],
    "no-restricted-imports": Array [
      "error",
    ],
    "no-restricted-properties": Array [
      "error",
      Object {
        "message": "arguments.callee is deprecated",
        "object": "arguments",
        "property": "callee",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "global",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "self",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "window",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "global",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "self",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "window",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineGetter__",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineSetter__",
      },
      Object {
        "message": "Use the exponentiation operator (**) instead.",
        "object": "Math",
        "property": "pow",
      },
    ],
    "no-restricted-syntax": Array [
      "error",
      Object {
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.",
        "selector": "ForInStatement",
      },
      Object {
        "message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.",
        "selector": "ForOfStatement",
      },
      Object {
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.",
        "selector": "LabeledStatement",
      },
      Object {
        "message": "\`with\` is disallowed in strict mode because it makes code impossible to predict and optimize.",
        "selector": "WithStatement",
      },
      Object {
        "message": "Property setters are not allowed",
        "selector": "MethodDefinition[kind=\\"set\\"]",
      },
      Object {
        "message": "Property getters are not allowed",
        "selector": "MethodDefinition[kind=\\"get\\"]",
      },
    ],
    "no-return-assign": Array [
      "error",
      "except-parens",
    ],
    "no-return-await": Array [
      "error",
    ],
    "no-script-url": Array [
      "error",
    ],
    "no-self-assign": Array [
      "error",
    ],
    "no-self-compare": Array [
      "error",
    ],
    "no-sequences": Array [
      "error",
    ],
    "no-setter-return": Array [
      "error",
    ],
    "no-shadow": Array [
      "error",
      Object {
        "builtinGlobals": false,
        "hoist": "all",
      },
    ],
    "no-shadow-restricted-names": Array [
      "error",
    ],
    "no-space-before-semi": Array [
      "off",
    ],
    "no-spaced-func": Array [
      "off",
    ],
    "no-sparse-arrays": Array [
      "error",
    ],
    "no-tabs": Array [
      0,
    ],
    "no-template-curly-in-string": Array [
      "error",
    ],
    "no-this-before-super": Array [
      "error",
    ],
    "no-trailing-spaces": Array [
      "off",
    ],
    "no-undef": Array [
      "error",
    ],
    "no-undef-init": Array [
      "error",
    ],
    "no-underscore-dangle": Array [
      "error",
      Object {
        "allowAfterSuper": true,
        "allowAfterThis": true,
        "allowAfterThisConstructor": false,
        "allowFunctionParams": true,
        "enforceInMethodNames": false,
      },
    ],
    "no-unexpected-multiline": Array [
      0,
    ],
    "no-unneeded-ternary": Array [
      "error",
      Object {
        "defaultAssignment": false,
      },
    ],
    "no-unreachable": Array [
      "error",
    ],
    "no-unsafe-finally": Array [
      "error",
    ],
    "no-unsafe-negation": Array [
      "error",
    ],
    "no-unsafe-optional-chaining": Array [
      "error",
    ],
    "no-unused-expressions": Array [
      "error",
    ],
    "no-unused-labels": Array [
      "error",
    ],
    "no-unused-vars": Array [
      "error",
      Object {
        "args": "after-used",
        "ignoreRestSiblings": true,
        "vars": "all",
      },
    ],
    "no-use-before-define": Array [
      "error",
      "nofunc",
    ],
    "no-useless-backreference": Array [
      "error",
    ],
    "no-useless-catch": Array [
      "error",
    ],
    "no-useless-computed-key": Array [
      "error",
    ],
    "no-useless-concat": Array [
      "error",
    ],
    "no-useless-constructor": Array [
      "error",
    ],
    "no-useless-escape": Array [
      "error",
    ],
    "no-useless-rename": Array [
      "error",
      Object {
        "ignoreDestructuring": false,
        "ignoreExport": false,
        "ignoreImport": false,
      },
    ],
    "no-useless-return": Array [
      "error",
    ],
    "no-var": Array [
      "error",
    ],
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "no-whitespace-before-property": Array [
      "off",
    ],
    "no-with": Array [
      "error",
    ],
    "no-wrap-func": Array [
      "off",
    ],
    "nonblock-statement-body-position": Array [
      "off",
    ],
    "object-curly-newline": Array [
      "off",
    ],
    "object-curly-spacing": Array [
      "off",
    ],
    "object-property-newline": Array [
      "off",
    ],
    "object-shorthand": Array [
      "error",
      "always",
      Object {
        "avoidQuotes": true,
        "ignoreConstructors": false,
      },
    ],
    "one-var": Array [
      "error",
      "never",
    ],
    "one-var-declaration-per-line": Array [
      "off",
    ],
    "operator-assignment": Array [
      "error",
      "always",
    ],
    "operator-linebreak": Array [
      "off",
    ],
    "padded-blocks": Array [
      "off",
    ],
    "padding-line-between-statements": Array [
      "warn",
      Object {
        "blankLine": "always",
        "next": "return",
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": Array [
          "block",
          "block-like",
          "class",
          "const",
          "let",
          "var",
        ],
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": "*",
        "prev": Array [
          "block",
          "block-like",
          "class",
          "const",
          "let",
          "var",
        ],
      },
      Object {
        "blankLine": "any",
        "next": Array [
          "const",
          "let",
          "var",
        ],
        "prev": Array [
          "const",
          "let",
          "var",
        ],
      },
      Object {
        "blankLine": "any",
        "next": Array [
          "case",
        ],
        "prev": Array [
          "case",
        ],
      },
    ],
    "prefer-arrow-callback": Array [
      "off",
      Object {
        "allowNamedFunctions": false,
        "allowUnboundThis": true,
      },
    ],
    "prefer-const": Array [
      "error",
      Object {
        "destructuring": "any",
        "ignoreReadBeforeAssign": true,
      },
    ],
    "prefer-numeric-literals": Array [
      "error",
    ],
    "prefer-rest-params": Array [
      "error",
    ],
    "prefer-template": Array [
      "error",
    ],
    "prettier/prettier": Array [
      "warn",
      Object {
        "printWidth": 100,
        "singleQuote": true,
        "trailingComma": "all",
      },
      Object {
        "usePrettierrc": false,
      },
    ],
    "quote-props": Array [
      "off",
    ],
    "quotes": Array [
      0,
    ],
    "radix": Array [
      "error",
    ],
    "react-hooks/exhaustive-deps": Array [
      "error",
    ],
    "react-hooks/rules-of-hooks": Array [
      "error",
    ],
    "react/destructuring-assignment": Array [
      "error",
    ],
    "react/display-name": Array [
      "off",
    ],
    "react/jsx-child-element-spacing": Array [
      "off",
    ],
    "react/jsx-closing-bracket-location": Array [
      "off",
    ],
    "react/jsx-closing-tag-location": Array [
      "off",
    ],
    "react/jsx-curly-brace-presence": Array [
      "error",
      Object {
        "children": "never",
        "propElementValues": "always",
        "props": "never",
      },
    ],
    "react/jsx-curly-newline": Array [
      "off",
    ],
    "react/jsx-curly-spacing": Array [
      "off",
    ],
    "react/jsx-equals-spacing": Array [
      "off",
    ],
    "react/jsx-first-prop-new-line": Array [
      "off",
    ],
    "react/jsx-fragments": Array [
      "error",
      "syntax",
    ],
    "react/jsx-indent": Array [
      "off",
    ],
    "react/jsx-indent-props": Array [
      "off",
    ],
    "react/jsx-key": Array [
      2,
    ],
    "react/jsx-max-props-per-line": Array [
      "off",
    ],
    "react/jsx-newline": Array [
      "off",
    ],
    "react/jsx-no-bind": Array [
      "error",
      Object {
        "allowArrowFunctions": true,
        "allowBind": false,
        "allowFunctions": false,
        "ignoreDOMComponents": false,
        "ignoreRefs": false,
      },
    ],
    "react/jsx-no-comment-textnodes": Array [
      2,
    ],
    "react/jsx-no-duplicate-props": Array [
      2,
    ],
    "react/jsx-no-target-blank": Array [
      2,
    ],
    "react/jsx-no-undef": Array [
      2,
    ],
    "react/jsx-no-useless-fragment": Array [
      "error",
    ],
    "react/jsx-one-expression-per-line": Array [
      "off",
    ],
    "react/jsx-pascal-case": Array [
      "error",
    ],
    "react/jsx-props-no-multi-spaces": Array [
      "off",
    ],
    "react/jsx-sort-props": Array [
      "warn",
    ],
    "react/jsx-space-before-closing": Array [
      "off",
    ],
    "react/jsx-tag-spacing": Array [
      "off",
    ],
    "react/jsx-uses-react": Array [
      2,
    ],
    "react/jsx-uses-vars": Array [
      2,
    ],
    "react/jsx-wrap-multilines": Array [
      "off",
    ],
    "react/no-children-prop": Array [
      2,
    ],
    "react/no-danger-with-children": Array [
      2,
    ],
    "react/no-deprecated": Array [
      2,
    ],
    "react/no-direct-mutation-state": Array [
      2,
    ],
    "react/no-find-dom-node": Array [
      2,
    ],
    "react/no-is-mounted": Array [
      2,
    ],
    "react/no-redundant-should-component-update": Array [
      "error",
    ],
    "react/no-render-return-value": Array [
      2,
    ],
    "react/no-string-refs": Array [
      2,
    ],
    "react/no-this-in-sfc": Array [
      "error",
    ],
    "react/no-unescaped-entities": Array [
      "error",
      Object {
        "forbid": Array [
          Object {
            "alternatives": Array [
              "&gt;",
            ],
            "char": ">",
          },
          Object {
            "alternatives": Array [
              "&#125;",
            ],
            "char": "}",
          },
        ],
      },
    ],
    "react/no-unknown-property": Array [
      2,
    ],
    "react/no-unsafe": Array [
      "error",
    ],
    "react/no-unused-state": Array [
      "error",
    ],
    "react/prefer-es6-class": Array [
      "error",
    ],
    "react/prefer-read-only-props": Array [
      "error",
    ],
    "react/prop-types": Array [
      "off",
    ],
    "react/react-in-jsx-scope": Array [
      2,
    ],
    "react/require-render-return": Array [
      2,
    ],
    "react/self-closing-comp": Array [
      "error",
    ],
    "react/style-prop-object": Array [
      "error",
    ],
    "require-yield": Array [
      "error",
    ],
    "rest-spread-spacing": Array [
      "off",
    ],
    "semi": Array [
      "off",
    ],
    "semi-spacing": Array [
      "off",
    ],
    "semi-style": Array [
      "off",
    ],
    "sort-imports": Array [
      "error",
      Object {
        "allowSeparatedGroups": false,
        "ignoreCase": true,
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false,
      },
    ],
    "space-after-function-name": Array [
      "off",
    ],
    "space-after-keywords": Array [
      "off",
    ],
    "space-before-blocks": Array [
      "off",
    ],
    "space-before-function-paren": Array [
      "off",
    ],
    "space-before-function-parentheses": Array [
      "off",
    ],
    "space-before-keywords": Array [
      "off",
    ],
    "space-in-brackets": Array [
      "off",
    ],
    "space-in-parens": Array [
      "off",
    ],
    "space-infix-ops": Array [
      "off",
    ],
    "space-return-throw-case": Array [
      "off",
    ],
    "space-unary-ops": Array [
      "off",
    ],
    "space-unary-word-ops": Array [
      "off",
    ],
    "spaced-comment": Array [
      "warn",
      "always",
      Object {
        "block": Object {
          "balanced": true,
          "exceptions": Array [
            "-",
            "+",
          ],
          "markers": Array [
            "=",
            "!",
          ],
        },
        "line": Object {
          "exceptions": Array [
            "-",
            "+",
          ],
          "markers": Array [
            "=",
            "!",
          ],
        },
      },
    ],
    "standard/array-bracket-even-spacing": Array [
      "off",
    ],
    "standard/computed-property-even-spacing": Array [
      "off",
    ],
    "standard/object-curly-even-spacing": Array [
      "off",
    ],
    "strict": Array [
      "error",
    ],
    "switch-case/newline-between-switch-case": Array [
      "warn",
      "always",
      Object {
        "fallthrough": "never",
      },
    ],
    "switch-colon-spacing": Array [
      "off",
    ],
    "symbol-description": Array [
      "error",
    ],
    "template-curly-spacing": Array [
      "off",
    ],
    "template-tag-spacing": Array [
      "off",
    ],
    "unicode-bom": Array [
      "off",
    ],
    "unicorn/empty-brace-spaces": Array [
      "off",
    ],
    "unicorn/no-nested-ternary": Array [
      "off",
    ],
    "unicorn/number-literal-case": Array [
      "off",
    ],
    "use-isnan": Array [
      "error",
    ],
    "valid-jsdoc": Array [
      "off",
      Object {
        "requireParamDescription": false,
        "requireParamType": true,
        "requireReturn": true,
        "requireReturnDescription": false,
        "requireReturnType": true,
      },
    ],
    "valid-typeof": Array [
      "error",
      Object {
        "requireStringLiterals": true,
      },
    ],
    "vars-on-top": Array [
      "error",
    ],
    "vue/array-bracket-newline": Array [
      "off",
    ],
    "vue/array-bracket-spacing": Array [
      "off",
    ],
    "vue/arrow-spacing": Array [
      "off",
    ],
    "vue/block-spacing": Array [
      "off",
    ],
    "vue/block-tag-newline": Array [
      "off",
    ],
    "vue/brace-style": Array [
      "off",
    ],
    "vue/comma-dangle": Array [
      "off",
    ],
    "vue/comma-spacing": Array [
      "off",
    ],
    "vue/comma-style": Array [
      "off",
    ],
    "vue/dot-location": Array [
      "off",
    ],
    "vue/func-call-spacing": Array [
      "off",
    ],
    "vue/html-closing-bracket-newline": Array [
      "off",
    ],
    "vue/html-closing-bracket-spacing": Array [
      "off",
    ],
    "vue/html-end-tags": Array [
      "off",
    ],
    "vue/html-indent": Array [
      "off",
    ],
    "vue/html-quotes": Array [
      "off",
    ],
    "vue/html-self-closing": Array [
      0,
    ],
    "vue/key-spacing": Array [
      "off",
    ],
    "vue/keyword-spacing": Array [
      "off",
    ],
    "vue/max-attributes-per-line": Array [
      "off",
    ],
    "vue/max-len": Array [
      0,
    ],
    "vue/multiline-html-element-content-newline": Array [
      "off",
    ],
    "vue/mustache-interpolation-spacing": Array [
      "off",
    ],
    "vue/no-extra-parens": Array [
      "off",
    ],
    "vue/no-multi-spaces": Array [
      "off",
    ],
    "vue/no-spaces-around-equal-signs-in-attribute": Array [
      "off",
    ],
    "vue/object-curly-newline": Array [
      "off",
    ],
    "vue/object-curly-spacing": Array [
      "off",
    ],
    "vue/object-property-newline": Array [
      "off",
    ],
    "vue/operator-linebreak": Array [
      "off",
    ],
    "vue/script-indent": Array [
      "off",
    ],
    "vue/singleline-html-element-content-newline": Array [
      "off",
    ],
    "vue/space-in-parens": Array [
      "off",
    ],
    "vue/space-infix-ops": Array [
      "off",
    ],
    "vue/space-unary-ops": Array [
      "off",
    ],
    "vue/template-curly-spacing": Array [
      "off",
    ],
    "wrap-iife": Array [
      "off",
    ],
    "wrap-regex": Array [
      "off",
    ],
    "yield-star-spacing": Array [
      "off",
    ],
    "yoda": Array [
      "error",
    ],
  },
  "settings": Object {
    "react": Object {
      "version": "detect",
    },
  },
}
`;

exports[`keeps rules stable JSX 1`] = `
Object {
  "env": Object {
    "browser": true,
    "es6": true,
  },
  "globals": Object {},
  "ignorePatterns": Array [],
  "noInlineConfig": undefined,
  "parser": null,
  "parserOptions": Object {
    "ecmaFeatures": Object {
      "jsx": true,
    },
    "ecmaVersion": 2020,
    "sourceType": "module",
  },
  "plugins": Array [
    "switch-case",
    "gettext",
    "import",
    "jsdoc",
    "prettier",
    "react",
    "jsx-a11y",
    "react-hooks",
  ],
  "reportUnusedDisableDirectives": true,
  "rules": Object {
    "@babel/object-curly-spacing": Array [
      "off",
    ],
    "@babel/semi": Array [
      "off",
    ],
    "@typescript-eslint/brace-style": Array [
      "off",
    ],
    "@typescript-eslint/comma-dangle": Array [
      "off",
    ],
    "@typescript-eslint/comma-spacing": Array [
      "off",
    ],
    "@typescript-eslint/func-call-spacing": Array [
      "off",
    ],
    "@typescript-eslint/indent": Array [
      "off",
    ],
    "@typescript-eslint/keyword-spacing": Array [
      "off",
    ],
    "@typescript-eslint/member-delimiter-style": Array [
      "off",
    ],
    "@typescript-eslint/no-extra-parens": Array [
      "off",
    ],
    "@typescript-eslint/no-extra-semi": Array [
      "off",
    ],
    "@typescript-eslint/object-curly-spacing": Array [
      "off",
    ],
    "@typescript-eslint/quotes": Array [
      0,
    ],
    "@typescript-eslint/semi": Array [
      "off",
    ],
    "@typescript-eslint/space-before-function-paren": Array [
      "off",
    ],
    "@typescript-eslint/space-infix-ops": Array [
      "off",
    ],
    "@typescript-eslint/type-annotation-spacing": Array [
      "off",
    ],
    "array-bracket-newline": Array [
      "off",
    ],
    "array-bracket-spacing": Array [
      "off",
    ],
    "array-callback-return": Array [
      "error",
    ],
    "array-element-newline": Array [
      "off",
    ],
    "arrow-body-style": Array [
      "off",
      "as-needed",
      Object {
        "requireReturnForObjectLiteral": false,
      },
    ],
    "arrow-parens": Array [
      "off",
    ],
    "arrow-spacing": Array [
      "off",
    ],
    "babel/object-curly-spacing": Array [
      "off",
    ],
    "babel/quotes": Array [
      0,
    ],
    "babel/semi": Array [
      "off",
    ],
    "block-scoped-var": Array [
      "error",
    ],
    "block-spacing": Array [
      "off",
    ],
    "brace-style": Array [
      "off",
    ],
    "camelcase": Array [
      "error",
      Object {
        "ignoreDestructuring": false,
        "ignoreGlobals": false,
        "ignoreImports": false,
        "properties": "never",
      },
    ],
    "comma-dangle": Array [
      "off",
    ],
    "comma-spacing": Array [
      "off",
    ],
    "comma-style": Array [
      "off",
    ],
    "complexity": Array [
      "error",
    ],
    "computed-property-spacing": Array [
      "off",
    ],
    "consistent-return": Array [
      "error",
    ],
    "constructor-super": Array [
      "error",
    ],
    "curly": Array [
      "error",
      "all",
    ],
    "default-case": Array [
      "error",
    ],
    "default-param-last": Array [
      "error",
    ],
    "dot-location": Array [
      "off",
    ],
    "dot-notation": Array [
      "error",
      Object {
        "allowKeywords": true,
        "allowPattern": "",
      },
    ],
    "eol-last": Array [
      "off",
    ],
    "eqeqeq": Array [
      "error",
      "smart",
    ],
    "flowtype/boolean-style": Array [
      "off",
    ],
    "flowtype/delimiter-dangle": Array [
      "off",
    ],
    "flowtype/generic-spacing": Array [
      "off",
    ],
    "flowtype/object-type-curly-spacing": Array [
      "off",
    ],
    "flowtype/object-type-delimiter": Array [
      "off",
    ],
    "flowtype/quotes": Array [
      "off",
    ],
    "flowtype/semi": Array [
      "off",
    ],
    "flowtype/space-after-type-colon": Array [
      "off",
    ],
    "flowtype/space-before-generic-bracket": Array [
      "off",
    ],
    "flowtype/space-before-type-colon": Array [
      "off",
    ],
    "flowtype/union-intersection-spacing": Array [
      "off",
    ],
    "for-direction": Array [
      "error",
    ],
    "func-call-spacing": Array [
      "off",
    ],
    "func-names": Array [
      "warn",
    ],
    "function-call-argument-newline": Array [
      "off",
    ],
    "function-paren-newline": Array [
      "off",
    ],
    "generator-star": Array [
      "off",
    ],
    "generator-star-spacing": Array [
      "off",
    ],
    "getter-return": Array [
      "error",
      Object {
        "allowImplicit": true,
      },
    ],
    "gettext/no-variable-string": Array [
      "error",
    ],
    "global-require": Array [
      "error",
    ],
    "guard-for-in": Array [
      "error",
    ],
    "implicit-arrow-linebreak": Array [
      "off",
    ],
    "import/default": Array [
      "off",
    ],
    "import/dynamic-import-chunkname": Array [
      "error",
    ],
    "import/export": Array [
      2,
    ],
    "import/extensions": Array [
      "error",
      Object {
        "js": "never",
        "json": "always",
        "jsx": "never",
        "ts": "never",
        "tsx": "never",
      },
    ],
    "import/named": Array [
      2,
    ],
    "import/namespace": Array [
      2,
    ],
    "import/newline-after-import": Array [
      "warn",
    ],
    "import/no-absolute-path": Array [
      "error",
    ],
    "import/no-amd": Array [
      "error",
    ],
    "import/no-duplicates": Array [
      1,
    ],
    "import/no-dynamic-require": Array [
      "error",
    ],
    "import/no-extraneous-dependencies": Array [
      "error",
    ],
    "import/no-mutable-exports": Array [
      "error",
    ],
    "import/no-named-as-default": Array [
      1,
    ],
    "import/no-named-as-default-member": Array [
      1,
    ],
    "import/no-named-default": Array [
      "error",
    ],
    "import/no-unresolved": Array [
      "error",
      Object {
        "caseSensitive": true,
        "caseSensitiveStrict": false,
        "commonjs": true,
      },
    ],
    "import/no-webpack-loader-syntax": Array [
      "error",
    ],
    "import/order": Array [
      "warn",
      Object {
        "alphabetize": Object {
          "caseInsensitive": true,
          "order": "asc",
        },
        "groups": Array [
          Array [
            "builtin",
            "external",
          ],
          "internal",
          "parent",
          "sibling",
          "index",
        ],
        "newlines-between": "always",
        "warnOnUnassignedImports": false,
      },
    ],
    "indent": Array [
      "off",
    ],
    "indent-legacy": Array [
      "off",
    ],
    "jsdoc/check-alignment": Array [
      "error",
    ],
    "jsdoc/check-param-names": Array [
      "error",
    ],
    "jsdoc/check-syntax": Array [
      "error",
    ],
    "jsdoc/check-tag-names": Array [
      "error",
    ],
    "jsdoc/implements-on-classes": Array [
      "error",
    ],
    "jsdoc/newline-after-description": Array [
      "error",
    ],
    "jsdoc/require-param-name": Array [
      "error",
    ],
    "jsdoc/require-param-type": Array [
      "error",
    ],
    "jsdoc/require-returns-check": Array [
      "error",
    ],
    "jsdoc/require-returns-type": Array [
      "error",
    ],
    "jsx-a11y/alt-text": Array [
      "error",
    ],
    "jsx-a11y/anchor-has-content": Array [
      "error",
    ],
    "jsx-a11y/anchor-is-valid": Array [
      "error",
    ],
    "jsx-a11y/aria-activedescendant-has-tabindex": Array [
      "error",
    ],
    "jsx-a11y/aria-props": Array [
      "error",
    ],
    "jsx-a11y/aria-proptypes": Array [
      "error",
    ],
    "jsx-a11y/aria-role": Array [
      "error",
    ],
    "jsx-a11y/aria-unsupported-elements": Array [
      "error",
    ],
    "jsx-a11y/autocomplete-valid": Array [
      "error",
    ],
    "jsx-a11y/click-events-have-key-events": Array [
      "error",
    ],
    "jsx-a11y/control-has-associated-label": Array [
      "off",
      Object {
        "ignoreElements": Array [
          "audio",
          "canvas",
          "embed",
          "input",
          "textarea",
          "tr",
          "video",
        ],
        "ignoreRoles": Array [
          "grid",
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "row",
          "tablist",
          "toolbar",
          "tree",
          "treegrid",
        ],
        "includeRoles": Array [
          "alert",
          "dialog",
        ],
      },
    ],
    "jsx-a11y/heading-has-content": Array [
      "error",
    ],
    "jsx-a11y/html-has-lang": Array [
      "error",
    ],
    "jsx-a11y/iframe-has-title": Array [
      "error",
    ],
    "jsx-a11y/img-redundant-alt": Array [
      "error",
    ],
    "jsx-a11y/interactive-supports-focus": Array [
      "error",
      Object {
        "tabbable": Array [
          "button",
          "checkbox",
          "link",
          "searchbox",
          "spinbutton",
          "switch",
          "textbox",
        ],
      },
    ],
    "jsx-a11y/label-has-associated-control": Array [
      "error",
    ],
    "jsx-a11y/label-has-for": Array [
      "off",
    ],
    "jsx-a11y/media-has-caption": Array [
      "error",
    ],
    "jsx-a11y/mouse-events-have-key-events": Array [
      "error",
    ],
    "jsx-a11y/no-access-key": Array [
      "error",
    ],
    "jsx-a11y/no-autofocus": Array [
      "error",
    ],
    "jsx-a11y/no-distracting-elements": Array [
      "error",
    ],
    "jsx-a11y/no-interactive-element-to-noninteractive-role": Array [
      "error",
      Object {
        "canvas": Array [
          "img",
        ],
        "tr": Array [
          "none",
          "presentation",
        ],
      },
    ],
    "jsx-a11y/no-noninteractive-element-interactions": Array [
      "error",
      Object {
        "alert": Array [
          "onKeyUp",
          "onKeyDown",
          "onKeyPress",
        ],
        "body": Array [
          "onError",
          "onLoad",
        ],
        "dialog": Array [
          "onKeyUp",
          "onKeyDown",
          "onKeyPress",
        ],
        "handlers": Array [
          "onClick",
          "onError",
          "onLoad",
          "onMouseDown",
          "onMouseUp",
          "onKeyPress",
          "onKeyDown",
          "onKeyUp",
        ],
        "iframe": Array [
          "onError",
          "onLoad",
        ],
        "img": Array [
          "onError",
          "onLoad",
        ],
      },
    ],
    "jsx-a11y/no-noninteractive-element-to-interactive-role": Array [
      "error",
      Object {
        "fieldset": Array [
          "radiogroup",
          "presentation",
        ],
        "li": Array [
          "menuitem",
          "option",
          "row",
          "tab",
          "treeitem",
        ],
        "ol": Array [
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "tablist",
          "tree",
          "treegrid",
        ],
        "table": Array [
          "grid",
        ],
        "td": Array [
          "gridcell",
        ],
        "ul": Array [
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "tablist",
          "tree",
          "treegrid",
        ],
      },
    ],
    "jsx-a11y/no-noninteractive-tabindex": Array [
      "error",
      Object {
        "allowExpressionValues": true,
        "roles": Array [
          "tabpanel",
        ],
        "tags": Array [],
      },
    ],
    "jsx-a11y/no-onchange": Array [
      "off",
    ],
    "jsx-a11y/no-redundant-roles": Array [
      "error",
    ],
    "jsx-a11y/no-static-element-interactions": Array [
      "error",
      Object {
        "allowExpressionValues": true,
        "handlers": Array [
          "onClick",
          "onMouseDown",
          "onMouseUp",
          "onKeyPress",
          "onKeyDown",
          "onKeyUp",
        ],
      },
    ],
    "jsx-a11y/role-has-required-aria-props": Array [
      "error",
    ],
    "jsx-a11y/role-supports-aria-props": Array [
      "error",
    ],
    "jsx-a11y/scope": Array [
      "error",
    ],
    "jsx-a11y/tabindex-no-positive": Array [
      "error",
    ],
    "jsx-quotes": Array [
      "off",
    ],
    "key-spacing": Array [
      "off",
    ],
    "keyword-spacing": Array [
      "off",
    ],
    "linebreak-style": Array [
      "off",
    ],
    "lines-around-comment": Array [
      0,
    ],
    "lines-around-directive": Array [
      "error",
      Object {
        "after": "always",
        "before": "always",
      },
    ],
    "max-classes-per-file": Array [
      "error",
      1,
    ],
    "max-len": Array [
      0,
    ],
    "multiline-ternary": Array [
      "off",
    ],
    "new-cap": Array [
      "error",
      Object {
        "capIsNew": false,
        "capIsNewExceptions": Array [
          "Immutable.Map",
          "Immutable.Set",
          "Immutable.List",
        ],
        "newIsCap": true,
        "newIsCapExceptions": Array [],
        "properties": true,
      },
    ],
    "new-parens": Array [
      "off",
    ],
    "newline-per-chained-call": Array [
      "off",
    ],
    "no-alert": Array [
      "warn",
    ],
    "no-array-constructor": Array [
      "error",
    ],
    "no-arrow-condition": Array [
      "off",
    ],
    "no-async-promise-executor": Array [
      "error",
    ],
    "no-await-in-loop": Array [
      "error",
    ],
    "no-bitwise": Array [
      "error",
    ],
    "no-buffer-constructor": Array [
      "error",
    ],
    "no-caller": Array [
      "error",
    ],
    "no-case-declarations": Array [
      "error",
    ],
    "no-class-assign": Array [
      "error",
    ],
    "no-comma-dangle": Array [
      "off",
    ],
    "no-compare-neg-zero": Array [
      "error",
    ],
    "no-cond-assign": Array [
      "error",
      "always",
    ],
    "no-confusing-arrow": Array [
      0,
    ],
    "no-console": Array [
      "warn",
    ],
    "no-const-assign": Array [
      "error",
    ],
    "no-constant-condition": Array [
      "warn",
    ],
    "no-continue": Array [
      "error",
    ],
    "no-control-regex": Array [
      "error",
    ],
    "no-debugger": Array [
      "error",
    ],
    "no-delete-var": Array [
      "error",
    ],
    "no-dupe-args": Array [
      "error",
    ],
    "no-dupe-class-members": Array [
      "error",
    ],
    "no-dupe-else-if": Array [
      "error",
    ],
    "no-dupe-keys": Array [
      "error",
    ],
    "no-duplicate-case": Array [
      "error",
    ],
    "no-duplicate-imports": Array [
      "error",
    ],
    "no-else-return": Array [
      "error",
      Object {
        "allowElseIf": true,
      },
    ],
    "no-empty": Array [
      "error",
    ],
    "no-empty-character-class": Array [
      "error",
    ],
    "no-empty-function": Array [
      "error",
      Object {
        "allow": Array [
          "arrowFunctions",
          "functions",
          "methods",
        ],
      },
    ],
    "no-empty-pattern": Array [
      "error",
    ],
    "no-eval": Array [
      "error",
    ],
    "no-ex-assign": Array [
      "error",
    ],
    "no-extend-native": Array [
      "error",
    ],
    "no-extra-bind": Array [
      "error",
    ],
    "no-extra-boolean-cast": Array [
      "error",
    ],
    "no-extra-label": Array [
      "error",
    ],
    "no-extra-parens": Array [
      "off",
    ],
    "no-extra-semi": Array [
      "off",
    ],
    "no-fallthrough": Array [
      "error",
    ],
    "no-floating-decimal": Array [
      "off",
    ],
    "no-func-assign": Array [
      "error",
    ],
    "no-global-assign": Array [
      "error",
    ],
    "no-implied-eval": Array [
      "error",
    ],
    "no-import-assign": Array [
      "error",
    ],
    "no-inner-declarations": Array [
      "error",
    ],
    "no-invalid-regexp": Array [
      "error",
    ],
    "no-irregular-whitespace": Array [
      "error",
    ],
    "no-iterator": Array [
      "error",
    ],
    "no-label-var": Array [
      "error",
    ],
    "no-labels": Array [
      "error",
      Object {
        "allowLoop": false,
        "allowSwitch": false,
      },
    ],
    "no-lone-blocks": Array [
      "error",
    ],
    "no-lonely-if": Array [
      "error",
    ],
    "no-loop-func": Array [
      "error",
    ],
    "no-loss-of-precision": Array [
      "error",
    ],
    "no-misleading-character-class": Array [
      "error",
    ],
    "no-mixed-operators": Array [
      0,
    ],
    "no-mixed-spaces-and-tabs": Array [
      "off",
    ],
    "no-multi-assign": Array [
      "error",
    ],
    "no-multi-spaces": Array [
      "off",
    ],
    "no-multi-str": Array [
      "error",
    ],
    "no-multiple-empty-lines": Array [
      "off",
    ],
    "no-nested-ternary": Array [
      "error",
    ],
    "no-new": Array [
      "error",
    ],
    "no-new-func": Array [
      "error",
    ],
    "no-new-object": Array [
      "error",
    ],
    "no-new-require": Array [
      "error",
    ],
    "no-new-symbol": Array [
      "error",
    ],
    "no-new-wrappers": Array [
      "error",
    ],
    "no-nonoctal-decimal-escape": Array [
      "error",
    ],
    "no-obj-calls": Array [
      "error",
    ],
    "no-octal": Array [
      "error",
    ],
    "no-octal-escape": Array [
      "error",
    ],
    "no-param-reassign": Array [
      "error",
      Object {
        "props": false,
      },
    ],
    "no-path-concat": Array [
      "error",
    ],
    "no-plusplus": Array [
      "error",
    ],
    "no-proto": Array [
      "error",
    ],
    "no-prototype-builtins": Array [
      "off",
    ],
    "no-redeclare": Array [
      "error",
    ],
    "no-regex-spaces": Array [
      "error",
    ],
    "no-reserved-keys": Array [
      "off",
    ],
    "no-restricted-globals": Array [
      "error",
      "isFinite",
      "isNaN",
      "addEventListener",
      "blur",
      "close",
      "closed",
      "confirm",
      "defaultStatus",
      "event",
      "external",
      "defaultstatus",
      "find",
      "focus",
      "frameElement",
      "frames",
      "history",
      "innerHeight",
      "innerWidth",
      "length",
      "location",
      "locationbar",
      "menubar",
      "moveBy",
      "moveTo",
      "name",
      "onblur",
      "onerror",
      "onfocus",
      "onload",
      "onresize",
      "onunload",
      "open",
      "opener",
      "opera",
      "outerHeight",
      "outerWidth",
      "pageXOffset",
      "pageYOffset",
      "parent",
      "print",
      "removeEventListener",
      "resizeBy",
      "resizeTo",
      "screen",
      "screenLeft",
      "screenTop",
      "screenX",
      "screenY",
      "scroll",
      "scrollbars",
      "scrollBy",
      "scrollTo",
      "scrollX",
      "scrollY",
      "self",
      "status",
      "statusbar",
      "stop",
      "toolbar",
      "top",
    ],
    "no-restricted-imports": Array [
      "error",
    ],
    "no-restricted-properties": Array [
      "error",
      Object {
        "message": "arguments.callee is deprecated",
        "object": "arguments",
        "property": "callee",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "global",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "self",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "window",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "global",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "self",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "window",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineGetter__",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineSetter__",
      },
      Object {
        "message": "Use the exponentiation operator (**) instead.",
        "object": "Math",
        "property": "pow",
      },
    ],
    "no-restricted-syntax": Array [
      "error",
      Object {
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.",
        "selector": "ForInStatement",
      },
      Object {
        "message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.",
        "selector": "ForOfStatement",
      },
      Object {
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.",
        "selector": "LabeledStatement",
      },
      Object {
        "message": "\`with\` is disallowed in strict mode because it makes code impossible to predict and optimize.",
        "selector": "WithStatement",
      },
      Object {
        "message": "Property setters are not allowed",
        "selector": "MethodDefinition[kind=\\"set\\"]",
      },
      Object {
        "message": "Property getters are not allowed",
        "selector": "MethodDefinition[kind=\\"get\\"]",
      },
    ],
    "no-return-assign": Array [
      "error",
      "except-parens",
    ],
    "no-return-await": Array [
      "error",
    ],
    "no-script-url": Array [
      "error",
    ],
    "no-self-assign": Array [
      "error",
    ],
    "no-self-compare": Array [
      "error",
    ],
    "no-sequences": Array [
      "error",
    ],
    "no-setter-return": Array [
      "error",
    ],
    "no-shadow": Array [
      "error",
      Object {
        "builtinGlobals": false,
        "hoist": "all",
      },
    ],
    "no-shadow-restricted-names": Array [
      "error",
    ],
    "no-space-before-semi": Array [
      "off",
    ],
    "no-spaced-func": Array [
      "off",
    ],
    "no-sparse-arrays": Array [
      "error",
    ],
    "no-tabs": Array [
      0,
    ],
    "no-template-curly-in-string": Array [
      "error",
    ],
    "no-this-before-super": Array [
      "error",
    ],
    "no-trailing-spaces": Array [
      "off",
    ],
    "no-undef": Array [
      "error",
    ],
    "no-undef-init": Array [
      "error",
    ],
    "no-underscore-dangle": Array [
      "error",
      Object {
        "allowAfterSuper": true,
        "allowAfterThis": true,
        "allowAfterThisConstructor": false,
        "allowFunctionParams": true,
        "enforceInMethodNames": false,
      },
    ],
    "no-unexpected-multiline": Array [
      0,
    ],
    "no-unneeded-ternary": Array [
      "error",
      Object {
        "defaultAssignment": false,
      },
    ],
    "no-unreachable": Array [
      "error",
    ],
    "no-unsafe-finally": Array [
      "error",
    ],
    "no-unsafe-negation": Array [
      "error",
    ],
    "no-unsafe-optional-chaining": Array [
      "error",
    ],
    "no-unused-expressions": Array [
      "error",
    ],
    "no-unused-labels": Array [
      "error",
    ],
    "no-unused-vars": Array [
      "error",
      Object {
        "args": "after-used",
        "ignoreRestSiblings": true,
        "vars": "all",
      },
    ],
    "no-use-before-define": Array [
      "error",
      "nofunc",
    ],
    "no-useless-backreference": Array [
      "error",
    ],
    "no-useless-catch": Array [
      "error",
    ],
    "no-useless-computed-key": Array [
      "error",
    ],
    "no-useless-concat": Array [
      "error",
    ],
    "no-useless-constructor": Array [
      "error",
    ],
    "no-useless-escape": Array [
      "error",
    ],
    "no-useless-rename": Array [
      "error",
      Object {
        "ignoreDestructuring": false,
        "ignoreExport": false,
        "ignoreImport": false,
      },
    ],
    "no-useless-return": Array [
      "error",
    ],
    "no-var": Array [
      "error",
    ],
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "no-whitespace-before-property": Array [
      "off",
    ],
    "no-with": Array [
      "error",
    ],
    "no-wrap-func": Array [
      "off",
    ],
    "nonblock-statement-body-position": Array [
      "off",
    ],
    "object-curly-newline": Array [
      "off",
    ],
    "object-curly-spacing": Array [
      "off",
    ],
    "object-property-newline": Array [
      "off",
    ],
    "object-shorthand": Array [
      "error",
      "always",
      Object {
        "avoidQuotes": true,
        "ignoreConstructors": false,
      },
    ],
    "one-var": Array [
      "error",
      "never",
    ],
    "one-var-declaration-per-line": Array [
      "off",
    ],
    "operator-assignment": Array [
      "error",
      "always",
    ],
    "operator-linebreak": Array [
      "off",
    ],
    "padded-blocks": Array [
      "off",
    ],
    "padding-line-between-statements": Array [
      "warn",
      Object {
        "blankLine": "always",
        "next": "return",
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": Array [
          "block",
          "block-like",
          "class",
          "const",
          "let",
          "var",
        ],
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": "*",
        "prev": Array [
          "block",
          "block-like",
          "class",
          "const",
          "let",
          "var",
        ],
      },
      Object {
        "blankLine": "any",
        "next": Array [
          "const",
          "let",
          "var",
        ],
        "prev": Array [
          "const",
          "let",
          "var",
        ],
      },
      Object {
        "blankLine": "any",
        "next": Array [
          "case",
        ],
        "prev": Array [
          "case",
        ],
      },
    ],
    "prefer-arrow-callback": Array [
      "off",
      Object {
        "allowNamedFunctions": false,
        "allowUnboundThis": true,
      },
    ],
    "prefer-const": Array [
      "error",
      Object {
        "destructuring": "any",
        "ignoreReadBeforeAssign": true,
      },
    ],
    "prefer-numeric-literals": Array [
      "error",
    ],
    "prefer-rest-params": Array [
      "error",
    ],
    "prefer-template": Array [
      "error",
    ],
    "prettier/prettier": Array [
      "warn",
      Object {
        "printWidth": 100,
        "singleQuote": true,
        "trailingComma": "all",
      },
      Object {
        "usePrettierrc": false,
      },
    ],
    "quote-props": Array [
      "off",
    ],
    "quotes": Array [
      0,
    ],
    "radix": Array [
      "error",
    ],
    "react-hooks/exhaustive-deps": Array [
      "error",
    ],
    "react-hooks/rules-of-hooks": Array [
      "error",
    ],
    "react/destructuring-assignment": Array [
      "error",
    ],
    "react/display-name": Array [
      "off",
    ],
    "react/jsx-child-element-spacing": Array [
      "off",
    ],
    "react/jsx-closing-bracket-location": Array [
      "off",
    ],
    "react/jsx-closing-tag-location": Array [
      "off",
    ],
    "react/jsx-curly-brace-presence": Array [
      "error",
      Object {
        "children": "never",
        "propElementValues": "always",
        "props": "never",
      },
    ],
    "react/jsx-curly-newline": Array [
      "off",
    ],
    "react/jsx-curly-spacing": Array [
      "off",
    ],
    "react/jsx-equals-spacing": Array [
      "off",
    ],
    "react/jsx-first-prop-new-line": Array [
      "off",
    ],
    "react/jsx-fragments": Array [
      "error",
      "syntax",
    ],
    "react/jsx-indent": Array [
      "off",
    ],
    "react/jsx-indent-props": Array [
      "off",
    ],
    "react/jsx-key": Array [
      2,
    ],
    "react/jsx-max-props-per-line": Array [
      "off",
    ],
    "react/jsx-newline": Array [
      "off",
    ],
    "react/jsx-no-bind": Array [
      "error",
      Object {
        "allowArrowFunctions": true,
        "allowBind": false,
        "allowFunctions": false,
        "ignoreDOMComponents": false,
        "ignoreRefs": false,
      },
    ],
    "react/jsx-no-comment-textnodes": Array [
      2,
    ],
    "react/jsx-no-duplicate-props": Array [
      2,
    ],
    "react/jsx-no-target-blank": Array [
      2,
    ],
    "react/jsx-no-undef": Array [
      2,
    ],
    "react/jsx-no-useless-fragment": Array [
      "error",
    ],
    "react/jsx-one-expression-per-line": Array [
      "off",
    ],
    "react/jsx-pascal-case": Array [
      "error",
    ],
    "react/jsx-props-no-multi-spaces": Array [
      "off",
    ],
    "react/jsx-sort-props": Array [
      "warn",
    ],
    "react/jsx-space-before-closing": Array [
      "off",
    ],
    "react/jsx-tag-spacing": Array [
      "off",
    ],
    "react/jsx-uses-react": Array [
      2,
    ],
    "react/jsx-uses-vars": Array [
      2,
    ],
    "react/jsx-wrap-multilines": Array [
      "off",
    ],
    "react/no-children-prop": Array [
      2,
    ],
    "react/no-danger-with-children": Array [
      2,
    ],
    "react/no-deprecated": Array [
      2,
    ],
    "react/no-direct-mutation-state": Array [
      2,
    ],
    "react/no-find-dom-node": Array [
      2,
    ],
    "react/no-is-mounted": Array [
      2,
    ],
    "react/no-redundant-should-component-update": Array [
      "error",
    ],
    "react/no-render-return-value": Array [
      2,
    ],
    "react/no-string-refs": Array [
      2,
    ],
    "react/no-this-in-sfc": Array [
      "error",
    ],
    "react/no-unescaped-entities": Array [
      "error",
      Object {
        "forbid": Array [
          Object {
            "alternatives": Array [
              "&gt;",
            ],
            "char": ">",
          },
          Object {
            "alternatives": Array [
              "&#125;",
            ],
            "char": "}",
          },
        ],
      },
    ],
    "react/no-unknown-property": Array [
      2,
    ],
    "react/no-unsafe": Array [
      "error",
    ],
    "react/no-unused-state": Array [
      "error",
    ],
    "react/prefer-es6-class": Array [
      "error",
    ],
    "react/prefer-read-only-props": Array [
      "error",
    ],
    "react/prop-types": Array [
      "off",
    ],
    "react/react-in-jsx-scope": Array [
      2,
    ],
    "react/require-render-return": Array [
      2,
    ],
    "react/self-closing-comp": Array [
      "error",
    ],
    "react/style-prop-object": Array [
      "error",
    ],
    "require-yield": Array [
      "error",
    ],
    "rest-spread-spacing": Array [
      "off",
    ],
    "semi": Array [
      "off",
    ],
    "semi-spacing": Array [
      "off",
    ],
    "semi-style": Array [
      "off",
    ],
    "sort-imports": Array [
      "error",
      Object {
        "allowSeparatedGroups": false,
        "ignoreCase": true,
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false,
      },
    ],
    "space-after-function-name": Array [
      "off",
    ],
    "space-after-keywords": Array [
      "off",
    ],
    "space-before-blocks": Array [
      "off",
    ],
    "space-before-function-paren": Array [
      "off",
    ],
    "space-before-function-parentheses": Array [
      "off",
    ],
    "space-before-keywords": Array [
      "off",
    ],
    "space-in-brackets": Array [
      "off",
    ],
    "space-in-parens": Array [
      "off",
    ],
    "space-infix-ops": Array [
      "off",
    ],
    "space-return-throw-case": Array [
      "off",
    ],
    "space-unary-ops": Array [
      "off",
    ],
    "space-unary-word-ops": Array [
      "off",
    ],
    "spaced-comment": Array [
      "warn",
      "always",
      Object {
        "block": Object {
          "balanced": true,
          "exceptions": Array [
            "-",
            "+",
          ],
          "markers": Array [
            "=",
            "!",
          ],
        },
        "line": Object {
          "exceptions": Array [
            "-",
            "+",
          ],
          "markers": Array [
            "=",
            "!",
          ],
        },
      },
    ],
    "standard/array-bracket-even-spacing": Array [
      "off",
    ],
    "standard/computed-property-even-spacing": Array [
      "off",
    ],
    "standard/object-curly-even-spacing": Array [
      "off",
    ],
    "strict": Array [
      "error",
    ],
    "switch-case/newline-between-switch-case": Array [
      "warn",
      "always",
      Object {
        "fallthrough": "never",
      },
    ],
    "switch-colon-spacing": Array [
      "off",
    ],
    "symbol-description": Array [
      "error",
    ],
    "template-curly-spacing": Array [
      "off",
    ],
    "template-tag-spacing": Array [
      "off",
    ],
    "unicode-bom": Array [
      "off",
    ],
    "unicorn/empty-brace-spaces": Array [
      "off",
    ],
    "unicorn/no-nested-ternary": Array [
      "off",
    ],
    "unicorn/number-literal-case": Array [
      "off",
    ],
    "use-isnan": Array [
      "error",
    ],
    "valid-jsdoc": Array [
      "off",
      Object {
        "requireParamDescription": false,
        "requireParamType": true,
        "requireReturn": true,
        "requireReturnDescription": false,
        "requireReturnType": true,
      },
    ],
    "valid-typeof": Array [
      "error",
      Object {
        "requireStringLiterals": true,
      },
    ],
    "vars-on-top": Array [
      "error",
    ],
    "vue/array-bracket-newline": Array [
      "off",
    ],
    "vue/array-bracket-spacing": Array [
      "off",
    ],
    "vue/arrow-spacing": Array [
      "off",
    ],
    "vue/block-spacing": Array [
      "off",
    ],
    "vue/block-tag-newline": Array [
      "off",
    ],
    "vue/brace-style": Array [
      "off",
    ],
    "vue/comma-dangle": Array [
      "off",
    ],
    "vue/comma-spacing": Array [
      "off",
    ],
    "vue/comma-style": Array [
      "off",
    ],
    "vue/dot-location": Array [
      "off",
    ],
    "vue/func-call-spacing": Array [
      "off",
    ],
    "vue/html-closing-bracket-newline": Array [
      "off",
    ],
    "vue/html-closing-bracket-spacing": Array [
      "off",
    ],
    "vue/html-end-tags": Array [
      "off",
    ],
    "vue/html-indent": Array [
      "off",
    ],
    "vue/html-quotes": Array [
      "off",
    ],
    "vue/html-self-closing": Array [
      0,
    ],
    "vue/key-spacing": Array [
      "off",
    ],
    "vue/keyword-spacing": Array [
      "off",
    ],
    "vue/max-attributes-per-line": Array [
      "off",
    ],
    "vue/max-len": Array [
      0,
    ],
    "vue/multiline-html-element-content-newline": Array [
      "off",
    ],
    "vue/mustache-interpolation-spacing": Array [
      "off",
    ],
    "vue/no-extra-parens": Array [
      "off",
    ],
    "vue/no-multi-spaces": Array [
      "off",
    ],
    "vue/no-spaces-around-equal-signs-in-attribute": Array [
      "off",
    ],
    "vue/object-curly-newline": Array [
      "off",
    ],
    "vue/object-curly-spacing": Array [
      "off",
    ],
    "vue/object-property-newline": Array [
      "off",
    ],
    "vue/operator-linebreak": Array [
      "off",
    ],
    "vue/script-indent": Array [
      "off",
    ],
    "vue/singleline-html-element-content-newline": Array [
      "off",
    ],
    "vue/space-in-parens": Array [
      "off",
    ],
    "vue/space-infix-ops": Array [
      "off",
    ],
    "vue/space-unary-ops": Array [
      "off",
    ],
    "vue/template-curly-spacing": Array [
      "off",
    ],
    "wrap-iife": Array [
      "off",
    ],
    "wrap-regex": Array [
      "off",
    ],
    "yield-star-spacing": Array [
      "off",
    ],
    "yoda": Array [
      "error",
    ],
  },
  "settings": Object {
    "react": Object {
      "version": "detect",
    },
  },
}
`;

exports[`keeps rules stable TS 1`] = `
Object {
  "env": Object {
    "browser": true,
    "es6": true,
  },
  "globals": Object {},
  "ignorePatterns": Array [],
  "noInlineConfig": undefined,
  "parser": "<rootDir>/node_modules/@typescript-eslint/parser/dist/index.js",
  "parserOptions": Object {
    "ecmaFeatures": Object {
      "jsx": true,
    },
    "ecmaVersion": 2020,
    "project": "<rootDir>/tsconfig.json",
    "sourceType": "module",
  },
  "plugins": Array [
    "switch-case",
    "gettext",
    "import",
    "jsdoc",
    "prettier",
    "react",
    "jsx-a11y",
    "react-hooks",
    "@bigcommerce",
    "@typescript-eslint",
  ],
  "reportUnusedDisableDirectives": true,
  "rules": Object {
    "@babel/object-curly-spacing": Array [
      "off",
    ],
    "@babel/semi": Array [
      "off",
    ],
    "@bigcommerce/jsx-short-circuit-conditionals": Array [
      "error",
    ],
    "@typescript-eslint/adjacent-overload-signatures": Array [
      "error",
    ],
    "@typescript-eslint/array-type": Array [
      "error",
      Object {
        "default": "array-simple",
      },
    ],
    "@typescript-eslint/await-thenable": Array [
      "error",
    ],
    "@typescript-eslint/ban-ts-comment": Array [
      "error",
    ],
    "@typescript-eslint/ban-types": Array [
      "error",
    ],
    "@typescript-eslint/brace-style": Array [
      "off",
    ],
    "@typescript-eslint/comma-dangle": Array [
      "off",
    ],
    "@typescript-eslint/comma-spacing": Array [
      "off",
    ],
    "@typescript-eslint/consistent-type-assertions": Array [
      "error",
      Object {
        "assertionStyle": "never",
      },
    ],
    "@typescript-eslint/consistent-type-definitions": Array [
      "error",
    ],
    "@typescript-eslint/default-param-last": Array [
      "error",
    ],
    "@typescript-eslint/dot-notation": Array [
      "error",
      Object {
        "allowIndexSignaturePropertyAccess": false,
        "allowKeywords": true,
        "allowPattern": "",
        "allowPrivateClassPropertyAccess": false,
        "allowProtectedClassPropertyAccess": false,
      },
    ],
    "@typescript-eslint/explicit-function-return-type": Array [
      "off",
    ],
    "@typescript-eslint/explicit-member-accessibility": Array [
      "error",
      Object {
        "accessibility": "no-public",
      },
    ],
    "@typescript-eslint/explicit-module-boundary-types": Array [
      "off",
    ],
    "@typescript-eslint/func-call-spacing": Array [
      "off",
    ],
    "@typescript-eslint/indent": Array [
      "off",
    ],
    "@typescript-eslint/keyword-spacing": Array [
      "off",
    ],
    "@typescript-eslint/member-delimiter-style": Array [
      "off",
    ],
    "@typescript-eslint/member-ordering": Array [
      "error",
    ],
    "@typescript-eslint/naming-convention": Array [
      "error",
      Object {
        "format": Array [
          "camelCase",
          "PascalCase",
        ],
        "selector": "default",
      },
      Object {
        "format": Array [
          "camelCase",
          "PascalCase",
          "UPPER_CASE",
        ],
        "selector": "variable",
      },
      Object {
        "format": Array [
          "camelCase",
          "UPPER_CASE",
        ],
        "selector": "variable",
        "types": Array [
          "boolean",
          "string",
          "number",
          "array",
        ],
      },
      Object {
        "format": Array [
          "camelCase",
        ],
        "selector": "property",
      },
      Object {
        "format": Array [
          "camelCase",
        ],
        "selector": "parameterProperty",
      },
      Object {
        "format": Array [
          "PascalCase",
        ],
        "selector": "typeLike",
      },
      Object {
        "format": Array [
          "PascalCase",
          "UPPER_CASE",
        ],
        "selector": "enumMember",
      },
      Object {
        "format": Array [
          "camelCase",
        ],
        "selector": "parameter",
      },
      Object {
        "format": Array [
          "camelCase",
        ],
        "leadingUnderscore": "allow",
        "modifiers": Array [
          "unused",
        ],
        "selector": "parameter",
      },
      Object {
        "format": null,
        "modifiers": Array [
          "requiresQuotes",
        ],
        "selector": Array [
          "objectLiteralProperty",
          "typeProperty",
        ],
      },
    ],
    "@typescript-eslint/no-array-constructor": Array [
      "error",
    ],
    "@typescript-eslint/no-duplicate-imports": Array [
      "error",
    ],
    "@typescript-eslint/no-empty-function": Array [
      "error",
    ],
    "@typescript-eslint/no-empty-interface": Array [
      "error",
    ],
    "@typescript-eslint/no-explicit-any": Array [
      "error",
    ],
    "@typescript-eslint/no-extra-non-null-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-extra-parens": Array [
      "off",
    ],
    "@typescript-eslint/no-extra-semi": Array [
      "error",
    ],
    "@typescript-eslint/no-floating-promises": Array [
      "error",
    ],
    "@typescript-eslint/no-for-in-array": Array [
      "error",
    ],
    "@typescript-eslint/no-implied-eval": Array [
      "error",
    ],
    "@typescript-eslint/no-inferrable-types": Array [
      "error",
    ],
    "@typescript-eslint/no-loss-of-precision": Array [
      "error",
    ],
    "@typescript-eslint/no-misused-new": Array [
      "error",
    ],
    "@typescript-eslint/no-misused-promises": Array [
      "error",
    ],
    "@typescript-eslint/no-namespace": Array [
      "error",
      Object {
        "allowDeclarations": true,
      },
    ],
    "@typescript-eslint/no-non-null-asserted-optional-chain": Array [
      "error",
    ],
    "@typescript-eslint/no-non-null-assertion": Array [
      "warn",
    ],
    "@typescript-eslint/no-shadow": Array [
      "error",
      Object {
        "hoist": "all",
      },
    ],
    "@typescript-eslint/no-this-alias": Array [
      "error",
    ],
    "@typescript-eslint/no-throw-literal": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-condition": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-type-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-type-constraint": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-argument": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-assignment": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-call": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-member-access": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-return": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-expressions": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-vars": Array [
      "error",
      Object {
        "args": "after-used",
        "ignoreRestSiblings": true,
        "vars": "all",
      },
    ],
    "@typescript-eslint/no-use-before-define": Array [
      "error",
      "nofunc",
    ],
    "@typescript-eslint/no-useless-constructor": Array [
      "error",
    ],
    "@typescript-eslint/no-var-requires": Array [
      "error",
    ],
    "@typescript-eslint/object-curly-spacing": Array [
      "off",
    ],
    "@typescript-eslint/padding-line-between-statements": Array [
      "warn",
      Object {
        "blankLine": "always",
        "next": "return",
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": Array [
          "block",
          "block-like",
          "class",
          "const",
          "let",
          "var",
          "interface",
        ],
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": "*",
        "prev": Array [
          "block",
          "block-like",
          "class",
          "const",
          "let",
          "var",
          "interface",
        ],
      },
      Object {
        "blankLine": "any",
        "next": Array [
          "const",
          "let",
          "var",
        ],
        "prev": Array [
          "const",
          "let",
          "var",
        ],
      },
      Object {
        "blankLine": "any",
        "next": Array [
          "case",
        ],
        "prev": Array [
          "case",
        ],
      },
    ],
    "@typescript-eslint/prefer-as-const": Array [
      "error",
    ],
    "@typescript-eslint/prefer-for-of": Array [
      "error",
    ],
    "@typescript-eslint/prefer-function-type": Array [
      "error",
    ],
    "@typescript-eslint/prefer-namespace-keyword": Array [
      "error",
    ],
    "@typescript-eslint/quotes": Array [
      0,
    ],
    "@typescript-eslint/require-await": Array [
      "error",
    ],
    "@typescript-eslint/restrict-plus-operands": Array [
      "error",
    ],
    "@typescript-eslint/restrict-template-expressions": Array [
      "error",
    ],
    "@typescript-eslint/return-await": Array [
      "error",
    ],
    "@typescript-eslint/semi": Array [
      "off",
    ],
    "@typescript-eslint/space-before-function-paren": Array [
      "off",
    ],
    "@typescript-eslint/space-infix-ops": Array [
      "off",
    ],
    "@typescript-eslint/triple-slash-reference": Array [
      "error",
    ],
    "@typescript-eslint/type-annotation-spacing": Array [
      "off",
    ],
    "@typescript-eslint/unbound-method": Array [
      "off",
    ],
    "@typescript-eslint/unified-signatures": Array [
      "error",
    ],
    "array-bracket-newline": Array [
      "off",
    ],
    "array-bracket-spacing": Array [
      "off",
    ],
    "array-callback-return": Array [
      "error",
    ],
    "array-element-newline": Array [
      "off",
    ],
    "arrow-body-style": Array [
      "off",
      "as-needed",
      Object {
        "requireReturnForObjectLiteral": false,
      },
    ],
    "arrow-parens": Array [
      "off",
    ],
    "arrow-spacing": Array [
      "off",
    ],
    "babel/object-curly-spacing": Array [
      "off",
    ],
    "babel/quotes": Array [
      0,
    ],
    "babel/semi": Array [
      "off",
    ],
    "block-scoped-var": Array [
      "error",
    ],
    "block-spacing": Array [
      "off",
    ],
    "brace-style": Array [
      "off",
    ],
    "camelcase": Array [
      "off",
      Object {
        "ignoreDestructuring": false,
        "ignoreGlobals": false,
        "ignoreImports": false,
        "properties": "never",
      },
    ],
    "comma-dangle": Array [
      "off",
    ],
    "comma-spacing": Array [
      "off",
    ],
    "comma-style": Array [
      "off",
    ],
    "complexity": Array [
      "error",
    ],
    "computed-property-spacing": Array [
      "off",
    ],
    "consistent-return": Array [
      "off",
    ],
    "constructor-super": Array [
      "off",
    ],
    "curly": Array [
      "error",
      "all",
    ],
    "default-case": Array [
      "off",
    ],
    "default-param-last": Array [
      "off",
    ],
    "dot-location": Array [
      "off",
    ],
    "dot-notation": Array [
      "error",
      Object {
        "allowKeywords": true,
        "allowPattern": "",
      },
    ],
    "eol-last": Array [
      "off",
    ],
    "eqeqeq": Array [
      "error",
      "smart",
    ],
    "flowtype/boolean-style": Array [
      "off",
    ],
    "flowtype/delimiter-dangle": Array [
      "off",
    ],
    "flowtype/generic-spacing": Array [
      "off",
    ],
    "flowtype/object-type-curly-spacing": Array [
      "off",
    ],
    "flowtype/object-type-delimiter": Array [
      "off",
    ],
    "flowtype/quotes": Array [
      "off",
    ],
    "flowtype/semi": Array [
      "off",
    ],
    "flowtype/space-after-type-colon": Array [
      "off",
    ],
    "flowtype/space-before-generic-bracket": Array [
      "off",
    ],
    "flowtype/space-before-type-colon": Array [
      "off",
    ],
    "flowtype/union-intersection-spacing": Array [
      "off",
    ],
    "for-direction": Array [
      "error",
    ],
    "func-call-spacing": Array [
      "off",
    ],
    "func-names": Array [
      "warn",
    ],
    "function-call-argument-newline": Array [
      "off",
    ],
    "function-paren-newline": Array [
      "off",
    ],
    "generator-star": Array [
      "off",
    ],
    "generator-star-spacing": Array [
      "off",
    ],
    "getter-return": Array [
      "off",
      Object {
        "allowImplicit": true,
      },
    ],
    "gettext/no-variable-string": Array [
      "error",
    ],
    "global-require": Array [
      "error",
    ],
    "guard-for-in": Array [
      "error",
    ],
    "implicit-arrow-linebreak": Array [
      "off",
    ],
    "import/default": Array [
      "off",
    ],
    "import/dynamic-import-chunkname": Array [
      "error",
    ],
    "import/export": Array [
      2,
    ],
    "import/extensions": Array [
      "error",
      Object {
        "js": "never",
        "json": "always",
        "jsx": "never",
        "ts": "never",
        "tsx": "never",
      },
    ],
    "import/named": Array [
      "off",
    ],
    "import/namespace": Array [
      2,
    ],
    "import/newline-after-import": Array [
      "warn",
    ],
    "import/no-absolute-path": Array [
      "error",
    ],
    "import/no-amd": Array [
      "error",
    ],
    "import/no-duplicates": Array [
      1,
    ],
    "import/no-dynamic-require": Array [
      "error",
    ],
    "import/no-extraneous-dependencies": Array [
      "error",
    ],
    "import/no-mutable-exports": Array [
      "error",
    ],
    "import/no-named-as-default": Array [
      1,
    ],
    "import/no-named-as-default-member": Array [
      1,
    ],
    "import/no-named-default": Array [
      "error",
    ],
    "import/no-unresolved": Array [
      "error",
      Object {
        "caseSensitive": true,
        "caseSensitiveStrict": false,
        "commonjs": true,
      },
    ],
    "import/no-webpack-loader-syntax": Array [
      "error",
    ],
    "import/order": Array [
      "warn",
      Object {
        "alphabetize": Object {
          "caseInsensitive": true,
          "order": "asc",
        },
        "groups": Array [
          Array [
            "builtin",
            "external",
          ],
          "internal",
          "parent",
          "sibling",
          "index",
        ],
        "newlines-between": "always",
        "warnOnUnassignedImports": false,
      },
    ],
    "indent": Array [
      "off",
    ],
    "indent-legacy": Array [
      "off",
    ],
    "jsdoc/check-alignment": Array [
      "error",
    ],
    "jsdoc/check-param-names": Array [
      "error",
    ],
    "jsdoc/check-syntax": Array [
      "error",
    ],
    "jsdoc/check-tag-names": Array [
      "error",
    ],
    "jsdoc/implements-on-classes": Array [
      "error",
    ],
    "jsdoc/newline-after-description": Array [
      "error",
    ],
    "jsdoc/require-param-name": Array [
      "error",
    ],
    "jsdoc/require-param-type": Array [
      "error",
    ],
    "jsdoc/require-returns-check": Array [
      "error",
    ],
    "jsdoc/require-returns-type": Array [
      "error",
    ],
    "jsx-a11y/alt-text": Array [
      "error",
    ],
    "jsx-a11y/anchor-has-content": Array [
      "error",
    ],
    "jsx-a11y/anchor-is-valid": Array [
      "error",
    ],
    "jsx-a11y/aria-activedescendant-has-tabindex": Array [
      "error",
    ],
    "jsx-a11y/aria-props": Array [
      "error",
    ],
    "jsx-a11y/aria-proptypes": Array [
      "error",
    ],
    "jsx-a11y/aria-role": Array [
      "error",
    ],
    "jsx-a11y/aria-unsupported-elements": Array [
      "error",
    ],
    "jsx-a11y/autocomplete-valid": Array [
      "error",
    ],
    "jsx-a11y/click-events-have-key-events": Array [
      "error",
    ],
    "jsx-a11y/control-has-associated-label": Array [
      "off",
      Object {
        "ignoreElements": Array [
          "audio",
          "canvas",
          "embed",
          "input",
          "textarea",
          "tr",
          "video",
        ],
        "ignoreRoles": Array [
          "grid",
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "row",
          "tablist",
          "toolbar",
          "tree",
          "treegrid",
        ],
        "includeRoles": Array [
          "alert",
          "dialog",
        ],
      },
    ],
    "jsx-a11y/heading-has-content": Array [
      "error",
    ],
    "jsx-a11y/html-has-lang": Array [
      "error",
    ],
    "jsx-a11y/iframe-has-title": Array [
      "error",
    ],
    "jsx-a11y/img-redundant-alt": Array [
      "error",
    ],
    "jsx-a11y/interactive-supports-focus": Array [
      "error",
      Object {
        "tabbable": Array [
          "button",
          "checkbox",
          "link",
          "searchbox",
          "spinbutton",
          "switch",
          "textbox",
        ],
      },
    ],
    "jsx-a11y/label-has-associated-control": Array [
      "error",
    ],
    "jsx-a11y/label-has-for": Array [
      "off",
    ],
    "jsx-a11y/media-has-caption": Array [
      "error",
    ],
    "jsx-a11y/mouse-events-have-key-events": Array [
      "error",
    ],
    "jsx-a11y/no-access-key": Array [
      "error",
    ],
    "jsx-a11y/no-autofocus": Array [
      "error",
    ],
    "jsx-a11y/no-distracting-elements": Array [
      "error",
    ],
    "jsx-a11y/no-interactive-element-to-noninteractive-role": Array [
      "error",
      Object {
        "canvas": Array [
          "img",
        ],
        "tr": Array [
          "none",
          "presentation",
        ],
      },
    ],
    "jsx-a11y/no-noninteractive-element-interactions": Array [
      "error",
      Object {
        "alert": Array [
          "onKeyUp",
          "onKeyDown",
          "onKeyPress",
        ],
        "body": Array [
          "onError",
          "onLoad",
        ],
        "dialog": Array [
          "onKeyUp",
          "onKeyDown",
          "onKeyPress",
        ],
        "handlers": Array [
          "onClick",
          "onError",
          "onLoad",
          "onMouseDown",
          "onMouseUp",
          "onKeyPress",
          "onKeyDown",
          "onKeyUp",
        ],
        "iframe": Array [
          "onError",
          "onLoad",
        ],
        "img": Array [
          "onError",
          "onLoad",
        ],
      },
    ],
    "jsx-a11y/no-noninteractive-element-to-interactive-role": Array [
      "error",
      Object {
        "fieldset": Array [
          "radiogroup",
          "presentation",
        ],
        "li": Array [
          "menuitem",
          "option",
          "row",
          "tab",
          "treeitem",
        ],
        "ol": Array [
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "tablist",
          "tree",
          "treegrid",
        ],
        "table": Array [
          "grid",
        ],
        "td": Array [
          "gridcell",
        ],
        "ul": Array [
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "tablist",
          "tree",
          "treegrid",
        ],
      },
    ],
    "jsx-a11y/no-noninteractive-tabindex": Array [
      "error",
      Object {
        "allowExpressionValues": true,
        "roles": Array [
          "tabpanel",
        ],
        "tags": Array [],
      },
    ],
    "jsx-a11y/no-onchange": Array [
      "off",
    ],
    "jsx-a11y/no-redundant-roles": Array [
      "error",
    ],
    "jsx-a11y/no-static-element-interactions": Array [
      "error",
      Object {
        "allowExpressionValues": true,
        "handlers": Array [
          "onClick",
          "onMouseDown",
          "onMouseUp",
          "onKeyPress",
          "onKeyDown",
          "onKeyUp",
        ],
      },
    ],
    "jsx-a11y/role-has-required-aria-props": Array [
      "error",
    ],
    "jsx-a11y/role-supports-aria-props": Array [
      "error",
    ],
    "jsx-a11y/scope": Array [
      "error",
    ],
    "jsx-a11y/tabindex-no-positive": Array [
      "error",
    ],
    "jsx-quotes": Array [
      "off",
    ],
    "key-spacing": Array [
      "off",
    ],
    "keyword-spacing": Array [
      "off",
    ],
    "linebreak-style": Array [
      "off",
    ],
    "lines-around-comment": Array [
      0,
    ],
    "lines-around-directive": Array [
      "error",
      Object {
        "after": "always",
        "before": "always",
      },
    ],
    "max-classes-per-file": Array [
      "error",
      1,
    ],
    "max-len": Array [
      0,
    ],
    "multiline-ternary": Array [
      "off",
    ],
    "new-cap": Array [
      "error",
      Object {
        "capIsNew": false,
        "capIsNewExceptions": Array [
          "Immutable.Map",
          "Immutable.Set",
          "Immutable.List",
        ],
        "newIsCap": true,
        "newIsCapExceptions": Array [],
        "properties": true,
      },
    ],
    "new-parens": Array [
      "off",
    ],
    "newline-per-chained-call": Array [
      "off",
    ],
    "no-alert": Array [
      "warn",
    ],
    "no-array-constructor": Array [
      "off",
    ],
    "no-arrow-condition": Array [
      "off",
    ],
    "no-async-promise-executor": Array [
      "error",
    ],
    "no-await-in-loop": Array [
      "error",
    ],
    "no-bitwise": Array [
      "error",
    ],
    "no-buffer-constructor": Array [
      "error",
    ],
    "no-caller": Array [
      "error",
    ],
    "no-case-declarations": Array [
      "error",
    ],
    "no-class-assign": Array [
      "error",
    ],
    "no-comma-dangle": Array [
      "off",
    ],
    "no-compare-neg-zero": Array [
      "error",
    ],
    "no-cond-assign": Array [
      "error",
      "always",
    ],
    "no-confusing-arrow": Array [
      0,
    ],
    "no-console": Array [
      "warn",
    ],
    "no-const-assign": Array [
      "off",
    ],
    "no-constant-condition": Array [
      "warn",
    ],
    "no-continue": Array [
      "error",
    ],
    "no-control-regex": Array [
      "error",
    ],
    "no-debugger": Array [
      "error",
    ],
    "no-delete-var": Array [
      "error",
    ],
    "no-dupe-args": Array [
      "off",
    ],
    "no-dupe-class-members": Array [
      "off",
    ],
    "no-dupe-else-if": Array [
      "error",
    ],
    "no-dupe-keys": Array [
      "off",
    ],
    "no-duplicate-case": Array [
      "error",
    ],
    "no-duplicate-imports": Array [
      "off",
    ],
    "no-else-return": Array [
      "error",
      Object {
        "allowElseIf": true,
      },
    ],
    "no-empty": Array [
      "error",
    ],
    "no-empty-character-class": Array [
      "error",
    ],
    "no-empty-function": Array [
      "off",
      Object {
        "allow": Array [
          "arrowFunctions",
          "functions",
          "methods",
        ],
      },
    ],
    "no-empty-pattern": Array [
      "error",
    ],
    "no-eval": Array [
      "error",
    ],
    "no-ex-assign": Array [
      "error",
    ],
    "no-extend-native": Array [
      "error",
    ],
    "no-extra-bind": Array [
      "error",
    ],
    "no-extra-boolean-cast": Array [
      "error",
    ],
    "no-extra-label": Array [
      "error",
    ],
    "no-extra-parens": Array [
      "off",
    ],
    "no-extra-semi": Array [
      "off",
    ],
    "no-fallthrough": Array [
      "error",
    ],
    "no-floating-decimal": Array [
      "off",
    ],
    "no-func-assign": Array [
      "off",
    ],
    "no-global-assign": Array [
      "error",
    ],
    "no-implied-eval": Array [
      "off",
    ],
    "no-import-assign": Array [
      "off",
    ],
    "no-inner-declarations": Array [
      "error",
    ],
    "no-invalid-regexp": Array [
      "error",
    ],
    "no-irregular-whitespace": Array [
      "error",
    ],
    "no-iterator": Array [
      "error",
    ],
    "no-label-var": Array [
      "error",
    ],
    "no-labels": Array [
      "error",
      Object {
        "allowLoop": false,
        "allowSwitch": false,
      },
    ],
    "no-lone-blocks": Array [
      "error",
    ],
    "no-lonely-if": Array [
      "error",
    ],
    "no-loop-func": Array [
      "error",
    ],
    "no-loss-of-precision": Array [
      "off",
    ],
    "no-misleading-character-class": Array [
      "error",
    ],
    "no-mixed-operators": Array [
      0,
    ],
    "no-mixed-spaces-and-tabs": Array [
      "off",
    ],
    "no-multi-assign": Array [
      "error",
    ],
    "no-multi-spaces": Array [
      "off",
    ],
    "no-multi-str": Array [
      "error",
    ],
    "no-multiple-empty-lines": Array [
      "off",
    ],
    "no-nested-ternary": Array [
      "error",
    ],
    "no-new": Array [
      "error",
    ],
    "no-new-func": Array [
      "error",
    ],
    "no-new-object": Array [
      "error",
    ],
    "no-new-require": Array [
      "error",
    ],
    "no-new-symbol": Array [
      "off",
    ],
    "no-new-wrappers": Array [
      "error",
    ],
    "no-nonoctal-decimal-escape": Array [
      "error",
    ],
    "no-obj-calls": Array [
      "off",
    ],
    "no-octal": Array [
      "error",
    ],
    "no-octal-escape": Array [
      "error",
    ],
    "no-param-reassign": Array [
      "error",
      Object {
        "props": false,
      },
    ],
    "no-path-concat": Array [
      "error",
    ],
    "no-plusplus": Array [
      "error",
    ],
    "no-proto": Array [
      "error",
    ],
    "no-prototype-builtins": Array [
      "off",
    ],
    "no-redeclare": Array [
      "off",
    ],
    "no-regex-spaces": Array [
      "error",
    ],
    "no-reserved-keys": Array [
      "off",
    ],
    "no-restricted-globals": Array [
      "error",
      "isFinite",
      "isNaN",
      "addEventListener",
      "blur",
      "close",
      "closed",
      "confirm",
      "defaultStatus",
      "event",
      "external",
      "defaultstatus",
      "find",
      "focus",
      "frameElement",
      "frames",
      "history",
      "innerHeight",
      "innerWidth",
      "length",
      "location",
      "locationbar",
      "menubar",
      "moveBy",
      "moveTo",
      "name",
      "onblur",
      "onerror",
      "onfocus",
      "onload",
      "onresize",
      "onunload",
      "open",
      "opener",
      "opera",
      "outerHeight",
      "outerWidth",
      "pageXOffset",
      "pageYOffset",
      "parent",
      "print",
      "removeEventListener",
      "resizeBy",
      "resizeTo",
      "screen",
      "screenLeft",
      "screenTop",
      "screenX",
      "screenY",
      "scroll",
      "scrollbars",
      "scrollBy",
      "scrollTo",
      "scrollX",
      "scrollY",
      "self",
      "status",
      "statusbar",
      "stop",
      "toolbar",
      "top",
    ],
    "no-restricted-imports": Array [
      "error",
    ],
    "no-restricted-properties": Array [
      "error",
      Object {
        "message": "arguments.callee is deprecated",
        "object": "arguments",
        "property": "callee",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "global",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "self",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "window",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "global",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "self",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "window",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineGetter__",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineSetter__",
      },
      Object {
        "message": "Use the exponentiation operator (**) instead.",
        "object": "Math",
        "property": "pow",
      },
    ],
    "no-restricted-syntax": Array [
      "error",
      Object {
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.",
        "selector": "ForInStatement",
      },
      Object {
        "message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.",
        "selector": "ForOfStatement",
      },
      Object {
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.",
        "selector": "LabeledStatement",
      },
      Object {
        "message": "\`with\` is disallowed in strict mode because it makes code impossible to predict and optimize.",
        "selector": "WithStatement",
      },
      Object {
        "message": "Property setters are not allowed",
        "selector": "MethodDefinition[kind=\\"set\\"]",
      },
      Object {
        "message": "Property getters are not allowed",
        "selector": "MethodDefinition[kind=\\"get\\"]",
      },
    ],
    "no-return-assign": Array [
      "error",
      "except-parens",
    ],
    "no-return-await": Array [
      "error",
    ],
    "no-script-url": Array [
      "error",
    ],
    "no-self-assign": Array [
      "error",
    ],
    "no-self-compare": Array [
      "error",
    ],
    "no-sequences": Array [
      "error",
    ],
    "no-setter-return": Array [
      "off",
    ],
    "no-shadow": Array [
      "off",
      Object {
        "builtinGlobals": false,
        "hoist": "all",
      },
    ],
    "no-shadow-restricted-names": Array [
      "error",
    ],
    "no-space-before-semi": Array [
      "off",
    ],
    "no-spaced-func": Array [
      "off",
    ],
    "no-sparse-arrays": Array [
      "error",
    ],
    "no-tabs": Array [
      0,
    ],
    "no-template-curly-in-string": Array [
      "error",
    ],
    "no-this-before-super": Array [
      "off",
    ],
    "no-throw-literal": Array [
      "error",
    ],
    "no-trailing-spaces": Array [
      "off",
    ],
    "no-undef": Array [
      "off",
    ],
    "no-undef-init": Array [
      "error",
    ],
    "no-underscore-dangle": Array [
      "error",
      Object {
        "allowAfterSuper": true,
        "allowAfterThis": true,
        "allowAfterThisConstructor": false,
        "allowFunctionParams": true,
        "enforceInMethodNames": false,
      },
    ],
    "no-unexpected-multiline": Array [
      0,
    ],
    "no-unneeded-ternary": Array [
      "error",
      Object {
        "defaultAssignment": false,
      },
    ],
    "no-unreachable": Array [
      "off",
    ],
    "no-unsafe-finally": Array [
      "error",
    ],
    "no-unsafe-negation": Array [
      "off",
    ],
    "no-unsafe-optional-chaining": Array [
      "error",
    ],
    "no-unused-expressions": Array [
      "off",
    ],
    "no-unused-labels": Array [
      "error",
    ],
    "no-unused-vars": Array [
      "off",
      Object {
        "args": "after-used",
        "ignoreRestSiblings": true,
        "vars": "all",
      },
    ],
    "no-use-before-define": Array [
      "off",
      "nofunc",
    ],
    "no-useless-backreference": Array [
      "error",
    ],
    "no-useless-catch": Array [
      "error",
    ],
    "no-useless-computed-key": Array [
      "error",
    ],
    "no-useless-concat": Array [
      "error",
    ],
    "no-useless-constructor": Array [
      "off",
    ],
    "no-useless-escape": Array [
      "error",
    ],
    "no-useless-rename": Array [
      "error",
      Object {
        "ignoreDestructuring": false,
        "ignoreExport": false,
        "ignoreImport": false,
      },
    ],
    "no-useless-return": Array [
      "error",
    ],
    "no-var": Array [
      "error",
    ],
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "no-whitespace-before-property": Array [
      "off",
    ],
    "no-with": Array [
      "error",
    ],
    "no-wrap-func": Array [
      "off",
    ],
    "nonblock-statement-body-position": Array [
      "off",
    ],
    "object-curly-newline": Array [
      "off",
    ],
    "object-curly-spacing": Array [
      "off",
    ],
    "object-property-newline": Array [
      "off",
    ],
    "object-shorthand": Array [
      "error",
      "always",
      Object {
        "avoidQuotes": true,
        "ignoreConstructors": false,
      },
    ],
    "one-var": Array [
      "error",
      "never",
    ],
    "one-var-declaration-per-line": Array [
      "off",
    ],
    "operator-assignment": Array [
      "error",
      "always",
    ],
    "operator-linebreak": Array [
      "off",
    ],
    "padded-blocks": Array [
      "off",
    ],
    "padding-line-between-statements": Array [
      "off",
      Object {
        "blankLine": "always",
        "next": "return",
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": Array [
          "block",
          "block-like",
          "class",
          "const",
          "let",
          "var",
        ],
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": "*",
        "prev": Array [
          "block",
          "block-like",
          "class",
          "const",
          "let",
          "var",
        ],
      },
      Object {
        "blankLine": "any",
        "next": Array [
          "const",
          "let",
          "var",
        ],
        "prev": Array [
          "const",
          "let",
          "var",
        ],
      },
      Object {
        "blankLine": "any",
        "next": Array [
          "case",
        ],
        "prev": Array [
          "case",
        ],
      },
    ],
    "prefer-arrow-callback": Array [
      "off",
      Object {
        "allowNamedFunctions": false,
        "allowUnboundThis": true,
      },
    ],
    "prefer-const": Array [
      "error",
      Object {
        "destructuring": "any",
        "ignoreReadBeforeAssign": true,
      },
    ],
    "prefer-numeric-literals": Array [
      "error",
    ],
    "prefer-rest-params": Array [
      "error",
    ],
    "prefer-spread": Array [
      "error",
    ],
    "prefer-template": Array [
      "error",
    ],
    "prettier/prettier": Array [
      "warn",
      Object {
        "printWidth": 100,
        "singleQuote": true,
        "trailingComma": "all",
      },
      Object {
        "usePrettierrc": false,
      },
    ],
    "quote-props": Array [
      "off",
    ],
    "quotes": Array [
      0,
    ],
    "radix": Array [
      "error",
    ],
    "react-hooks/exhaustive-deps": Array [
      "error",
    ],
    "react-hooks/rules-of-hooks": Array [
      "error",
    ],
    "react/destructuring-assignment": Array [
      "error",
    ],
    "react/display-name": Array [
      "off",
    ],
    "react/jsx-child-element-spacing": Array [
      "off",
    ],
    "react/jsx-closing-bracket-location": Array [
      "off",
    ],
    "react/jsx-closing-tag-location": Array [
      "off",
    ],
    "react/jsx-curly-brace-presence": Array [
      "error",
      Object {
        "children": "never",
        "propElementValues": "always",
        "props": "never",
      },
    ],
    "react/jsx-curly-newline": Array [
      "off",
    ],
    "react/jsx-curly-spacing": Array [
      "off",
    ],
    "react/jsx-equals-spacing": Array [
      "off",
    ],
    "react/jsx-filename-extension": Array [
      1,
      Object {
        "extensions": Array [
          ".tsx",
        ],
      },
    ],
    "react/jsx-first-prop-new-line": Array [
      "off",
    ],
    "react/jsx-fragments": Array [
      "error",
      "syntax",
    ],
    "react/jsx-indent": Array [
      "off",
    ],
    "react/jsx-indent-props": Array [
      "off",
    ],
    "react/jsx-key": Array [
      2,
    ],
    "react/jsx-max-props-per-line": Array [
      "off",
    ],
    "react/jsx-newline": Array [
      "off",
    ],
    "react/jsx-no-bind": Array [
      "error",
      Object {
        "allowArrowFunctions": true,
        "allowBind": false,
        "allowFunctions": false,
        "ignoreDOMComponents": false,
        "ignoreRefs": false,
      },
    ],
    "react/jsx-no-comment-textnodes": Array [
      2,
    ],
    "react/jsx-no-duplicate-props": Array [
      2,
    ],
    "react/jsx-no-target-blank": Array [
      2,
    ],
    "react/jsx-no-undef": Array [
      2,
    ],
    "react/jsx-no-useless-fragment": Array [
      "error",
    ],
    "react/jsx-one-expression-per-line": Array [
      "off",
    ],
    "react/jsx-pascal-case": Array [
      "error",
    ],
    "react/jsx-props-no-multi-spaces": Array [
      "off",
    ],
    "react/jsx-sort-props": Array [
      "warn",
    ],
    "react/jsx-space-before-closing": Array [
      "off",
    ],
    "react/jsx-tag-spacing": Array [
      "off",
    ],
    "react/jsx-uses-react": Array [
      2,
    ],
    "react/jsx-uses-vars": Array [
      2,
    ],
    "react/jsx-wrap-multilines": Array [
      "off",
    ],
    "react/no-children-prop": Array [
      2,
    ],
    "react/no-danger-with-children": Array [
      2,
    ],
    "react/no-deprecated": Array [
      2,
    ],
    "react/no-direct-mutation-state": Array [
      2,
    ],
    "react/no-find-dom-node": Array [
      2,
    ],
    "react/no-is-mounted": Array [
      2,
    ],
    "react/no-redundant-should-component-update": Array [
      "error",
    ],
    "react/no-render-return-value": Array [
      2,
    ],
    "react/no-string-refs": Array [
      2,
    ],
    "react/no-this-in-sfc": Array [
      "error",
    ],
    "react/no-unescaped-entities": Array [
      "error",
      Object {
        "forbid": Array [
          Object {
            "alternatives": Array [
              "&gt;",
            ],
            "char": ">",
          },
          Object {
            "alternatives": Array [
              "&#125;",
            ],
            "char": "}",
          },
        ],
      },
    ],
    "react/no-unknown-property": Array [
      2,
    ],
    "react/no-unsafe": Array [
      "error",
    ],
    "react/no-unused-state": Array [
      "error",
    ],
    "react/prefer-es6-class": Array [
      "error",
    ],
    "react/prefer-read-only-props": Array [
      "error",
    ],
    "react/prop-types": Array [
      "off",
    ],
    "react/react-in-jsx-scope": Array [
      2,
    ],
    "react/require-render-return": Array [
      2,
    ],
    "react/self-closing-comp": Array [
      "error",
    ],
    "react/style-prop-object": Array [
      "error",
    ],
    "require-await": Array [
      "off",
    ],
    "require-yield": Array [
      "error",
    ],
    "rest-spread-spacing": Array [
      "off",
    ],
    "semi": Array [
      "off",
    ],
    "semi-spacing": Array [
      "off",
    ],
    "semi-style": Array [
      "off",
    ],
    "sort-imports": Array [
      "error",
      Object {
        "allowSeparatedGroups": false,
        "ignoreCase": true,
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false,
      },
    ],
    "sort-keys": Array [
      "off",
    ],
    "space-after-function-name": Array [
      "off",
    ],
    "space-after-keywords": Array [
      "off",
    ],
    "space-before-blocks": Array [
      "off",
    ],
    "space-before-function-paren": Array [
      "off",
    ],
    "space-before-function-parentheses": Array [
      "off",
    ],
    "space-before-keywords": Array [
      "off",
    ],
    "space-in-brackets": Array [
      "off",
    ],
    "space-in-parens": Array [
      "off",
    ],
    "space-infix-ops": Array [
      "off",
    ],
    "space-return-throw-case": Array [
      "off",
    ],
    "space-unary-ops": Array [
      "off",
    ],
    "space-unary-word-ops": Array [
      "off",
    ],
    "spaced-comment": Array [
      "warn",
      "always",
      Object {
        "block": Object {
          "balanced": true,
          "exceptions": Array [
            "-",
            "+",
          ],
          "markers": Array [
            "=",
            "!",
          ],
        },
        "line": Object {
          "exceptions": Array [
            "-",
            "+",
          ],
          "markers": Array [
            "=",
            "!",
          ],
        },
      },
    ],
    "standard/array-bracket-even-spacing": Array [
      "off",
    ],
    "standard/computed-property-even-spacing": Array [
      "off",
    ],
    "standard/object-curly-even-spacing": Array [
      "off",
    ],
    "strict": Array [
      "error",
    ],
    "switch-case/newline-between-switch-case": Array [
      "warn",
      "always",
      Object {
        "fallthrough": "never",
      },
    ],
    "switch-colon-spacing": Array [
      "off",
    ],
    "symbol-description": Array [
      "error",
    ],
    "template-curly-spacing": Array [
      "off",
    ],
    "template-tag-spacing": Array [
      "off",
    ],
    "unicode-bom": Array [
      "off",
    ],
    "unicorn/empty-brace-spaces": Array [
      "off",
    ],
    "unicorn/no-nested-ternary": Array [
      "off",
    ],
    "unicorn/number-literal-case": Array [
      "off",
    ],
    "use-isnan": Array [
      "error",
    ],
    "valid-jsdoc": Array [
      "off",
      Object {
        "requireParamDescription": false,
        "requireParamType": true,
        "requireReturn": true,
        "requireReturnDescription": false,
        "requireReturnType": true,
      },
    ],
    "valid-typeof": Array [
      "off",
      Object {
        "requireStringLiterals": true,
      },
    ],
    "vars-on-top": Array [
      "error",
    ],
    "vue/array-bracket-newline": Array [
      "off",
    ],
    "vue/array-bracket-spacing": Array [
      "off",
    ],
    "vue/arrow-spacing": Array [
      "off",
    ],
    "vue/block-spacing": Array [
      "off",
    ],
    "vue/block-tag-newline": Array [
      "off",
    ],
    "vue/brace-style": Array [
      "off",
    ],
    "vue/comma-dangle": Array [
      "off",
    ],
    "vue/comma-spacing": Array [
      "off",
    ],
    "vue/comma-style": Array [
      "off",
    ],
    "vue/dot-location": Array [
      "off",
    ],
    "vue/func-call-spacing": Array [
      "off",
    ],
    "vue/html-closing-bracket-newline": Array [
      "off",
    ],
    "vue/html-closing-bracket-spacing": Array [
      "off",
    ],
    "vue/html-end-tags": Array [
      "off",
    ],
    "vue/html-indent": Array [
      "off",
    ],
    "vue/html-quotes": Array [
      "off",
    ],
    "vue/html-self-closing": Array [
      0,
    ],
    "vue/key-spacing": Array [
      "off",
    ],
    "vue/keyword-spacing": Array [
      "off",
    ],
    "vue/max-attributes-per-line": Array [
      "off",
    ],
    "vue/max-len": Array [
      0,
    ],
    "vue/multiline-html-element-content-newline": Array [
      "off",
    ],
    "vue/mustache-interpolation-spacing": Array [
      "off",
    ],
    "vue/no-extra-parens": Array [
      "off",
    ],
    "vue/no-multi-spaces": Array [
      "off",
    ],
    "vue/no-spaces-around-equal-signs-in-attribute": Array [
      "off",
    ],
    "vue/object-curly-newline": Array [
      "off",
    ],
    "vue/object-curly-spacing": Array [
      "off",
    ],
    "vue/object-property-newline": Array [
      "off",
    ],
    "vue/operator-linebreak": Array [
      "off",
    ],
    "vue/script-indent": Array [
      "off",
    ],
    "vue/singleline-html-element-content-newline": Array [
      "off",
    ],
    "vue/space-in-parens": Array [
      "off",
    ],
    "vue/space-infix-ops": Array [
      "off",
    ],
    "vue/space-unary-ops": Array [
      "off",
    ],
    "vue/template-curly-spacing": Array [
      "off",
    ],
    "wrap-iife": Array [
      "off",
    ],
    "wrap-regex": Array [
      "off",
    ],
    "yield-star-spacing": Array [
      "off",
    ],
    "yoda": Array [
      "error",
    ],
  },
  "settings": Object {
    "import/extensions": Array [
      ".ts",
      ".tsx",
      ".js",
      ".jsx",
    ],
    "import/external-module-folders": Array [
      "node_modules",
      "node_modules/@types",
    ],
    "import/parsers": Object {
      "@typescript-eslint/parser": Array [
        ".ts",
        ".tsx",
      ],
    },
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".ts",
          ".tsx",
          ".js",
          ".jsx",
        ],
      },
      "typescript": Object {
        "alwaysTryTypes": true,
      },
    },
    "react": Object {
      "version": "detect",
    },
  },
}
`;

exports[`keeps rules stable TSX 1`] = `
Object {
  "env": Object {
    "browser": true,
    "es6": true,
  },
  "globals": Object {},
  "ignorePatterns": Array [],
  "noInlineConfig": undefined,
  "parser": "<rootDir>/node_modules/@typescript-eslint/parser/dist/index.js",
  "parserOptions": Object {
    "ecmaFeatures": Object {
      "jsx": true,
    },
    "ecmaVersion": 2020,
    "project": "<rootDir>/tsconfig.json",
    "sourceType": "module",
  },
  "plugins": Array [
    "switch-case",
    "gettext",
    "import",
    "jsdoc",
    "prettier",
    "react",
    "jsx-a11y",
    "react-hooks",
    "@bigcommerce",
    "@typescript-eslint",
  ],
  "reportUnusedDisableDirectives": true,
  "rules": Object {
    "@babel/object-curly-spacing": Array [
      "off",
    ],
    "@babel/semi": Array [
      "off",
    ],
    "@bigcommerce/jsx-short-circuit-conditionals": Array [
      "error",
    ],
    "@typescript-eslint/adjacent-overload-signatures": Array [
      "error",
    ],
    "@typescript-eslint/array-type": Array [
      "error",
      Object {
        "default": "array-simple",
      },
    ],
    "@typescript-eslint/await-thenable": Array [
      "error",
    ],
    "@typescript-eslint/ban-ts-comment": Array [
      "error",
    ],
    "@typescript-eslint/ban-types": Array [
      "error",
    ],
    "@typescript-eslint/brace-style": Array [
      "off",
    ],
    "@typescript-eslint/comma-dangle": Array [
      "off",
    ],
    "@typescript-eslint/comma-spacing": Array [
      "off",
    ],
    "@typescript-eslint/consistent-type-assertions": Array [
      "error",
      Object {
        "assertionStyle": "never",
      },
    ],
    "@typescript-eslint/consistent-type-definitions": Array [
      "error",
    ],
    "@typescript-eslint/default-param-last": Array [
      "error",
    ],
    "@typescript-eslint/dot-notation": Array [
      "error",
      Object {
        "allowIndexSignaturePropertyAccess": false,
        "allowKeywords": true,
        "allowPattern": "",
        "allowPrivateClassPropertyAccess": false,
        "allowProtectedClassPropertyAccess": false,
      },
    ],
    "@typescript-eslint/explicit-function-return-type": Array [
      "off",
    ],
    "@typescript-eslint/explicit-member-accessibility": Array [
      "error",
      Object {
        "accessibility": "no-public",
      },
    ],
    "@typescript-eslint/explicit-module-boundary-types": Array [
      "off",
    ],
    "@typescript-eslint/func-call-spacing": Array [
      "off",
    ],
    "@typescript-eslint/indent": Array [
      "off",
    ],
    "@typescript-eslint/keyword-spacing": Array [
      "off",
    ],
    "@typescript-eslint/member-delimiter-style": Array [
      "off",
    ],
    "@typescript-eslint/member-ordering": Array [
      "error",
    ],
    "@typescript-eslint/naming-convention": Array [
      "error",
      Object {
        "format": Array [
          "camelCase",
          "PascalCase",
        ],
        "selector": "default",
      },
      Object {
        "format": Array [
          "camelCase",
          "PascalCase",
          "UPPER_CASE",
        ],
        "selector": "variable",
      },
      Object {
        "format": Array [
          "camelCase",
          "UPPER_CASE",
        ],
        "selector": "variable",
        "types": Array [
          "boolean",
          "string",
          "number",
          "array",
        ],
      },
      Object {
        "format": Array [
          "camelCase",
        ],
        "selector": "property",
      },
      Object {
        "format": Array [
          "camelCase",
        ],
        "selector": "parameterProperty",
      },
      Object {
        "format": Array [
          "PascalCase",
        ],
        "selector": "typeLike",
      },
      Object {
        "format": Array [
          "PascalCase",
          "UPPER_CASE",
        ],
        "selector": "enumMember",
      },
      Object {
        "format": Array [
          "camelCase",
        ],
        "selector": "parameter",
      },
      Object {
        "format": Array [
          "camelCase",
        ],
        "leadingUnderscore": "allow",
        "modifiers": Array [
          "unused",
        ],
        "selector": "parameter",
      },
      Object {
        "format": null,
        "modifiers": Array [
          "requiresQuotes",
        ],
        "selector": Array [
          "objectLiteralProperty",
          "typeProperty",
        ],
      },
    ],
    "@typescript-eslint/no-array-constructor": Array [
      "error",
    ],
    "@typescript-eslint/no-duplicate-imports": Array [
      "error",
    ],
    "@typescript-eslint/no-empty-function": Array [
      "error",
    ],
    "@typescript-eslint/no-empty-interface": Array [
      "error",
    ],
    "@typescript-eslint/no-explicit-any": Array [
      "error",
    ],
    "@typescript-eslint/no-extra-non-null-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-extra-parens": Array [
      "off",
    ],
    "@typescript-eslint/no-extra-semi": Array [
      "error",
    ],
    "@typescript-eslint/no-floating-promises": Array [
      "error",
    ],
    "@typescript-eslint/no-for-in-array": Array [
      "error",
    ],
    "@typescript-eslint/no-implied-eval": Array [
      "error",
    ],
    "@typescript-eslint/no-inferrable-types": Array [
      "error",
    ],
    "@typescript-eslint/no-loss-of-precision": Array [
      "error",
    ],
    "@typescript-eslint/no-misused-new": Array [
      "error",
    ],
    "@typescript-eslint/no-misused-promises": Array [
      "error",
    ],
    "@typescript-eslint/no-namespace": Array [
      "error",
      Object {
        "allowDeclarations": true,
      },
    ],
    "@typescript-eslint/no-non-null-asserted-optional-chain": Array [
      "error",
    ],
    "@typescript-eslint/no-non-null-assertion": Array [
      "warn",
    ],
    "@typescript-eslint/no-shadow": Array [
      "error",
      Object {
        "hoist": "all",
      },
    ],
    "@typescript-eslint/no-this-alias": Array [
      "error",
    ],
    "@typescript-eslint/no-throw-literal": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-condition": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-type-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-type-constraint": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-argument": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-assignment": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-call": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-member-access": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-return": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-expressions": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-vars": Array [
      "error",
      Object {
        "args": "after-used",
        "ignoreRestSiblings": true,
        "vars": "all",
      },
    ],
    "@typescript-eslint/no-use-before-define": Array [
      "error",
      "nofunc",
    ],
    "@typescript-eslint/no-useless-constructor": Array [
      "error",
    ],
    "@typescript-eslint/no-var-requires": Array [
      "error",
    ],
    "@typescript-eslint/object-curly-spacing": Array [
      "off",
    ],
    "@typescript-eslint/padding-line-between-statements": Array [
      "warn",
      Object {
        "blankLine": "always",
        "next": "return",
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": Array [
          "block",
          "block-like",
          "class",
          "const",
          "let",
          "var",
          "interface",
        ],
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": "*",
        "prev": Array [
          "block",
          "block-like",
          "class",
          "const",
          "let",
          "var",
          "interface",
        ],
      },
      Object {
        "blankLine": "any",
        "next": Array [
          "const",
          "let",
          "var",
        ],
        "prev": Array [
          "const",
          "let",
          "var",
        ],
      },
      Object {
        "blankLine": "any",
        "next": Array [
          "case",
        ],
        "prev": Array [
          "case",
        ],
      },
    ],
    "@typescript-eslint/prefer-as-const": Array [
      "error",
    ],
    "@typescript-eslint/prefer-for-of": Array [
      "error",
    ],
    "@typescript-eslint/prefer-function-type": Array [
      "error",
    ],
    "@typescript-eslint/prefer-namespace-keyword": Array [
      "error",
    ],
    "@typescript-eslint/quotes": Array [
      0,
    ],
    "@typescript-eslint/require-await": Array [
      "error",
    ],
    "@typescript-eslint/restrict-plus-operands": Array [
      "error",
    ],
    "@typescript-eslint/restrict-template-expressions": Array [
      "error",
    ],
    "@typescript-eslint/return-await": Array [
      "error",
    ],
    "@typescript-eslint/semi": Array [
      "off",
    ],
    "@typescript-eslint/space-before-function-paren": Array [
      "off",
    ],
    "@typescript-eslint/space-infix-ops": Array [
      "off",
    ],
    "@typescript-eslint/triple-slash-reference": Array [
      "error",
    ],
    "@typescript-eslint/type-annotation-spacing": Array [
      "off",
    ],
    "@typescript-eslint/unbound-method": Array [
      "off",
    ],
    "@typescript-eslint/unified-signatures": Array [
      "error",
    ],
    "array-bracket-newline": Array [
      "off",
    ],
    "array-bracket-spacing": Array [
      "off",
    ],
    "array-callback-return": Array [
      "error",
    ],
    "array-element-newline": Array [
      "off",
    ],
    "arrow-body-style": Array [
      "off",
      "as-needed",
      Object {
        "requireReturnForObjectLiteral": false,
      },
    ],
    "arrow-parens": Array [
      "off",
    ],
    "arrow-spacing": Array [
      "off",
    ],
    "babel/object-curly-spacing": Array [
      "off",
    ],
    "babel/quotes": Array [
      0,
    ],
    "babel/semi": Array [
      "off",
    ],
    "block-scoped-var": Array [
      "error",
    ],
    "block-spacing": Array [
      "off",
    ],
    "brace-style": Array [
      "off",
    ],
    "camelcase": Array [
      "off",
      Object {
        "ignoreDestructuring": false,
        "ignoreGlobals": false,
        "ignoreImports": false,
        "properties": "never",
      },
    ],
    "comma-dangle": Array [
      "off",
    ],
    "comma-spacing": Array [
      "off",
    ],
    "comma-style": Array [
      "off",
    ],
    "complexity": Array [
      "error",
    ],
    "computed-property-spacing": Array [
      "off",
    ],
    "consistent-return": Array [
      "off",
    ],
    "constructor-super": Array [
      "off",
    ],
    "curly": Array [
      "error",
      "all",
    ],
    "default-case": Array [
      "off",
    ],
    "default-param-last": Array [
      "off",
    ],
    "dot-location": Array [
      "off",
    ],
    "dot-notation": Array [
      "error",
      Object {
        "allowKeywords": true,
        "allowPattern": "",
      },
    ],
    "eol-last": Array [
      "off",
    ],
    "eqeqeq": Array [
      "error",
      "smart",
    ],
    "flowtype/boolean-style": Array [
      "off",
    ],
    "flowtype/delimiter-dangle": Array [
      "off",
    ],
    "flowtype/generic-spacing": Array [
      "off",
    ],
    "flowtype/object-type-curly-spacing": Array [
      "off",
    ],
    "flowtype/object-type-delimiter": Array [
      "off",
    ],
    "flowtype/quotes": Array [
      "off",
    ],
    "flowtype/semi": Array [
      "off",
    ],
    "flowtype/space-after-type-colon": Array [
      "off",
    ],
    "flowtype/space-before-generic-bracket": Array [
      "off",
    ],
    "flowtype/space-before-type-colon": Array [
      "off",
    ],
    "flowtype/union-intersection-spacing": Array [
      "off",
    ],
    "for-direction": Array [
      "error",
    ],
    "func-call-spacing": Array [
      "off",
    ],
    "func-names": Array [
      "warn",
    ],
    "function-call-argument-newline": Array [
      "off",
    ],
    "function-paren-newline": Array [
      "off",
    ],
    "generator-star": Array [
      "off",
    ],
    "generator-star-spacing": Array [
      "off",
    ],
    "getter-return": Array [
      "off",
      Object {
        "allowImplicit": true,
      },
    ],
    "gettext/no-variable-string": Array [
      "error",
    ],
    "global-require": Array [
      "error",
    ],
    "guard-for-in": Array [
      "error",
    ],
    "implicit-arrow-linebreak": Array [
      "off",
    ],
    "import/default": Array [
      "off",
    ],
    "import/dynamic-import-chunkname": Array [
      "error",
    ],
    "import/export": Array [
      2,
    ],
    "import/extensions": Array [
      "error",
      Object {
        "js": "never",
        "json": "always",
        "jsx": "never",
        "ts": "never",
        "tsx": "never",
      },
    ],
    "import/named": Array [
      "off",
    ],
    "import/namespace": Array [
      2,
    ],
    "import/newline-after-import": Array [
      "warn",
    ],
    "import/no-absolute-path": Array [
      "error",
    ],
    "import/no-amd": Array [
      "error",
    ],
    "import/no-duplicates": Array [
      1,
    ],
    "import/no-dynamic-require": Array [
      "error",
    ],
    "import/no-extraneous-dependencies": Array [
      "error",
    ],
    "import/no-mutable-exports": Array [
      "error",
    ],
    "import/no-named-as-default": Array [
      1,
    ],
    "import/no-named-as-default-member": Array [
      1,
    ],
    "import/no-named-default": Array [
      "error",
    ],
    "import/no-unresolved": Array [
      "error",
      Object {
        "caseSensitive": true,
        "caseSensitiveStrict": false,
        "commonjs": true,
      },
    ],
    "import/no-webpack-loader-syntax": Array [
      "error",
    ],
    "import/order": Array [
      "warn",
      Object {
        "alphabetize": Object {
          "caseInsensitive": true,
          "order": "asc",
        },
        "groups": Array [
          Array [
            "builtin",
            "external",
          ],
          "internal",
          "parent",
          "sibling",
          "index",
        ],
        "newlines-between": "always",
        "warnOnUnassignedImports": false,
      },
    ],
    "indent": Array [
      "off",
    ],
    "indent-legacy": Array [
      "off",
    ],
    "jsdoc/check-alignment": Array [
      "error",
    ],
    "jsdoc/check-param-names": Array [
      "error",
    ],
    "jsdoc/check-syntax": Array [
      "error",
    ],
    "jsdoc/check-tag-names": Array [
      "error",
    ],
    "jsdoc/implements-on-classes": Array [
      "error",
    ],
    "jsdoc/newline-after-description": Array [
      "error",
    ],
    "jsdoc/require-param-name": Array [
      "error",
    ],
    "jsdoc/require-param-type": Array [
      "error",
    ],
    "jsdoc/require-returns-check": Array [
      "error",
    ],
    "jsdoc/require-returns-type": Array [
      "error",
    ],
    "jsx-a11y/alt-text": Array [
      "error",
    ],
    "jsx-a11y/anchor-has-content": Array [
      "error",
    ],
    "jsx-a11y/anchor-is-valid": Array [
      "error",
    ],
    "jsx-a11y/aria-activedescendant-has-tabindex": Array [
      "error",
    ],
    "jsx-a11y/aria-props": Array [
      "error",
    ],
    "jsx-a11y/aria-proptypes": Array [
      "error",
    ],
    "jsx-a11y/aria-role": Array [
      "error",
    ],
    "jsx-a11y/aria-unsupported-elements": Array [
      "error",
    ],
    "jsx-a11y/autocomplete-valid": Array [
      "error",
    ],
    "jsx-a11y/click-events-have-key-events": Array [
      "error",
    ],
    "jsx-a11y/control-has-associated-label": Array [
      "off",
      Object {
        "ignoreElements": Array [
          "audio",
          "canvas",
          "embed",
          "input",
          "textarea",
          "tr",
          "video",
        ],
        "ignoreRoles": Array [
          "grid",
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "row",
          "tablist",
          "toolbar",
          "tree",
          "treegrid",
        ],
        "includeRoles": Array [
          "alert",
          "dialog",
        ],
      },
    ],
    "jsx-a11y/heading-has-content": Array [
      "error",
    ],
    "jsx-a11y/html-has-lang": Array [
      "error",
    ],
    "jsx-a11y/iframe-has-title": Array [
      "error",
    ],
    "jsx-a11y/img-redundant-alt": Array [
      "error",
    ],
    "jsx-a11y/interactive-supports-focus": Array [
      "error",
      Object {
        "tabbable": Array [
          "button",
          "checkbox",
          "link",
          "searchbox",
          "spinbutton",
          "switch",
          "textbox",
        ],
      },
    ],
    "jsx-a11y/label-has-associated-control": Array [
      "error",
    ],
    "jsx-a11y/label-has-for": Array [
      "off",
    ],
    "jsx-a11y/media-has-caption": Array [
      "error",
    ],
    "jsx-a11y/mouse-events-have-key-events": Array [
      "error",
    ],
    "jsx-a11y/no-access-key": Array [
      "error",
    ],
    "jsx-a11y/no-autofocus": Array [
      "error",
    ],
    "jsx-a11y/no-distracting-elements": Array [
      "error",
    ],
    "jsx-a11y/no-interactive-element-to-noninteractive-role": Array [
      "error",
      Object {
        "canvas": Array [
          "img",
        ],
        "tr": Array [
          "none",
          "presentation",
        ],
      },
    ],
    "jsx-a11y/no-noninteractive-element-interactions": Array [
      "error",
      Object {
        "alert": Array [
          "onKeyUp",
          "onKeyDown",
          "onKeyPress",
        ],
        "body": Array [
          "onError",
          "onLoad",
        ],
        "dialog": Array [
          "onKeyUp",
          "onKeyDown",
          "onKeyPress",
        ],
        "handlers": Array [
          "onClick",
          "onError",
          "onLoad",
          "onMouseDown",
          "onMouseUp",
          "onKeyPress",
          "onKeyDown",
          "onKeyUp",
        ],
        "iframe": Array [
          "onError",
          "onLoad",
        ],
        "img": Array [
          "onError",
          "onLoad",
        ],
      },
    ],
    "jsx-a11y/no-noninteractive-element-to-interactive-role": Array [
      "error",
      Object {
        "fieldset": Array [
          "radiogroup",
          "presentation",
        ],
        "li": Array [
          "menuitem",
          "option",
          "row",
          "tab",
          "treeitem",
        ],
        "ol": Array [
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "tablist",
          "tree",
          "treegrid",
        ],
        "table": Array [
          "grid",
        ],
        "td": Array [
          "gridcell",
        ],
        "ul": Array [
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "tablist",
          "tree",
          "treegrid",
        ],
      },
    ],
    "jsx-a11y/no-noninteractive-tabindex": Array [
      "error",
      Object {
        "allowExpressionValues": true,
        "roles": Array [
          "tabpanel",
        ],
        "tags": Array [],
      },
    ],
    "jsx-a11y/no-onchange": Array [
      "off",
    ],
    "jsx-a11y/no-redundant-roles": Array [
      "error",
    ],
    "jsx-a11y/no-static-element-interactions": Array [
      "error",
      Object {
        "allowExpressionValues": true,
        "handlers": Array [
          "onClick",
          "onMouseDown",
          "onMouseUp",
          "onKeyPress",
          "onKeyDown",
          "onKeyUp",
        ],
      },
    ],
    "jsx-a11y/role-has-required-aria-props": Array [
      "error",
    ],
    "jsx-a11y/role-supports-aria-props": Array [
      "error",
    ],
    "jsx-a11y/scope": Array [
      "error",
    ],
    "jsx-a11y/tabindex-no-positive": Array [
      "error",
    ],
    "jsx-quotes": Array [
      "off",
    ],
    "key-spacing": Array [
      "off",
    ],
    "keyword-spacing": Array [
      "off",
    ],
    "linebreak-style": Array [
      "off",
    ],
    "lines-around-comment": Array [
      0,
    ],
    "lines-around-directive": Array [
      "error",
      Object {
        "after": "always",
        "before": "always",
      },
    ],
    "max-classes-per-file": Array [
      "error",
      1,
    ],
    "max-len": Array [
      0,
    ],
    "multiline-ternary": Array [
      "off",
    ],
    "new-cap": Array [
      "error",
      Object {
        "capIsNew": false,
        "capIsNewExceptions": Array [
          "Immutable.Map",
          "Immutable.Set",
          "Immutable.List",
        ],
        "newIsCap": true,
        "newIsCapExceptions": Array [],
        "properties": true,
      },
    ],
    "new-parens": Array [
      "off",
    ],
    "newline-per-chained-call": Array [
      "off",
    ],
    "no-alert": Array [
      "warn",
    ],
    "no-array-constructor": Array [
      "off",
    ],
    "no-arrow-condition": Array [
      "off",
    ],
    "no-async-promise-executor": Array [
      "error",
    ],
    "no-await-in-loop": Array [
      "error",
    ],
    "no-bitwise": Array [
      "error",
    ],
    "no-buffer-constructor": Array [
      "error",
    ],
    "no-caller": Array [
      "error",
    ],
    "no-case-declarations": Array [
      "error",
    ],
    "no-class-assign": Array [
      "error",
    ],
    "no-comma-dangle": Array [
      "off",
    ],
    "no-compare-neg-zero": Array [
      "error",
    ],
    "no-cond-assign": Array [
      "error",
      "always",
    ],
    "no-confusing-arrow": Array [
      0,
    ],
    "no-console": Array [
      "warn",
    ],
    "no-const-assign": Array [
      "off",
    ],
    "no-constant-condition": Array [
      "warn",
    ],
    "no-continue": Array [
      "error",
    ],
    "no-control-regex": Array [
      "error",
    ],
    "no-debugger": Array [
      "error",
    ],
    "no-delete-var": Array [
      "error",
    ],
    "no-dupe-args": Array [
      "off",
    ],
    "no-dupe-class-members": Array [
      "off",
    ],
    "no-dupe-else-if": Array [
      "error",
    ],
    "no-dupe-keys": Array [
      "off",
    ],
    "no-duplicate-case": Array [
      "error",
    ],
    "no-duplicate-imports": Array [
      "off",
    ],
    "no-else-return": Array [
      "error",
      Object {
        "allowElseIf": true,
      },
    ],
    "no-empty": Array [
      "error",
    ],
    "no-empty-character-class": Array [
      "error",
    ],
    "no-empty-function": Array [
      "off",
      Object {
        "allow": Array [
          "arrowFunctions",
          "functions",
          "methods",
        ],
      },
    ],
    "no-empty-pattern": Array [
      "error",
    ],
    "no-eval": Array [
      "error",
    ],
    "no-ex-assign": Array [
      "error",
    ],
    "no-extend-native": Array [
      "error",
    ],
    "no-extra-bind": Array [
      "error",
    ],
    "no-extra-boolean-cast": Array [
      "error",
    ],
    "no-extra-label": Array [
      "error",
    ],
    "no-extra-parens": Array [
      "off",
    ],
    "no-extra-semi": Array [
      "off",
    ],
    "no-fallthrough": Array [
      "error",
    ],
    "no-floating-decimal": Array [
      "off",
    ],
    "no-func-assign": Array [
      "off",
    ],
    "no-global-assign": Array [
      "error",
    ],
    "no-implied-eval": Array [
      "off",
    ],
    "no-import-assign": Array [
      "off",
    ],
    "no-inner-declarations": Array [
      "error",
    ],
    "no-invalid-regexp": Array [
      "error",
    ],
    "no-irregular-whitespace": Array [
      "error",
    ],
    "no-iterator": Array [
      "error",
    ],
    "no-label-var": Array [
      "error",
    ],
    "no-labels": Array [
      "error",
      Object {
        "allowLoop": false,
        "allowSwitch": false,
      },
    ],
    "no-lone-blocks": Array [
      "error",
    ],
    "no-lonely-if": Array [
      "error",
    ],
    "no-loop-func": Array [
      "error",
    ],
    "no-loss-of-precision": Array [
      "off",
    ],
    "no-misleading-character-class": Array [
      "error",
    ],
    "no-mixed-operators": Array [
      0,
    ],
    "no-mixed-spaces-and-tabs": Array [
      "off",
    ],
    "no-multi-assign": Array [
      "error",
    ],
    "no-multi-spaces": Array [
      "off",
    ],
    "no-multi-str": Array [
      "error",
    ],
    "no-multiple-empty-lines": Array [
      "off",
    ],
    "no-nested-ternary": Array [
      "error",
    ],
    "no-new": Array [
      "error",
    ],
    "no-new-func": Array [
      "error",
    ],
    "no-new-object": Array [
      "error",
    ],
    "no-new-require": Array [
      "error",
    ],
    "no-new-symbol": Array [
      "off",
    ],
    "no-new-wrappers": Array [
      "error",
    ],
    "no-nonoctal-decimal-escape": Array [
      "error",
    ],
    "no-obj-calls": Array [
      "off",
    ],
    "no-octal": Array [
      "error",
    ],
    "no-octal-escape": Array [
      "error",
    ],
    "no-param-reassign": Array [
      "error",
      Object {
        "props": false,
      },
    ],
    "no-path-concat": Array [
      "error",
    ],
    "no-plusplus": Array [
      "error",
    ],
    "no-proto": Array [
      "error",
    ],
    "no-prototype-builtins": Array [
      "off",
    ],
    "no-redeclare": Array [
      "off",
    ],
    "no-regex-spaces": Array [
      "error",
    ],
    "no-reserved-keys": Array [
      "off",
    ],
    "no-restricted-globals": Array [
      "error",
      "isFinite",
      "isNaN",
      "addEventListener",
      "blur",
      "close",
      "closed",
      "confirm",
      "defaultStatus",
      "event",
      "external",
      "defaultstatus",
      "find",
      "focus",
      "frameElement",
      "frames",
      "history",
      "innerHeight",
      "innerWidth",
      "length",
      "location",
      "locationbar",
      "menubar",
      "moveBy",
      "moveTo",
      "name",
      "onblur",
      "onerror",
      "onfocus",
      "onload",
      "onresize",
      "onunload",
      "open",
      "opener",
      "opera",
      "outerHeight",
      "outerWidth",
      "pageXOffset",
      "pageYOffset",
      "parent",
      "print",
      "removeEventListener",
      "resizeBy",
      "resizeTo",
      "screen",
      "screenLeft",
      "screenTop",
      "screenX",
      "screenY",
      "scroll",
      "scrollbars",
      "scrollBy",
      "scrollTo",
      "scrollX",
      "scrollY",
      "self",
      "status",
      "statusbar",
      "stop",
      "toolbar",
      "top",
    ],
    "no-restricted-imports": Array [
      "error",
    ],
    "no-restricted-properties": Array [
      "error",
      Object {
        "message": "arguments.callee is deprecated",
        "object": "arguments",
        "property": "callee",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "global",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "self",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "window",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "global",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "self",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "window",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineGetter__",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineSetter__",
      },
      Object {
        "message": "Use the exponentiation operator (**) instead.",
        "object": "Math",
        "property": "pow",
      },
    ],
    "no-restricted-syntax": Array [
      "error",
      Object {
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.",
        "selector": "ForInStatement",
      },
      Object {
        "message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.",
        "selector": "ForOfStatement",
      },
      Object {
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.",
        "selector": "LabeledStatement",
      },
      Object {
        "message": "\`with\` is disallowed in strict mode because it makes code impossible to predict and optimize.",
        "selector": "WithStatement",
      },
      Object {
        "message": "Property setters are not allowed",
        "selector": "MethodDefinition[kind=\\"set\\"]",
      },
      Object {
        "message": "Property getters are not allowed",
        "selector": "MethodDefinition[kind=\\"get\\"]",
      },
    ],
    "no-return-assign": Array [
      "error",
      "except-parens",
    ],
    "no-return-await": Array [
      "error",
    ],
    "no-script-url": Array [
      "error",
    ],
    "no-self-assign": Array [
      "error",
    ],
    "no-self-compare": Array [
      "error",
    ],
    "no-sequences": Array [
      "error",
    ],
    "no-setter-return": Array [
      "off",
    ],
    "no-shadow": Array [
      "off",
      Object {
        "builtinGlobals": false,
        "hoist": "all",
      },
    ],
    "no-shadow-restricted-names": Array [
      "error",
    ],
    "no-space-before-semi": Array [
      "off",
    ],
    "no-spaced-func": Array [
      "off",
    ],
    "no-sparse-arrays": Array [
      "error",
    ],
    "no-tabs": Array [
      0,
    ],
    "no-template-curly-in-string": Array [
      "error",
    ],
    "no-this-before-super": Array [
      "off",
    ],
    "no-throw-literal": Array [
      "error",
    ],
    "no-trailing-spaces": Array [
      "off",
    ],
    "no-undef": Array [
      "off",
    ],
    "no-undef-init": Array [
      "error",
    ],
    "no-underscore-dangle": Array [
      "error",
      Object {
        "allowAfterSuper": true,
        "allowAfterThis": true,
        "allowAfterThisConstructor": false,
        "allowFunctionParams": true,
        "enforceInMethodNames": false,
      },
    ],
    "no-unexpected-multiline": Array [
      0,
    ],
    "no-unneeded-ternary": Array [
      "error",
      Object {
        "defaultAssignment": false,
      },
    ],
    "no-unreachable": Array [
      "off",
    ],
    "no-unsafe-finally": Array [
      "error",
    ],
    "no-unsafe-negation": Array [
      "off",
    ],
    "no-unsafe-optional-chaining": Array [
      "error",
    ],
    "no-unused-expressions": Array [
      "off",
    ],
    "no-unused-labels": Array [
      "error",
    ],
    "no-unused-vars": Array [
      "off",
      Object {
        "args": "after-used",
        "ignoreRestSiblings": true,
        "vars": "all",
      },
    ],
    "no-use-before-define": Array [
      "off",
      "nofunc",
    ],
    "no-useless-backreference": Array [
      "error",
    ],
    "no-useless-catch": Array [
      "error",
    ],
    "no-useless-computed-key": Array [
      "error",
    ],
    "no-useless-concat": Array [
      "error",
    ],
    "no-useless-constructor": Array [
      "off",
    ],
    "no-useless-escape": Array [
      "error",
    ],
    "no-useless-rename": Array [
      "error",
      Object {
        "ignoreDestructuring": false,
        "ignoreExport": false,
        "ignoreImport": false,
      },
    ],
    "no-useless-return": Array [
      "error",
    ],
    "no-var": Array [
      "error",
    ],
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "no-whitespace-before-property": Array [
      "off",
    ],
    "no-with": Array [
      "error",
    ],
    "no-wrap-func": Array [
      "off",
    ],
    "nonblock-statement-body-position": Array [
      "off",
    ],
    "object-curly-newline": Array [
      "off",
    ],
    "object-curly-spacing": Array [
      "off",
    ],
    "object-property-newline": Array [
      "off",
    ],
    "object-shorthand": Array [
      "error",
      "always",
      Object {
        "avoidQuotes": true,
        "ignoreConstructors": false,
      },
    ],
    "one-var": Array [
      "error",
      "never",
    ],
    "one-var-declaration-per-line": Array [
      "off",
    ],
    "operator-assignment": Array [
      "error",
      "always",
    ],
    "operator-linebreak": Array [
      "off",
    ],
    "padded-blocks": Array [
      "off",
    ],
    "padding-line-between-statements": Array [
      "off",
      Object {
        "blankLine": "always",
        "next": "return",
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": Array [
          "block",
          "block-like",
          "class",
          "const",
          "let",
          "var",
        ],
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": "*",
        "prev": Array [
          "block",
          "block-like",
          "class",
          "const",
          "let",
          "var",
        ],
      },
      Object {
        "blankLine": "any",
        "next": Array [
          "const",
          "let",
          "var",
        ],
        "prev": Array [
          "const",
          "let",
          "var",
        ],
      },
      Object {
        "blankLine": "any",
        "next": Array [
          "case",
        ],
        "prev": Array [
          "case",
        ],
      },
    ],
    "prefer-arrow-callback": Array [
      "off",
      Object {
        "allowNamedFunctions": false,
        "allowUnboundThis": true,
      },
    ],
    "prefer-const": Array [
      "error",
      Object {
        "destructuring": "any",
        "ignoreReadBeforeAssign": true,
      },
    ],
    "prefer-numeric-literals": Array [
      "error",
    ],
    "prefer-rest-params": Array [
      "error",
    ],
    "prefer-spread": Array [
      "error",
    ],
    "prefer-template": Array [
      "error",
    ],
    "prettier/prettier": Array [
      "warn",
      Object {
        "printWidth": 100,
        "singleQuote": true,
        "trailingComma": "all",
      },
      Object {
        "usePrettierrc": false,
      },
    ],
    "quote-props": Array [
      "off",
    ],
    "quotes": Array [
      0,
    ],
    "radix": Array [
      "error",
    ],
    "react-hooks/exhaustive-deps": Array [
      "error",
    ],
    "react-hooks/rules-of-hooks": Array [
      "error",
    ],
    "react/destructuring-assignment": Array [
      "error",
    ],
    "react/display-name": Array [
      "off",
    ],
    "react/jsx-child-element-spacing": Array [
      "off",
    ],
    "react/jsx-closing-bracket-location": Array [
      "off",
    ],
    "react/jsx-closing-tag-location": Array [
      "off",
    ],
    "react/jsx-curly-brace-presence": Array [
      "error",
      Object {
        "children": "never",
        "propElementValues": "always",
        "props": "never",
      },
    ],
    "react/jsx-curly-newline": Array [
      "off",
    ],
    "react/jsx-curly-spacing": Array [
      "off",
    ],
    "react/jsx-equals-spacing": Array [
      "off",
    ],
    "react/jsx-first-prop-new-line": Array [
      "off",
    ],
    "react/jsx-fragments": Array [
      "error",
      "syntax",
    ],
    "react/jsx-indent": Array [
      "off",
    ],
    "react/jsx-indent-props": Array [
      "off",
    ],
    "react/jsx-key": Array [
      2,
    ],
    "react/jsx-max-props-per-line": Array [
      "off",
    ],
    "react/jsx-newline": Array [
      "off",
    ],
    "react/jsx-no-bind": Array [
      "error",
      Object {
        "allowArrowFunctions": true,
        "allowBind": false,
        "allowFunctions": false,
        "ignoreDOMComponents": false,
        "ignoreRefs": false,
      },
    ],
    "react/jsx-no-comment-textnodes": Array [
      2,
    ],
    "react/jsx-no-duplicate-props": Array [
      2,
    ],
    "react/jsx-no-target-blank": Array [
      2,
    ],
    "react/jsx-no-undef": Array [
      2,
    ],
    "react/jsx-no-useless-fragment": Array [
      "error",
    ],
    "react/jsx-one-expression-per-line": Array [
      "off",
    ],
    "react/jsx-pascal-case": Array [
      "error",
    ],
    "react/jsx-props-no-multi-spaces": Array [
      "off",
    ],
    "react/jsx-sort-props": Array [
      "warn",
    ],
    "react/jsx-space-before-closing": Array [
      "off",
    ],
    "react/jsx-tag-spacing": Array [
      "off",
    ],
    "react/jsx-uses-react": Array [
      2,
    ],
    "react/jsx-uses-vars": Array [
      2,
    ],
    "react/jsx-wrap-multilines": Array [
      "off",
    ],
    "react/no-children-prop": Array [
      2,
    ],
    "react/no-danger-with-children": Array [
      2,
    ],
    "react/no-deprecated": Array [
      2,
    ],
    "react/no-direct-mutation-state": Array [
      2,
    ],
    "react/no-find-dom-node": Array [
      2,
    ],
    "react/no-is-mounted": Array [
      2,
    ],
    "react/no-redundant-should-component-update": Array [
      "error",
    ],
    "react/no-render-return-value": Array [
      2,
    ],
    "react/no-string-refs": Array [
      2,
    ],
    "react/no-this-in-sfc": Array [
      "error",
    ],
    "react/no-unescaped-entities": Array [
      "error",
      Object {
        "forbid": Array [
          Object {
            "alternatives": Array [
              "&gt;",
            ],
            "char": ">",
          },
          Object {
            "alternatives": Array [
              "&#125;",
            ],
            "char": "}",
          },
        ],
      },
    ],
    "react/no-unknown-property": Array [
      2,
    ],
    "react/no-unsafe": Array [
      "error",
    ],
    "react/no-unused-state": Array [
      "error",
    ],
    "react/prefer-es6-class": Array [
      "error",
    ],
    "react/prefer-read-only-props": Array [
      "error",
    ],
    "react/prop-types": Array [
      "off",
    ],
    "react/react-in-jsx-scope": Array [
      2,
    ],
    "react/require-render-return": Array [
      2,
    ],
    "react/self-closing-comp": Array [
      "error",
    ],
    "react/style-prop-object": Array [
      "error",
    ],
    "require-await": Array [
      "off",
    ],
    "require-yield": Array [
      "error",
    ],
    "rest-spread-spacing": Array [
      "off",
    ],
    "semi": Array [
      "off",
    ],
    "semi-spacing": Array [
      "off",
    ],
    "semi-style": Array [
      "off",
    ],
    "sort-imports": Array [
      "error",
      Object {
        "allowSeparatedGroups": false,
        "ignoreCase": true,
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false,
      },
    ],
    "sort-keys": Array [
      "off",
    ],
    "space-after-function-name": Array [
      "off",
    ],
    "space-after-keywords": Array [
      "off",
    ],
    "space-before-blocks": Array [
      "off",
    ],
    "space-before-function-paren": Array [
      "off",
    ],
    "space-before-function-parentheses": Array [
      "off",
    ],
    "space-before-keywords": Array [
      "off",
    ],
    "space-in-brackets": Array [
      "off",
    ],
    "space-in-parens": Array [
      "off",
    ],
    "space-infix-ops": Array [
      "off",
    ],
    "space-return-throw-case": Array [
      "off",
    ],
    "space-unary-ops": Array [
      "off",
    ],
    "space-unary-word-ops": Array [
      "off",
    ],
    "spaced-comment": Array [
      "warn",
      "always",
      Object {
        "block": Object {
          "balanced": true,
          "exceptions": Array [
            "-",
            "+",
          ],
          "markers": Array [
            "=",
            "!",
          ],
        },
        "line": Object {
          "exceptions": Array [
            "-",
            "+",
          ],
          "markers": Array [
            "=",
            "!",
          ],
        },
      },
    ],
    "standard/array-bracket-even-spacing": Array [
      "off",
    ],
    "standard/computed-property-even-spacing": Array [
      "off",
    ],
    "standard/object-curly-even-spacing": Array [
      "off",
    ],
    "strict": Array [
      "error",
    ],
    "switch-case/newline-between-switch-case": Array [
      "warn",
      "always",
      Object {
        "fallthrough": "never",
      },
    ],
    "switch-colon-spacing": Array [
      "off",
    ],
    "symbol-description": Array [
      "error",
    ],
    "template-curly-spacing": Array [
      "off",
    ],
    "template-tag-spacing": Array [
      "off",
    ],
    "unicode-bom": Array [
      "off",
    ],
    "unicorn/empty-brace-spaces": Array [
      "off",
    ],
    "unicorn/no-nested-ternary": Array [
      "off",
    ],
    "unicorn/number-literal-case": Array [
      "off",
    ],
    "use-isnan": Array [
      "error",
    ],
    "valid-jsdoc": Array [
      "off",
      Object {
        "requireParamDescription": false,
        "requireParamType": true,
        "requireReturn": true,
        "requireReturnDescription": false,
        "requireReturnType": true,
      },
    ],
    "valid-typeof": Array [
      "off",
      Object {
        "requireStringLiterals": true,
      },
    ],
    "vars-on-top": Array [
      "error",
    ],
    "vue/array-bracket-newline": Array [
      "off",
    ],
    "vue/array-bracket-spacing": Array [
      "off",
    ],
    "vue/arrow-spacing": Array [
      "off",
    ],
    "vue/block-spacing": Array [
      "off",
    ],
    "vue/block-tag-newline": Array [
      "off",
    ],
    "vue/brace-style": Array [
      "off",
    ],
    "vue/comma-dangle": Array [
      "off",
    ],
    "vue/comma-spacing": Array [
      "off",
    ],
    "vue/comma-style": Array [
      "off",
    ],
    "vue/dot-location": Array [
      "off",
    ],
    "vue/func-call-spacing": Array [
      "off",
    ],
    "vue/html-closing-bracket-newline": Array [
      "off",
    ],
    "vue/html-closing-bracket-spacing": Array [
      "off",
    ],
    "vue/html-end-tags": Array [
      "off",
    ],
    "vue/html-indent": Array [
      "off",
    ],
    "vue/html-quotes": Array [
      "off",
    ],
    "vue/html-self-closing": Array [
      0,
    ],
    "vue/key-spacing": Array [
      "off",
    ],
    "vue/keyword-spacing": Array [
      "off",
    ],
    "vue/max-attributes-per-line": Array [
      "off",
    ],
    "vue/max-len": Array [
      0,
    ],
    "vue/multiline-html-element-content-newline": Array [
      "off",
    ],
    "vue/mustache-interpolation-spacing": Array [
      "off",
    ],
    "vue/no-extra-parens": Array [
      "off",
    ],
    "vue/no-multi-spaces": Array [
      "off",
    ],
    "vue/no-spaces-around-equal-signs-in-attribute": Array [
      "off",
    ],
    "vue/object-curly-newline": Array [
      "off",
    ],
    "vue/object-curly-spacing": Array [
      "off",
    ],
    "vue/object-property-newline": Array [
      "off",
    ],
    "vue/operator-linebreak": Array [
      "off",
    ],
    "vue/script-indent": Array [
      "off",
    ],
    "vue/singleline-html-element-content-newline": Array [
      "off",
    ],
    "vue/space-in-parens": Array [
      "off",
    ],
    "vue/space-infix-ops": Array [
      "off",
    ],
    "vue/space-unary-ops": Array [
      "off",
    ],
    "vue/template-curly-spacing": Array [
      "off",
    ],
    "wrap-iife": Array [
      "off",
    ],
    "wrap-regex": Array [
      "off",
    ],
    "yield-star-spacing": Array [
      "off",
    ],
    "yoda": Array [
      "error",
    ],
  },
  "settings": Object {
    "import/extensions": Array [
      ".ts",
      ".tsx",
      ".js",
      ".jsx",
    ],
    "import/external-module-folders": Array [
      "node_modules",
      "node_modules/@types",
    ],
    "import/parsers": Object {
      "@typescript-eslint/parser": Array [
        ".ts",
        ".tsx",
      ],
    },
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".ts",
          ".tsx",
          ".js",
          ".jsx",
        ],
      },
      "typescript": Object {
        "alwaysTryTypes": true,
      },
    },
    "react": Object {
      "version": "detect",
    },
  },
}
`;
